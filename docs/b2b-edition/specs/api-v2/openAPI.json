{
  "swagger": "2.0",
  "info": {
    "title": "Open API",
    "description": "BigCommerce B2B Edition Open API Docs",
    "license": {},
    "version": "v3"
  },
  "host": "api-b2b.bigcommerce.com",
  "schemes": [
    "https"
  ],
  "basePath": "/api/v2/io",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "authToken": {
      "name": "authToken",
      "type": "apiKey",
      "in": "header"
    }
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "tags": [
    {
      "name": "Address"
    },
    {
      "name": "Company"
    },
    {
      "name": "Order"
    },
    {
      "name": "Payment"
    },
    {
      "name": "Proxy"
    },
    {
      "name": "SalesRep"
    },
    {
      "name": "User"
    }
  ],
  "paths": {
    "/addresses/country_state": {
      "get": {
        "operationId": "addresses_country_state_list",
        "summary": "Convert Country State",
        "description": "Convert country/state name to their code or code to name",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header",
            "required": true,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code/name",
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Country code/name",
            "type": "string"
          },
          {
            "name": "search_type",
            "in": "query",
            "description": "Convert type, code means transfer the input country/state name to their code, name means transfer the input country/state code to their name",
            "type": "string",
            "enum": [
              "code",
              "name"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Response success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "countryCode": {
                      "description": "The converted country code from input country name",
                      "type": "string"
                    },
                    "countryName": {
                      "description": "The converted country name from input country code",
                      "type": "string"
                    },
                    "stateCode": {
                      "description": "The converted state code from input state name",
                      "type": "string"
                    },
                    "stateName": {
                      "description": "The converted state name from input country code",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "countryName": "United States",
                  "stateName": "New York"
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Response record not found",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {},
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Address"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'localhost:8000/api/v2/io/addresses/country_state?search_type=code&country=United%20States&state=New%20York'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiMWk2enB4cGUzZyIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoia2lkby56aGFvQGJ1bmRsZWIyYi5uZXQifQ.fB8TtxpTDdhOUmR_7gYV16w9nV3Kp0US52W8JMHG1js'                         --header 'Cookie: csrftoken=1r2Sm1HUb6NglzK7V5QJlcS7YlptUtVVGKCu9AbcYeyrKNy9erCk0SDDZnI8YKz7'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"localhost:8000/api/v2/io/addresses/country_state?search_type=name&country=US&state=NY\"\n\npayload={}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiMWk2enB4cGUzZyIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoia2lkby56aGFvQGJ1bmRsZWIyYi5uZXQifQ.fB8TtxpTDdhOUmR_7gYV16w9nV3Kp0US52W8JMHG1js',\n  'Cookie': 'csrftoken=1r2Sm1HUb6NglzK7V5QJlcS7YlptUtVVGKCu9AbcYeyrKNy9erCk0SDDZnI8YKz7'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiMWk2enB4cGUzZyIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoia2lkby56aGFvQGJ1bmRsZWIyYi5uZXQifQ.fB8TtxpTDdhOUmR_7gYV16w9nV3Kp0US52W8JMHG1js\");\nmyHeaders.append(\"Cookie\", \"csrftoken=1r2Sm1HUb6NglzK7V5QJlcS7YlptUtVVGKCu9AbcYeyrKNy9erCk0SDDZnI8YKz7\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"localhost:8000/api/v2/io/addresses/country_state?search_type=code&country=United States&state=New York\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": []
    },
    "/companies/convert-from-customer-group": {
      "post": {
        "operationId": "companies_convert-from-customer-group_create",
        "summary": "Create Company From CG",
        "description": "Create company from bigCommerce customer group. This API only enable for non-MSF store.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "acceptWelcomeEmail": {
                      "description": "(0=will not receive email 1=will receive email)",
                      "type": "string",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "addressLine1": {
                      "description": "Address string line 1",
                      "type": "string"
                    },
                    "addressLine2": {
                      "description": "Address string line 2",
                      "type": "string"
                    },
                    "adminEmail": {
                      "description": "Company admin user email",
                      "type": "string"
                    },
                    "adminFirstName": {
                      "description": "Company admin user's first name",
                      "type": "string"
                    },
                    "adminLastName": {
                      "description": "Company admin user's last name",
                      "type": "string"
                    },
                    "adminPhoneNumber": {
                      "description": "Company admin user phone number",
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "companyEmail": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "customerGroupId": {
                      "description": "BC customer group ID",
                      "type": "string"
                    },
                    "extraFields": {
                      "description": "To use customized extra fields with field names you need to first add company extra fields in Settings > Extra fields inside B2B edition. eg. If you want to create a new company with an extra integer field named licenseNO, you can use this structure [{'fieldName': 'LicenseNO', 'fieldValue': 10342340323}] in the request body.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fieldName": {
                            "type": "string"
                          },
                          "fieldValue": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "extraInt1": {
                      "description": "The default extra integer field, you can also use this field to create a company with it.(include extraInt1 ~ extraInt5, extraStr1 ~ extraStr5, extraText) \n\n But there is an important point you need to know. After the B3 team helped you configure the custom extra fields, if you still need to use these default fields, you need to know the correspondence between the custom extra fields and the default extra fields. Otherwise, when you pass in both custom and default extra fields, if the custom extra field is bound to the default extra field you pass in, the value of the custom extra field will override the default extra field.",
                      "type": "number"
                    },
                    "extraInt2": {
                      "description": "Company create extra integer value, please refer to the description of extraInt1 above.",
                      "type": "number"
                    },
                    "extraInt3": {
                      "description": "Company create extra integer value, please refer to the description of extraInt1 above.",
                      "type": "number"
                    },
                    "extraInt4": {
                      "description": "Company create extra integer value, please refer to the description of extraInt1 above.",
                      "type": "number"
                    },
                    "extraInt5": {
                      "description": "Company create extra integer value, please refer to the description of extraInt1 above.",
                      "type": "number"
                    },
                    "extraStr1": {
                      "description": "Company create extra string value, please refer to the description of extraInt1 above.",
                      "type": "string"
                    },
                    "extraStr2": {
                      "description": "Company create extra string value, please refer to the description of extraInt1 above.",
                      "type": "string"
                    },
                    "extraStr3": {
                      "description": "Company create extra string value, please refer to the description of extraInt1 above.",
                      "type": "string"
                    },
                    "extraStr4": {
                      "description": "Company create extra string value, please refer to the description of extraInt1 above.",
                      "type": "string"
                    },
                    "extraStr5": {
                      "description": "Company create extra string value, please refer to the description of extraInt1 above.",
                      "type": "string"
                    },
                    "extraText": {
                      "description": "Company create extra text value, please refer to the description of extraInt1 above.",
                      "type": "string"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "adminEmail",
                    "adminFirstName",
                    "adminLastName",
                    "companyEmail",
                    "companyName",
                    "customerGroupId",
                    "phoneNumber"
                  ]
                },
                {
                  "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/user_extra_field_values.yaml"
                }
              ]
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Created company Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "companyId": "2"
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40010,
                "message": "Enter a valid email address."
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Customer group does not exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'https://api-b2b.bigcommerce.com/api/v2/io/companies/convert-from-customer-group'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"companyName\": \"test3.23-22\",\n    \"phoneNumber\": 122331212,\n    \"companyEmail\": \"test@test.com\",\n    \"addressLine1\": \"xxxx\",\n    \"addressLine2\": \"\",\n    \"city\": \"xxxx\",\n    \"state\": \"xxxx\",\n    \"zipCode\": \"12333\",\n    \"country\": \"China\",\n    \"adminFirstName\": \"test\",\n    \"adminLastName\": \"sdfsd\",\n    \"adminEmail\": \"test1@test.com\",\n    \"adminPhoneNumber\": \"3838288282\",\n    \"customerGroupId\": 4\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/convert-from-customer-group\"\n\npayload = {\n    \"companyName\": \"test3.23-22\",\n    \"phoneNumber\": 122331212,\n    \"companyEmail\": \"test@test.com\",\n    \"addressLine1\": \"xxxx\",\n    \"addressLine2\": \"\",\n    \"city\": \"xxxx\",\n    \"state\": \"xxxx\",\n    \"zipCode\": \"12333\",\n    \"country\": \"China\",\n    \"adminFirstName\": \"test\",\n    \"adminLastName\": \"sdfsd\",\n    \"adminEmail\": \"test1@test.com\",\n    \"adminPhoneNumber\": \"3838288282\",\n    \"customerGroupId\": 4\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\nresponse = requests.request(\"POST\", url, headers=headers, data = payload)\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"companyName\":\"test3.23-22\",\"phoneNumber\":122331212,\"companyEmail\":\"test@test.com\",\"addressLine1\":\"xxxx\",\"addressLine2\":\"\",\"city\":\"xxxx\",\"state\":\"xxxx\",\"zipCode\":\"12333\",\"country\":\"China\",\"adminFirstName\":\"test\",\"adminLastName\":\"sdfsd\",\"adminEmail\":\"test1@test.com\",\"adminPhoneNumber\":\"3838288282\",\"customerGroupId\":4});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/convert-from-customer-group\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": []
    },
    "/companies/users/{customerId}/orders": {
      "post": {
        "operationId": "companies_users_orders_create",
        "summary": "Create Order Without CompanyID",
        "description": "Create an order from bigCommerce, you must known order id",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "description": "BigCommerce order id",
                      "type": "string"
                    },
                    "poNumber": {
                      "description": "PoNumber",
                      "type": "string"
                    },
                    "totalIncTax": {
                      "description": "Total incTax",
                      "type": "number"
                    }
                  },
                  "required": [
                    "orderId",
                    "totalIncTax"
                  ]
                },
                {
                  "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/order/order-extra.yaml"
                }
              ]
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Created order id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "orderId": 2
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40010,
                "data": {
                  "bc_order_id": "orderId can not be null"
                },
                "message": "Bad Request Error"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'https://api-b2b.bigcommerce.com/api/v2/io/companies/users/12/orders'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"totalIncTax\": \"111\",\n    \"orderId\": \"111\"\n}' \n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/users/12/orders\"\n\npayload = {\n    \"totalIncTax\": \"111\",\n    \"orderId\": \"111\"\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"totalIncTax\":\"111\",\"orderId\":\"111\"});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/users/12/orders\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/addresses": {
      "get": {
        "operationId": "companies_addresses_list",
        "summary": "Get Company Addresses",
        "description": "Get all addresses for a company",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          },
          {
            "name": "minLastModifiedTime",
            "in": "query",
            "description": "Company filter condition: timestamp string e.g. 01/01/2000",
            "type": "number"
          },
          {
            "name": "maxLastModifiedTime",
            "in": "query",
            "description": "Company filter condition: timestamp string e.g. 01/01/2000",
            "type": "number"
          },
          {
            "name": "minLastCreatedTime",
            "in": "query",
            "description": "Company filter condition: timestamp string e.g. 01/01/2000",
            "type": "number"
          },
          {
            "name": "maxLastCreatedTime",
            "in": "query",
            "description": "Company filter condition: timestamp string e.g. 01/01/2000",
            "type": "number"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Company query string",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Address first name filter",
            "type": "number"
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Address first name filter",
            "type": "number"
          },
          {
            "name": "address",
            "in": "query",
            "description": "Address line 1 filter",
            "type": "number"
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address city filter",
            "type": "number"
          },
          {
            "name": "country",
            "in": "query",
            "description": "Address country filter",
            "type": "number"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Address state filter",
            "type": "number"
          },
          {
            "name": "zipCode",
            "in": "query",
            "description": "Address zip code filter",
            "type": "number"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Address phone number filter",
            "type": "number"
          },
          {
            "name": "isShipping",
            "in": "query",
            "description": "Address is shipping filter",
            "type": "number"
          },
          {
            "name": "isBilling",
            "in": "query",
            "description": "Address is billing filter",
            "type": "number"
          },
          {
            "type": "array",
            "in": "query",
            "name": "externalId[]",
            "description": "Address external id filter"
          },
          {
            "type": "number",
            "in": "query",
            "name": "offset",
            "description": "Address pagination offset, default 0"
          },
          {
            "type": "number",
            "in": "query",
            "name": "limit",
            "description": "Address pagination limit, default 4. ",
            "minimum": 4,
            "maximum": 500
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "description": "All addresses",
                      "type": "object",
                      "properties": {
                        "[address_id]": {
                          "description": "The map from address ID to address",
                          "type": "object",
                          "properties": {
                            "addressId": {
                              "description": "Identifier for the address (same as URL parameter addressId)",
                              "type": "string"
                            },
                            "addressLine1": {
                              "description": "Typically the street address",
                              "type": "string"
                            },
                            "addressLine2": {
                              "description": "More detailed information about where to deliver mail, such as a suite or office number",
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "object",
                              "properties": {
                                "countryCode": {
                                  "description": "ISO 3166-1 Alpha 2 Country Code",
                                  "type": "string"
                                },
                                "countryName": {
                                  "description": "Human readable country name",
                                  "type": "string"
                                }
                              }
                            },
                            "firstName": {
                              "type": "string"
                            },
                            "isBilling": {
                              "description": "Indicates whether the address is a billing address",
                              "type": "boolean"
                            },
                            "isDefaultBilling": {
                              "type": "boolean"
                            },
                            "isDefaultShipping": {
                              "type": "boolean"
                            },
                            "isShipping": {
                              "description": "Indicates whether the address is a shipping address",
                              "type": "boolean"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "phoneNumber": {
                              "type": "string"
                            },
                            "state": {
                              "type": "object",
                              "properties": {
                                "stateCode": {
                                  "description": "ISO 3166-2 Alpha 2 Country Subdivision Code",
                                  "type": "string"
                                },
                                "stateName": {
                                  "description": "Human readable state (or other subdivision) name",
                                  "type": "string"
                                }
                              }
                            },
                            "zipCode": {
                              "description": "A valid postal code used by the country that was specified",
                              "type": "string"
                            },
                            "externalId": {
                              "type": "string"
                            }
                          }
                        },
                        "defaultBillingId": {
                          "description": "The identifier of the default shipping address",
                          "type": "number"
                        },
                        "defaultShippingId": {
                          "description": "The identifier of the default shipping address",
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "addresses": {
                    "7": {
                      "addressId": "7",
                      "addressLine1": "123 Main Street",
                      "addressLine2": "Blvd",
                      "city": "Austin",
                      "country": {
                        "countryCode": "US",
                        "countryName": "United States"
                      },
                      "firstName": "Jane",
                      "isBilling": true,
                      "isDefaultBilling": true,
                      "isDefaultShipping": true,
                      "isShipping": true,
                      "lastName": "Doe",
                      "phoneNumber": "11111111111",
                      "state": {
                        "stateCode": "TX",
                        "stateName": "Texas"
                      },
                      "zipCode": "78751",
                      "channelId": 1,
                      "channelName": "test"
                    }
                  },
                  "defaultBillingId": "7",
                  "defaultShippingId": "7"
                },
                "message": "SUCCESS"
              }
            }
          }
        },
        "tags": [
          "Address"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/39/addresses?minLastModifiedTime=1/11/2019&maxLastModifiedTime=1/11/2020&minLastCreatedTime=1/11/2019&maxLastCreatedTime=1/11/2020'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json' \n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/39/addresses?minLastModifiedTime=1/11/2019&maxLastModifiedTime=1/11/2020&minLastCreatedTime=1/11/2019&maxLastCreatedTime=1/11/2020\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/39/addresses?minLastModifiedTime=1/11/2019&maxLastModifiedTime=1/11/2020&minLastCreatedTime=1/11/2019&maxLastCreatedTime=1/11/2020\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "post": {
        "operationId": "companies_addresses_create",
        "summary": "Create A Company Address",
        "description": "Creates a new address for a company. You will specify the address fields and the type of address. The address can be billing, shipping, or both. You can also request that this address becomes the new default billing or shipping address for the company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "type": "object",
              "properties": {
                "addressLine1": {
                  "description": "Typically the street address",
                  "type": "string"
                },
                "addressLine2": {
                  "description": "More detailed information about where to deliver mail, such as a suite or office number",
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "object",
                  "properties": {
                    "countryCode": {
                      "description": "ISO 3166-1 Alpha 2 Country Code",
                      "type": "string"
                    },
                    "countryName": {
                      "description": "Human readable country name",
                      "type": "string"
                    }
                  }
                },
                "firstName": {
                  "description": "Address first name",
                  "type": "string"
                },
                "isBilling": {
                  "description": "Indicates whether the address is a billing address",
                  "type": "boolean"
                },
                "isDefaultBilling": {
                  "description": "Indicates whether the address is the default billing address",
                  "type": "boolean"
                },
                "isDefaultShipping": {
                  "description": "Indicates whether the address is the default shipping address",
                  "type": "boolean"
                },
                "isShipping": {
                  "description": "Indicates whether the address is a shipping address",
                  "type": "boolean"
                },
                "label": {
                  "description": "Address label",
                  "type": "string"
                },
                "lastName": {
                  "description": "Address last name",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "Address phone number",
                  "type": "string"
                },
                "state": {
                  "type": "object",
                  "properties": {
                    "stateCode": {
                      "description": "ISO 3166-2 Alpha 2 Country Subdivision Code",
                      "type": "string"
                    },
                    "stateName": {
                      "description": "Human readable state (or other subdivision) name",
                      "type": "string"
                    }
                  }
                },
                "zipCode": {
                  "type": "string"
                },
                "externalId": {
                  "type": "string"
                }
              },
              "required": [
                "addressLine1",
                "city",
                "country",
                "firstName",
                "lastName",
                "state",
                "zipCode"
              ]
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "description": "Response status code",
                  "example": 200
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "addressId": {
                      "type": "integer",
                      "description": "Created address Id",
                      "example": 12
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "Success"
                    }
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "code": 200,
                "data": {
                  "addressId": 12
                },
                "meta": {
                  "message": "Success"
                }
              }
            }
          },
          "422": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "description": "Response status error code",
                  "example": 422
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Message about problem with field 'field'",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "[field]": {
                            "type": "string",
                            "description": "field error description.",
                            "example": "xxx field is too long."
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response error message",
                      "example": "Parameter Error"
                    }
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "code": 422,
                "data": {
                  "errMsg": [
                    {
                      "[field]": "xxx field is too long."
                    }
                  ]
                },
                "meta": {
                  "message": "Parameter Error"
                }
              }
            }
          }
        },
        "tags": [
          "Address"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"label\": \"12dxqwdsa\",\n    \"firstName\": \"Bundle\",\n    \"lastName\": \"Test\",\n    \"addressLine1\": \"Street.1\",\n    \"addressLine2\": \"\",\n    \"city\": \"New York\",\n    \"zipCode\": \"110202\",\n    \"phoneNumber\": \"\",\n    \"country\": {\n        \"countryName\": \"United States\",\n        \"countryCode\": \"US\"\n    },\n    \"state\": {\n        \"stateName\": \"New York\",\n        \"stateCode\": \"NY\"\n    },\n    \"isShipping\": \"1\",\n    \"isBilling\": \"1\",\n    \"isDefaultShipping\": true,\n    \"isDefaultBilling\": true\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\n                        import requests\n\n                        url = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses\"\n\n                        payload = \"{\n    \"label\": \"12dxqwdsa\",\n    \"firstName\": \"Bundle\",\n    \"lastName\": \"Test\",\n    \"addressLine1\": \"Street.1\",\n    \"addressLine2\": \"\",\n    \"city\": \"New York\",\n    \"zipCode\": \"110202\",\n    \"phoneNumber\": \"\",\n    \"country\": {\n        \"countryName\": \"United States\",\n        \"countryCode\": \"US\"\n    },\n    \"state\": {\n        \"stateName\": \"New York\",\n        \"stateCode\": \"NY\"\n    },\n    \"isShipping\": \"1\",\n    \"isBilling\": \"1\",\n    \"isDefaultShipping\": true,\n    \"isDefaultBilling\": true\n}\"\n                        headers = {\n                          'Content-Type': 'application/json'\n                        }\n\n                        response = requests.request(\"POST\", url, headers=headers, data = payload)\n\n                        print(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"label\":\"12dxqwdsa\",\"firstName\":\"Bundle\",\"lastName\":\"Test\",\"addressLine1\":\"Street.1\",\"addressLine2\":\"\",\"city\":\"New York\",\"zipCode\":\"110202\",\"phoneNumber\":\"\",\"country\":{\"countryName\":\"United States\",\"countryCode\":\"US\"},\"state\":{\"stateName\":\"New York\",\"stateCode\":\"NY\"},\"isShipping\":\"1\",\"isBilling\":\"1\",\"isDefaultShipping\":\"1\",\"isDefaultBilling\":\"0\"});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/addresses/{addressId}": {
      "get": {
        "operationId": "companies_addresses_read",
        "summary": "Get A Company Address",
        "description": "Get an address for a company",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "description": "All addresses",
                      "type": "object",
                      "properties": {
                        "addressId": {
                          "description": "Identifier for the address (same as URL parameter addressId)",
                          "type": "string"
                        },
                        "addressLine1": {
                          "description": "Typically the street address",
                          "type": "string"
                        },
                        "addressLine2": {
                          "description": "More detailed information about where to deliver mail, such as a suite or office number",
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "object",
                          "properties": {
                            "countryCode": {
                              "description": "ISO 3166-1 Alpha 2 Country Code",
                              "type": "string"
                            },
                            "countryName": {
                              "description": "Human readable country name",
                              "type": "string"
                            }
                          }
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "isBilling": {
                          "description": "Indicates whether the address is a billing address",
                          "type": "boolean"
                        },
                        "isDefaultBilling": {
                          "type": "boolean"
                        },
                        "isDefaultShipping": {
                          "type": "boolean"
                        },
                        "isShipping": {
                          "description": "Indicates whether the address is a shipping address",
                          "type": "boolean"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "state": {
                          "type": "object",
                          "properties": {
                            "stateCode": {
                              "description": "ISO 3166-2 Alpha 2 Country Subdivision Code",
                              "type": "string"
                            },
                            "stateName": {
                              "description": "Human readable state (or other subdivision) name",
                              "type": "string"
                            }
                          }
                        },
                        "zipCode": {
                          "description": "A valid postal code used by the country that was specified",
                          "type": "string"
                        },
                        "externalId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "addressId": "6",
                  "addressLine1": "123 Main Street",
                  "addressLine2": "Blvd",
                  "city": "Austin",
                  "country": {
                    "countryCode": "US",
                    "countryName": "United States"
                  },
                  "firstName": "Jane",
                  "isBilling": true,
                  "isDefaultBilling": true,
                  "isDefaultShipping": true,
                  "isShipping": true,
                  "lastName": "Doe",
                  "phoneNumber": "11111111111",
                  "state": {
                    "stateCode": "TX",
                    "stateName": "Texas"
                  },
                  "zipCode": "78751",
                  "channelId": 1,
                  "channelName": "test"
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Response record not found",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {},
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Address"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/39/addresses/2'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/39/addresses/2\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/39/addresses/2\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "put": {
        "operationId": "companies_addresses_update",
        "summary": "Update A Company Address",
        "description": "Updates an address for a company. You can change whether the address is for billing, shipping, or both. You can also update the address to be the default billing or shipping address for the company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "type": "object",
              "properties": {
                "addressLine1": {
                  "description": "Typically the street address",
                  "type": "string"
                },
                "addressLine2": {
                  "description": "More detailed information about where to deliver mail, such as a suite or office number",
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "object",
                  "properties": {
                    "countryCode": {
                      "description": "ISO 3166-1 Alpha 2 Country Code",
                      "type": "string"
                    },
                    "countryName": {
                      "description": "Human readable country name",
                      "type": "string"
                    }
                  }
                },
                "firstName": {
                  "description": "Address first name",
                  "type": "string"
                },
                "isBilling": {
                  "description": "Indicates whether the address is a billing address",
                  "type": "boolean"
                },
                "isDefaultBilling": {
                  "description": "Indicates whether the address is the default billing address",
                  "type": "boolean"
                },
                "isDefaultShipping": {
                  "description": "Indicates whether the address is the default shipping address",
                  "type": "boolean"
                },
                "isShipping": {
                  "description": "Indicates whether the address is a shipping address",
                  "type": "boolean"
                },
                "label": {
                  "description": "Address label",
                  "type": "string"
                },
                "lastName": {
                  "description": "Address last name",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "Address phone number",
                  "type": "string"
                },
                "state": {
                  "type": "object",
                  "properties": {
                    "stateCode": {
                      "description": "ISO 3166-2 Alpha 2 Country Subdivision Code",
                      "type": "string"
                    },
                    "stateName": {
                      "description": "Human readable state (or other subdivision) name",
                      "type": "string"
                    }
                  }
                },
                "zipCode": {
                  "type": "string"
                },
                "externalId": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "addressId": {
                      "description": "Updated address Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "addressId": 4
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40010,
                "data": {
                  "address_line_1": "Address not allow None",
                  "last_name": "Last name not allow None"
                },
                "message": "Bad Requests Error"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Address Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Address"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses/4'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"label\": \"12dxqwdsa\",\n    \"firstName\": \"Bundle\",\n    \"lastName\": \"Test\",\n    \"addressLine1\": \"Street.1\",\n    \"addressLine2\": \"\",\n    \"city\": \"New York\",\n    \"zipCode\": \"110202\",\n    \"phoneNumber\": \"\",\n    \"country\": {\n        \"countryName\": \"United States\",\n        \"countryCode\": \"US\"\n    },\n    \"state\": {\n        \"stateName\": \"New York\",\n        \"stateCode\": \"NY\"\n    },\n    \"isShipping\": \"1\",\n    \"isBilling\": \"1\",\n    \"isDefaultShipping\": \"1\",\n    \"isDefaultBilling\": \"0\"\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses/4\"\npayload = {\n    \"label\": \"12dxqwdsa\",\n    \"firstName\": \"Bundle\",\n    \"lastName\": \"Test\",\n    \"addressLine1\": \"Street.1\",\n    \"addressLine2\": \"\",\n    \"city\": \"New York\",\n    \"zipCode\": \"110202\",\n    \"phoneNumber\": \"\",\n    \"country\": {\n        \"countryName\": \"United States\",\n        \"countryCode\": \"US\"\n    },\n    \"state\": {\n        \"stateName\": \"New York\",\n        \"stateCode\": \"NY\"\n    },\n    \"isShipping\": \"1\",\n    \"isBilling\": \"1\",\n    \"isDefaultShipping\": \"1\",\n    \"isDefaultBilling\": \"0\"\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"PUT\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"label\":\"12dxqwdsa\",\"firstName\":\"Bundle\",\"lastName\":\"Test\",\"addressLine1\":\"Street.1\",\"addressLine2\":\"\",\"city\":\"New York\",\"zipCode\":\"110202\",\"phoneNumber\":\"\",\"country\":{\"countryName\":\"United States\",\"countryCode\":\"US\"},\"state\":{\"stateName\":\"New York\",\"stateCode\":\"NY\"},\"isShipping\":\"1\",\"isBilling\":\"1\",\"isDefaultShipping\":\"1\",\"isDefaultBilling\":\"0\"});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses/4\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "delete": {
        "operationId": "companies_addresses_delete",
        "summary": "Delete A Company Address",
        "description": "Deletes an address from a company.",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successful",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "addressId": {
                      "description": "Deleted address Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "addressId": 2
                },
                "message": "Success"
              }
            }
          },
          "404": {
            "description": "Company not found",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {}
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Address Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Address"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request DELETE 'https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses/4'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses/4\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"DELETE\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'DELETE',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses/4\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "addressId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/basic-info": {
      "get": {
        "operationId": "companies_basic-info_list",
        "summary": "Get Company Basic Information",
        "description": "Get company's basic information",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "description": "Company address line 1",
                      "type": "string"
                    },
                    "addressLine2": {
                      "description": "Company address line 2",
                      "type": "string"
                    },
                    "catalogId": {
                      "description": "Catalog Id",
                      "type": "string"
                    },
                    "catalogName": {
                      "description": "Catalog Id",
                      "type": "string"
                    },
                    "city": {
                      "description": "Company city",
                      "type": "string"
                    },
                    "companyEmail": {
                      "description": "Company email",
                      "type": "string"
                    },
                    "companyId": {
                      "description": "Company Id",
                      "type": "string"
                    },
                    "companyName": {
                      "description": "Company name",
                      "type": "string"
                    },
                    "companyStatus": {
                      "description": "Company status",
                      "type": "string"
                    },
                    "country": {
                      "description": "Company country",
                      "type": "string"
                    },
                    "description": {
                      "description": "Company description",
                      "type": "string"
                    },
                    "extraFields": {
                      "description": "Company extra fields",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dataType": {
                            "description": "Field data type, 0=text, 1=number, 2=textarea.",
                            "type": "string"
                          },
                          "fieldName": {
                            "description": "Field name",
                            "type": "string"
                          },
                          "fieldValue": {
                            "description": "Field value",
                            "type": "string"
                          },
                          "isRequired": {
                            "description": "Is field required or not, 0=not required, 1=required",
                            "type": "string"
                          },
                          "labelName": {
                            "description": "Field label name",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "phoneNumber": {
                      "description": "Company phone number",
                      "type": "string"
                    },
                    "state": {
                      "description": "Company state",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Company updated timestamp",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID",
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "Company zip code",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "addressLine1": "",
                  "addressLine2": "",
                  "catalogId": "1",
                  "catalogName": "testCatalogName",
                  "city": "Paris",
                  "companyEmail": "test@bundleb2b.com",
                  "companyId": "35",
                  "companyName": "CropTest1",
                  "companyStatus": "1",
                  "country": "French",
                  "description": "CropTest",
                  "extraFields": [
                    {
                      "dataType": "2",
                      "fieldName": "extraStr1",
                      "fieldValue": "extra_text",
                      "isRequired": "0",
                      "labelName": "Enter your license"
                    }
                  ],
                  "phoneNumber": "10030212001",
                  "state": "BC",
                  "updatedAt": "1594192159",
                  "uuid": "111",
                  "zipCode": "1032332"
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/companies/23/basic-info'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/companies/23/basic-info\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/companies/23/basic-info\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "put": {
        "operationId": "companies_basic-info_update",
        "summary": "Update Company Basic Information",
        "description": "Update a company's basic info, you can update on or more options",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "type": "object",
              "properties": {
                "addressLine1": {
                  "description": "Address string line 1",
                  "type": "string"
                },
                "addressLine2": {
                  "description": "Address string line 2",
                  "type": "string"
                },
                "catalogId": {
                  "description": "BigCommerce price list Id that company related(If put its 0 will clear the catalog).",
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "companyEmail": {
                  "type": "string"
                },
                "companyName": {
                  "type": "string"
                },
                "companyStatus": {
                  "description": "Company status: \n\n 0=PENDING 1=APPROVED 2=REJECTED 3=INACTIVE 4=DELETED",
                  "type": "string"
                },
                "country": {
                  "description": "\nCountry full name or ISO2 country code. For Example: \n\nA Country full name: Afghanistan \n\nISO2 Country code: AF\n",
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "extraFields": {
                  "description": "To use customized extra fields with field names you need to first add company extra fields in Settings > Extra fields inside B2B edition. eg. If you want to create a new company with an extra integer field named licenseNO, you can use this structure [{'fieldName': 'LicenseNO', 'fieldValue': 10342340323}] in the request body.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fieldName": {
                        "type": "string"
                      },
                      "fieldValue": {
                        "type": "string"
                      }
                    }
                  }
                },
                "extraInt1": {
                  "description": "The default extra integer field, you can also use this field to create a company with it.(include extraInt1 ~ extraInt5, extraStr1 ~ extraStr5, extraText) \n\n But there is an important point you need to know. After the B3 team helped you configure the custom extra fields, if you still need to use these default fields, you need to know the correspondence between the custom extra fields and the default extra fields. Otherwise, when you pass in both custom and default extra fields, if the custom extra field is bound to the default extra field you pass in, the value of the custom extra field will override the default extra field.",
                  "type": "number"
                },
                "extraInt2": {
                  "description": "Company update extra integer value, please refer to the description of extraInt1 above.",
                  "type": "number"
                },
                "extraInt3": {
                  "description": "Company update extra integer value, please refer to the description of extraInt1 above.",
                  "type": "number"
                },
                "extraInt4": {
                  "description": "Company update extra integer value, please refer to the description of extraInt1 above.",
                  "type": "number"
                },
                "extraInt5": {
                  "description": "Company update extra integer value, please refer to the description of extraInt1 above.",
                  "type": "number"
                },
                "extraStr1": {
                  "description": "Company update extra string value, please refer to the description of extraInt1 above.",
                  "type": "string"
                },
                "extraStr2": {
                  "description": "Company update extra string value, please refer to the description of extraInt1 above.",
                  "type": "string"
                },
                "extraStr3": {
                  "description": "Company update extra string value, please refer to the description of extraInt1 above.",
                  "type": "string"
                },
                "extraStr4": {
                  "description": "Company update extra string value, please refer to the description of extraInt1 above.",
                  "type": "string"
                },
                "extraStr5": {
                  "description": "Company update extra string value, please refer to the description of extraInt1 above.",
                  "type": "string"
                },
                "extraText": {
                  "description": "Company update extra string value, please refer to the description of extraInt1 above.",
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zipCode": {
                  "type": "string"
                },
                "priceListAssign": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "channelId": {
                        "type": "integer",
                        "description": "BigCommerce channel id"
                      },
                      "priceListId": {
                        "type": "integer",
                        "description": "BC price list ID"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Updated company Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "companyId": "2"
                },
                "message": "Success"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'https://api-b2b.bigcommerce.com/api/v2/io/companies/23'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"companyName\": \"test3.23-22\",\n    \"phoneNumber\": 122331212,\n    \"companyEmail\": \"test@test.com\",\n    \"addressLine1\": \"xxxx\",\n    \"addressLine2\": \"\",\n\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\n                        import requests\n\n                        url = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/23\"\n\n                        payload = \"{\n\t\"companyName\": \"test3.23-22\",\n\t\"phoneNumber\": 122331212,\n\t\"companyEmail\": \"test@test.com\",\n\t\"addressLine1\": \"xxxx\",\n\t\"addressLine2\": \"\",\n\n}\"\n                        headers = {\n                          'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n                          'Content-Type': 'application/json'\n                        }\n\n                        response = requests.request(\"PUT\", url, headers=headers, data = payload)\n\n                        print(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\n                        var myHeaders = new Headers();\n                        myHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n                        myHeaders.append(\"Content-Type\", \"application/json\");\n\n                        var raw = \"{\n\t\"companyName\": \"test3.23-22\",\n\t\"phoneNumber\": 122331212,\n\t\"companyEmail\": \"test@test.com\",\n\t\"addressLine1\": \"xxxx\",\n\t\"addressLine2\": \"\",\n\n}\";\n\n                        var requestOptions = {\n                          method: 'PUT',\n                          headers: myHeaders,\n                          body: raw,\n                          redirect: 'follow'\n                        };\n\n                        fetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/23\", requestOptions)\n                          .then(response => response.text())\n                          .then(result => console.log(result))\n                          .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/force-del": {
      "delete": {
        "operationId": "companies_force-del_delete",
        "summary": "Delete Company With Related",
        "description": "Force Delete A Company and its Related Information.",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successful",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Deleted company Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "companyId": "2"
                },
                "message": "Success"
              }
            }
          },
          "404": {
            "description": "Company not found",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {}
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/force-del'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/force-del\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"PUT\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/force-del\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/orderBCIds": {
      "get": {
        "operationId": "companies_orderBCIds_list",
        "summary": "Get BC Order Id List By Company Id",
        "description": "Get bC order ID list by company id",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset default: 0",
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination limit default: 10",
            "type": "number"
          },
          {
            "name": "beginDateAt",
            "in": "query",
            "description": "End date filter, in format '12/31/2019'",
            "type": "string"
          },
          {
            "name": "endDateAt",
            "in": "query",
            "description": "End date filter, in format '12/31/2019'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "description": "Order id",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "description": "Response data pagination",
                      "type": "object",
                      "properties": {
                        "limit": {
                          "description": "Response pagination limit",
                          "type": "number"
                        },
                        "offset": {
                          "description": "Response pagination offset",
                          "type": "number"
                        },
                        "totalCount": {
                          "description": "Response data items number",
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "list": [
                    {
                      "orderId": "1"
                    }
                  ],
                  "pagination": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 3
                  }
                },
                "message": "Success"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/orderBCIds'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/orderBCIds\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/orderBCIds\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/orders": {
      "get": {
        "operationId": "companies_orders_list",
        "summary": "Get Company Orders",
        "description": "Get company all orders, with pagination data",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset default: 0",
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination limit default: 10",
            "type": "number"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "in ['bcOrderId', 'totalIncTax', 'createdAt']",
            "type": "string"
          },
          {
            "name": "beginDateAt",
            "in": "query",
            "description": "End date filter, in format '12/31/2019'",
            "type": "string"
          },
          {
            "name": "endDateAt",
            "in": "query",
            "description": "End date filter, in format '12/31/2019'",
            "type": "string"
          },
          {
            "name": "includeExtra",
            "in": "query",
            "description": "Switch show extra fields, allow: 0, 1",
            "type": "string"
          },
          {
            "name": "extraStr1",
            "in": "query",
            "description": "Extra field filter",
            "type": "string"
          },
          {
            "name": "extraStr2",
            "in": "query",
            "description": "Extra field filter",
            "type": "string"
          },
          {
            "name": "extraStr3",
            "in": "query",
            "description": "Extra field filter",
            "type": "string"
          },
          {
            "name": "extraStr4",
            "in": "query",
            "description": "Extra field filter",
            "type": "string"
          },
          {
            "name": "extraStr5",
            "in": "query",
            "description": "Extra field filter",
            "type": "string"
          },
          {
            "name": "extraInt1",
            "in": "query",
            "description": "Extra field filter",
            "type": "number"
          },
          {
            "name": "extraInt2",
            "in": "query",
            "description": "Extra field filter",
            "type": "number"
          },
          {
            "name": "extraInt3",
            "in": "query",
            "description": "Extra field filter",
            "type": "number"
          },
          {
            "name": "extraInt4",
            "in": "query",
            "description": "Extra field filter",
            "type": "number"
          },
          {
            "name": "extraInt5",
            "in": "query",
            "description": "Extra field filter",
            "type": "number"
          },
          {
            "type": "number",
            "in": "query",
            "name": "channelId",
            "description": "BigComerce channel id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "OrderStatus": {
                            "description": "Order status, eg. Awaiting Payment",
                            "type": "string"
                          },
                          "companyName": {
                            "description": "User phone number",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "Order created date.",
                            "type": "string"
                          },
                          "firstName": {
                            "description": "Order's user first name.",
                            "type": "string"
                          },
                          "isInvoiceOrder": {
                            "description": "Is a invoice order",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "Order's user last name",
                            "type": "string"
                          },
                          "orderId": {
                            "description": "Order id",
                            "type": "string"
                          },
                          "totalIncTax": {
                            "description": "Order's total invoice taxes.",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "Order updated date.",
                            "type": "string"
                          },
                          "channelName": {
                            "type": "string",
                            "description": "BigCommerce channel name"
                          },
                          "channelId": {
                            "type": "string",
                            "description": "BigCommerce channel id"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "description": "Response data pagination",
                      "type": "object",
                      "properties": {
                        "limit": {
                          "description": "Response pagination limit",
                          "type": "number"
                        },
                        "offset": {
                          "description": "Response pagination offset",
                          "type": "number"
                        },
                        "totalCount": {
                          "description": "Response data items number",
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "list": [
                    {
                      "companyName": "fkkfcctest",
                      "createdAt": "1572323610",
                      "firstName": "james",
                      "isInvoiceOrder": "0",
                      "lastName": "liu",
                      "orderId": "126",
                      "orderStatus": "Awaiting Payment",
                      "totalIncTax": "100.0000",
                      "updatedAt": "1572323610",
                      "channelId": 1,
                      "channelName": "test"
                    },
                    {
                      "companyName": "fkkfcctest",
                      "createdAt": "1572323432",
                      "firstName": "james",
                      "isInvoiceOrder": "0",
                      "lastName": "liu",
                      "orderId": "124",
                      "orderStatus": "Awaiting Payment",
                      "totalIncTax": "50.0000",
                      "updatedAt": "1572323432",
                      "channelId": 1,
                      "channelName": "test"
                    },
                    {
                      "companyName": "fkkfcctest",
                      "createdAt": "1572321777",
                      "firstName": "james",
                      "isInvoiceOrder": "0",
                      "lastName": "liu",
                      "orderId": "125",
                      "orderStatus": "Awaiting Payment",
                      "totalIncTax": "50.0000",
                      "updatedAt": "1572321777",
                      "channelId": 1,
                      "channelName": "test"
                    }
                  ],
                  "paginator": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 3
                  }
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/{companyId}/orders'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/{companyId}/orders\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/{companyId}/orders\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/payments": {
      "get": {
        "operationId": "companies_payments_list",
        "summary": "Get Company Payments Methods",
        "description": "Get company payments methods, include inactive",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Payment code",
                        "type": "string"
                      },
                      "isEnabled": {
                        "description": "Payment method status",
                        "type": "string"
                      },
                      "name": {
                        "description": "Payment name",
                        "type": "string"
                      },
                      "paymentId": {
                        "description": "Payment id",
                        "type": "number"
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": [
                  {
                    "code": "cheque",
                    "isEnabled": "1",
                    "name": "Check",
                    "paymentId": 3
                  },
                  {
                    "code": "bankdeposit",
                    "isEnabled": "0",
                    "name": "Bank Deposit",
                    "paymentId": 6
                  },
                  {
                    "code": "cod",
                    "isEnabled": "0",
                    "name": "Cash on Delivery",
                    "paymentId": 7
                  },
                  {
                    "code": "moneyorder",
                    "isEnabled": "0",
                    "name": "Money Order",
                    "paymentId": 8
                  },
                  {
                    "code": "testgateway",
                    "isEnabled": "0",
                    "name": "Test Payment Gateway",
                    "paymentId": 5
                  }
                ],
                "message": "SUCCESS"
              }
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/payments'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/payments\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/payments\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "put": {
        "operationId": "companies_payments_update",
        "summary": "Update Company Payments Methods",
        "description": "Update Company payments methods' status, change them active or not",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "type": "object",
              "properties": {
                "payments": {
                  "type": "array",
                  "items": {
                    "required": [
                      "paymentId",
                      "isEnabled"
                    ],
                    "type": "object",
                    "properties": {
                      "isEnabled": {
                        "description": "payment active or not('1' for active, others for inactive)",
                        "type": "string"
                      },
                      "paymentId": {
                        "description": "Payment Id",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Updated company Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "customerId": 2
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40010,
                "data": {
                  "payments": [
                    {
                      "isEnabled": [
                        "This field is required."
                      ]
                    }
                  ]
                },
                "message": "Bad Request Error"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/payments'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"payments\": [\n        {\n            \"paymentId\": \"6\",\n            \"isEnabled\": \"1\"\n        }\n    ]\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/payments\"\npayload = {\n    \"payments\": [\n        {\n            \"paymentId\": \"6\",\n            \"isEnabled\": \"1\"\n        }\n    ]\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"PUT\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"payments\":[{\"paymentId\":\"6\",\"isEnabled\":\"1\"}]});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/payments\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/sales-reps": {
      "get": {
        "operationId": "companies_sales-reps_list",
        "summary": "Get Company Sales Reps",
        "description": "Get company sales reps' basic info",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "description": "Sales rep's first name",
                      "type": "string"
                    },
                    "id": {
                      "description": "Sales rep's Id",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "Sales rep's last name",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "firstName": "kobe",
                  "id": "74",
                  "lastName": "tiantian"
                },
                "message": "Success"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "SalesRep"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/sales-reps'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/sales-reps\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/sales-reps\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "put": {
        "operationId": "companies_sales-reps_update",
        "summary": "Update Company Sales reps",
        "description": "Update company reps",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "type": "object",
              "properties": {
                "salesReps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Sales rep's Id",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Updated company Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "companyId": "2"
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field [field]",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40010,
                "message": "This field is required."
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "SalesRep"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/sales-reps'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"salesReps\": [\n        {\n            \"id\": \"74\"\n        }\n    ]\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/sales-reps\"\npayload = {\n    \"salesReps\": [\n        {\n            \"id\": \"74\"\n        }\n    ]\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"PUT\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"salesReps\":[{\"id\":\"74\"}]});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/sales-reps\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/user/{customerId}/orders": {
      "post": {
        "operationId": "companies_user_orders_create",
        "summary": "Create An Order",
        "description": "Create an order from bigCommerce, you must known order id",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "description": "BigCommerce order id",
                      "type": "string"
                    },
                    "poNumber": {
                      "description": "PoNumber",
                      "type": "string"
                    },
                    "totalIncTax": {
                      "description": "Total incTax",
                      "type": "number"
                    }
                  },
                  "required": [
                    "orderId",
                    "totalIncTax"
                  ]
                },
                {
                  "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/order/order-extra.yaml"
                }
              ]
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "description": "Created order id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "orderId": 2
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40010,
                "data": {
                  "bc_order_id": "orderId can not be null"
                },
                "message": "Bad Request Error"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/user/12/orders'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"totalIncTax\": \"111\",\n    \"orderId\": \"111\"\n}' \n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/user/12/orders\"\n\npayload = {\n    \"totalIncTax\": \"111\",\n    \"orderId\": \"111\"\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"totalIncTax\":\"111\",\"orderId\":\"111\"});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/user/12/orders\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/user/{userId}": {
      "put": {
        "operationId": "companies_user_update",
        "summary": "Update A Company User",
        "description": "Update a company user info",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    },
                    "userRole": {
                      "type": "string"
                    },
                    "acceptWelcomeEmail": {
                      "type": "string"
                    },
                    "channelIds": {
                      "type": "array",
                      "description": "BigCommerce channel id list.",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "companyRoleId": {
                      "type": "integer",
                      "x-stoplight": {
                        "id": "kac8dnjf5qza1"
                      },
                      "description": "The company role id. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field. When it has a value, it will override the value of the userRole field."
                    }
                  }
                },
                {
                  "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "integer"
                    },
                    "userId": {
                      "type": "integer"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {}
          }
        },
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/users": {
      "get": {
        "operationId": "companies_users_list",
        "summary": "Get Company Users",
        "description": "Get company users, with pagination data",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset default: 0",
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination limit default: 10",
            "type": "number"
          },
          {
            "name": "role[]",
            "in": "query",
            "description": "user role(0=admin 1=senior_buyer 2=junior_buyer 3=sales_rep) eg. role[]=1, 2",
            "type": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "isIncludeExtraFields",
            "description": "0 or 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "catalogId": {
                                "description": "Catalog Id",
                                "type": "string"
                              },
                              "createdAt": {
                                "description": "User create time",
                                "type": "string"
                              },
                              "email": {
                                "description": "User email",
                                "type": "string"
                              },
                              "firstName": {
                                "description": "User's first name",
                                "type": "string"
                              },
                              "id": {
                                "description": "User Id",
                                "type": "string"
                              },
                              "lastName": {
                                "description": "User's last name",
                                "type": "string"
                              },
                              "phoneNumber": {
                                "description": "User phone number",
                                "type": "string"
                              },
                              "role": {
                                "description": "user role (0=admin 1=senior_buyer 2=junior_buyer 3=sales_rep)",
                                "type": "string"
                              },
                              "updatedAt": {
                                "description": "user update time",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "user UUID",
                                "type": "string"
                              },
                              "channelList": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "channelId": {
                                      "type": "integer",
                                      "description": "BigCommerce channel id"
                                    },
                                    "channelName": {
                                      "type": "string",
                                      "description": "Channel name"
                                    },
                                    "iconUrl": {
                                      "type": "string",
                                      "description": "Channel icon url"
                                    }
                                  }
                                }
                              },
                              "companyRoleId": {
                                "type": "integer",
                                "x-stoplight": {
                                  "id": "iz7buf5a5b5bq"
                                },
                                "description": "The company role id. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field."
                              },
                              "companyRoleName": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "jfmg9izfe2w7t"
                                },
                                "description": "The company role name. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field."
                              }
                            }
                          },
                          {
                            "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml"
                          }
                        ]
                      }
                    },
                    "pagination": {
                      "description": "Response data pagination",
                      "type": "object",
                      "properties": {
                        "limit": {
                          "description": "Response pagination limit",
                          "type": "number"
                        },
                        "offset": {
                          "description": "Response pagination offset",
                          "type": "number"
                        },
                        "totalCount": {
                          "description": "Response data items number",
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "list": [
                    {
                      "catalogId": "1",
                      "createdAt": "1574999690",
                      "email": "test323@test.com",
                      "firstName": "test",
                      "id": "123",
                      "lastName": "test2",
                      "phoneNumber": "",
                      "role": "1",
                      "updatedAt": "1574999690",
                      "uuid": "A123456",
                      "channelList": []
                    }
                  ],
                  "pagination": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 1
                  }
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users?role[]=1,2'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users?role[]=1,2\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users?role[]=1,2\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "post": {
        "operationId": "companies_users_create",
        "summary": "Create A Company User",
        "description": "Create a company user, which belongs company",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "acceptWelcomeEmail": {
                      "description": "(0=will not receive email 1=will receive email)",
                      "type": "string",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "email": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userRole": {
                      "description": "user role(0=admin 1=senior_buyer 2=junior_buyer 3=sales_rep)",
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    },
                    "channelIds": {
                      "type": "array",
                      "description": "BigCommerce channel id list",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "originChannelId": {
                      "type": "integer",
                      "description": "BigCommerce channel id, used for BigCommerce customer origin channel id. This field takes effect only when the store default b2b channel is not configured"
                    },
                    "companyRoleId": {
                      "type": "integer",
                      "x-stoplight": {
                        "id": "1qhsxeqqydfte"
                      },
                      "description": "The company role id. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field. When it has a value, it will override the value of the userRole field."
                    }
                  },
                  "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "phone"
                  ]
                },
                {
                  "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml"
                }
              ]
            },
            "description": ""
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "description": "Created bc customer Id",
                      "type": "string"
                    },
                    "userId": {
                      "description": "Created user Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "customerId": "2",
                  "userId": "2"
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {}
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 10012,
                "data": {},
                "message": "PARAMETER VALUE ERROR"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"firstName\": \"test\",\n    \"lastName\": \"test2\",\n    \"email\": \"test323@test.com\",\n    \"phone\": \"122331212\",\n    \"userRole\": 1\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users\"\n\npayload = {\n    \"firstName\": \"test\",\n    \"lastName\": \"test2\",\n    \"email\": \"test323@test.com\",\n    \"phone\": \"122331212\",\n    \"userRole\": 1\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"firstName\":\"test\",\"lastName\":\"test2\",\"email\":\"test323@test.com\",\"phone\":\"122331212\",\"userRole\":1});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "put": {
        "operationId": "companies_users_update_or_create",
        "summary": "Update Company User",
        "description": "Update company user's field, user identified by email field.fields can not omit",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "acceptWelcomeEmail": {
                      "description": "(0=will not receive email 1=will receive email)",
                      "type": "string",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "email": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userRole": {
                      "description": "user role(0=admin 1=senior_buyer 2=junior_buyer 3=sales_rep)",
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    },
                    "channelIds": {
                      "type": "array",
                      "description": "BigCommerce channel id list",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "companyRoleId": {
                      "type": "integer",
                      "x-stoplight": {
                        "id": "apzeyjj6m09cp"
                      },
                      "description": "The company role id. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field. When it has a value, it will override the value of the userRole field."
                    }
                  },
                  "required": [
                    "email",
                    "firstName",
                    "lastName"
                  ]
                },
                {
                  "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml"
                }
              ]
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "description": "Created bc customer Id",
                      "type": "string"
                    },
                    "userId": {
                      "description": "Created user Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "customerId": "2",
                  "userId": "2"
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {}
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 10012,
                "data": {},
                "message": "PARAMETER VALUE ERROR"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"firstName\": \"test\",\n    \"lastName\": \"test2\",\n    \"email\": \"test323@test.com\",\n    \"userRole\": 1\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users\"\n\npayload = {\n    \"firstName\": \"test\",\n    \"lastName\": \"test2\",\n    \"email\": \"test323@test.com\",\n    \"userRole\": 1\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"PUT\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"firstName\":\"test\",\"lastName\":\"test2\",\"email\":\"test323@test.com\",\"userRole\":1});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/users/bulk_create": {
      "post": {
        "operationId": "companies_users_bulk_create_create",
        "summary": "Bulk Create Company User",
        "description": "Create company users in batch",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "type": "object",
              "properties": {
                "acceptWelcomeEmail": {
                  "description": "(0=will not receive email 1=will receive email)",
                  "type": "string",
                  "enum": [
                    0,
                    1
                  ]
                },
                "users": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "userRole": {
                            "description": "user role(0=admin 1=senior_buyer 2=junior_buyer 3=sales_rep)",
                            "type": "string"
                          },
                          "channelIds": {
                            "type": "array",
                            "description": "BigCommerce channel id list",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "originChannelId": {
                            "type": "integer",
                            "description": "BigCommerce channel id, used for BigCommerce customer origin channel id. This field takes effect only when the store default b2b channel is not configured"
                          },
                          "companyRoleId": {
                            "type": "integer",
                            "x-stoplight": {
                              "id": "y177z48133txw"
                            },
                            "description": "The company role id. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field. When it has a value, it will override the value of the userRole field."
                          }
                        },
                        "required": [
                          "email",
                          "firstName",
                          "lastName",
                          "phone"
                        ]
                      },
                      {
                        "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml"
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "failedItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "description": "Created user email",
                            "type": "string"
                          },
                          "firstName": {
                            "description": "Created user's first name",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "Created user's last name",
                            "type": "string"
                          },
                          "phone": {
                            "description": "Created user phone",
                            "type": "string"
                          },
                          "userRole": {
                            "description": "Created user role",
                            "type": "number"
                          }
                        }
                      }
                    },
                    "successfulItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customerId": {
                            "description": "Created customer Id",
                            "type": "number"
                          },
                          "email": {
                            "description": "Created user email",
                            "type": "string"
                          },
                          "firstName": {
                            "description": "Created user's first name",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "Created user's last name",
                            "type": "string"
                          },
                          "phone": {
                            "description": "Created user phone",
                            "type": "string"
                          },
                          "userRole": {
                            "description": "Created user role",
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "failedItems": [],
                  "successfulItems": [
                    {
                      "customerId": 2,
                      "email": "test323@test121.com",
                      "firstName": "test11",
                      "lastName": "test2",
                      "phone": "122331211",
                      "userRole": 1
                    },
                    {
                      "customerId": 2,
                      "email": "test323@test22.com",
                      "firstName": "test12",
                      "lastName": "test2",
                      "phone": "122331212",
                      "userRole": 1
                    }
                  ]
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {}
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 10012,
                "data": {},
                "message": "PARAMETER VALUE ERROR"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users/bulk_create'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"users\": [\n        {\n            \"firstName\": \"test11\",\n            \"lastName\": \"test2\",\n            \"email\": \"test323@test11.com\",\n            \"phone\": \"122331211\",\n            \"userRole\": 1\n        },\n        {\n            \"firstName\": \"test12\",\n            \"lastName\": \"test2\",\n            \"email\": \"test323@test12.com\",\n            \"phone\": \"122331212\",\n            \"userRole\": 1\n        }\n    ]\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users/bulk_create\"\n\npayload = {\n    \"users\": [\n        {\n            \"firstName\": \"test11\",\n            \"lastName\": \"test2\",\n            \"email\": \"test323@test11.com\",\n            \"phone\": \"122331211\",\n            \"userRole\": 1\n        },\n        {\n            \"firstName\": \"test12\",\n            \"lastName\": \"test2\",\n            \"email\": \"test323@test12.com\",\n            \"phone\": \"122331212\",\n            \"userRole\": 1\n        }\n    ]\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"users\":[{\"firstName\":\"test11\",\"lastName\":\"test2\",\"email\":\"test323@test11.com\",\"phone\":\"122331211\",\"userRole\":1},{\"firstName\":\"test12\",\"lastName\":\"test2\",\"email\":\"test323@test12.com\",\"phone\":\"122331212\",\"userRole\":1}]});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users/bulk_create\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies/{companyId}/users/{customerId}": {
      "get": {
        "operationId": "companies_users_read",
        "summary": "Get A Company User",
        "description": "Get a company user's info, by company and customer id",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "catalogId": {
                          "description": "Catalog Id",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "User create time",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "type": "string"
                        },
                        "firstName": {
                          "description": "User's first name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User Id",
                          "type": "string"
                        },
                        "lastName": {
                          "description": "User's last name",
                          "type": "string"
                        },
                        "phoneNumber": {
                          "description": "User phone number",
                          "type": "string"
                        },
                        "role": {
                          "description": "user role (0=admin 1=senior_buyer 2=junior_buyer 3=sales_rep)",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "user update time",
                          "type": "string"
                        },
                        "uuid": {
                          "description": "user UUID",
                          "type": "string"
                        },
                        "channelList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "channelId": {
                                "type": "integer",
                                "description": "BigCommerce channel id"
                              },
                              "channelName": {
                                "type": "string",
                                "description": "Channel name"
                              },
                              "iconUrl": {
                                "type": "string",
                                "description": "Channel icon url"
                              }
                            }
                          }
                        },
                        "companyRoleId": {
                          "type": "integer",
                          "x-stoplight": {
                            "id": "6ocmpffb3ywgh"
                          },
                          "description": "The company role id. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field."
                        },
                        "companyRoleName": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "8853bn9ijoqey"
                          },
                          "description": "The company role name. This field is only applicable to the company's RBAC feature. If your store doesn't utilize this feature, please do not use this field."
                        }
                      }
                    },
                    {
                      "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml"
                    }
                  ]
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "catalogId": "1",
                  "createdAt": "1574999690",
                  "email": "test323@test.com",
                  "firstName": "test",
                  "id": "123",
                  "lastName": "test2",
                  "phoneNumber": "",
                  "role": "1",
                  "updatedAt": "1574999690",
                  "uuid": "A123456",
                  "channelList": []
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "delete": {
        "operationId": "companies_users_delete",
        "summary": "Delete A Company User",
        "description": "Delete a company user, if this user is the only one administrator of company, will return a 500 Error",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successful",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "description": "Deleted user Id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "customerId": 2
                },
                "message": "Success"
              }
            }
          },
          "404": {
            "description": "Company not found",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {}
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request DELETE 'https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users/15'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users/15\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"DELETE\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'DELETE',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/4/users/15\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/orders": {
      "put": {
        "operationId": "orders_update",
        "summary": "Update Company Order With BC OrderId",
        "description": "Update order, billingAddress and products can not be omitted. products can be two format. \n 1. Product with variants. \n 2. Base product",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "type": "object",
              "properties": {
                "baseHandlingCost": {
                  "description": "The value of the base handling cost. (Float, Float-As-String, Integer).",
                  "type": "string"
                },
                "baseShippingCost": {
                  "description": "The value of the base shipping cost. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "baseWrappingCost": {
                  "description": "The value of the base wrapping cost. (Float, Float-As-String, Integer).",
                  "type": "string"
                },
                "billingAddress": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string"
                    },
                    "company": {
                      "description": "Company name",
                      "type": "string"
                    },
                    "country": {
                      "description": "Human readable country name",
                      "type": "string"
                    },
                    "countryIso2": {
                      "description": "Country ISO info.",
                      "type": "string"
                    },
                    "email": {
                      "description": "Address email.",
                      "type": "string"
                    },
                    "firstName": {
                      "description": "Address first name",
                      "type": "string"
                    },
                    "formFields": {
                      "description": "Address form fields.",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "Address last name",
                      "type": "string"
                    },
                    "phone": {
                      "description": "Address phone number",
                      "type": "string"
                    },
                    "state": {
                      "description": "Human readable state (or other subdivision) name",
                      "type": "string"
                    },
                    "streetOne": {
                      "description": "Typically the street address",
                      "type": "string"
                    },
                    "streetTwo": {
                      "description": "More detailed information about where to deliver mail, such as a suite or office number",
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    }
                  }
                },
                "channelId": {
                  "description": "BigCommerce channel id. Shows where the order originated. The channel_id will default to 1.",
                  "type": "string"
                },
                "creditCardType": {
                  "description": "Credit card type.",
                  "type": "string"
                },
                "customerMessage": {
                  "description": "Message that the customer entered (number, optiona) -o the Order Comments box during checkout.",
                  "type": "string"
                },
                "dateCreated": {
                  "description": "Date created.",
                  "type": "string"
                },
                "discountAmount": {
                  "description": "Amount of discount for this transaction. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "ebayOrderId": {
                  "description": "If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be 0.",
                  "type": "string"
                },
                "externalId": {
                  "description": "ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field ‘external_id’ cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set..",
                  "type": "string"
                },
                "externalMerchantId": {
                  "description": "Id of the external merchant.",
                  "type": "string"
                },
                "externalSource": {
                  "description": "For orders submitted or modified via the API, using a PUT or POST operation, you can optionally pass in a value identifying the system used to generate the order. For example: POS. Otherwise, the value will be null.",
                  "type": "string"
                },
                "geoipCountry": {
                  "description": "The full name of the country where the customer made the purchase, based on the IP.",
                  "type": "string"
                },
                "geoipCountryIso2": {
                  "description": "The country where the customer made the purchase, in ISO2 format, based on the IP.",
                  "type": "string"
                },
                "giftCertificateAmount": {
                  "description": "A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "handlingCostExTax": {
                  "description": "The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "handlingCostIncTax": {
                  "description": "The value of the handling cost, including tax. (Float, Float-As-String, Integer).",
                  "type": "string"
                },
                "ipAddress": {
                  "description": "IP Address of the customer, if known.",
                  "type": "string"
                },
                "isDeleted": {
                  "description": "Indicates whether the order was deleted (archived). Set to to true, to archive an order.",
                  "type": "string"
                },
                "itemsShipped": {
                  "description": "The number of items that have been shipped.",
                  "type": "string"
                },
                "itemsTotal": {
                  "description": "The total number of items in the order.",
                  "type": "string"
                },
                "orderId": {
                  "description": "BigCommerce order id",
                  "type": "string"
                },
                "orderIsDigital": {
                  "description": "Whether this is an order for digital products.",
                  "type": "string"
                },
                "paymentMethod": {
                  "description": "The payment method for this order. Can be one of the following: Manual, Credit Card, cash, Test Payment Gateway, etc.",
                  "type": "string"
                },
                "paymentProviderId": {
                  "description": "The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).",
                  "type": "string"
                },
                "poNumber": {
                  "description": "PoNumber",
                  "type": "string"
                },
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "priceExTax": {
                        "type": "string"
                      },
                      "priceIncTax": {
                        "type": "string"
                      },
                      "productId": {
                        "description": "Product id.",
                        "type": "string"
                      },
                      "productOptions": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "string"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "upc": {
                        "type": "string"
                      },
                      "variantId": {
                        "type": "string"
                      }
                    }
                  }
                },
                "refundedAmount": {
                  "description": "The amount refunded from this transaction. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "shippingCostExTax": {
                  "description": "The value of shipping cost, excluding tax. (Float, Float-As-String, Integer).",
                  "type": "string"
                },
                "shippingCostIncTax": {
                  "description": "The value of shipping cost, including tax. (Float, Float-As-String, Integer).",
                  "type": "string"
                },
                "staffNotes": {
                  "description": "Any additional notes for staff.",
                  "type": "string"
                },
                "statusId": {
                  "description": "The status ID of the order.",
                  "type": "string"
                },
                "subtotalExTax": {
                  "description": "Override value for subtotal excluding tax. If specified, the field subtotal_inc_tax is also required. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "subtotalIncTax": {
                  "description": "TOverride value for subtotal including tax. If specified, the field subtotal_ex_tax is also required. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "taxProviderId": {
                  "description": "Tax provider id.",
                  "type": "string"
                },
                "totalExTax": {
                  "description": "Override value for the total, excluding tax. If specified, the field total_inc_tax is also required. (Float, Float-As-String, Integer)",
                  "type": "string"
                },
                "wrappingCostExTax": {
                  "description": "The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer).",
                  "type": "string"
                },
                "wrappingCostIncTax": {
                  "description": "The value of the wrapping cost, including tax. (Float, Float-As-String, Integer).",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Updated order id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "orderId": 2
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error Message",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40010,
                "data": {
                  "errMsg": "bc internal server error"
                },
                "message": "Bad Requests Error"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'https://api-b2b.bigcommerce.com/api/v2/io/orders'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"orderId\": 117,\n    \"statusId\": 0,\n    \"billingAddress\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"streetOne\": \"123 Main Street\",\n        \"city\": \"Austin\",\n        \"state\": \"Texas\",\n        \"zip\": \"78751\",\n        \"country\": \"United States\",\n        \"countryIso2\": \"US\",\n        \"email\": \"janedoe@email.com\"\n    },\n    \"products\": [\n        {\n            \"name\": \"BigCommerce Poster\",\n            \"quantity\": 1,\n            \"priceIncTax\": 10.98,\n            \"priceExTax\": 10\n        },\n        {\n            \"name\": \"BigCommerce Coffee Mug\",\n            \"quantity\": 1,\n            \"priceIncTax\": 50,\n            \"priceExTax\": 45\n        }\n    ]\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/orders\"\npayload = {\n    \"orderId\": 117,\n    \"statusId\": 0,\n    \"billingAddress\": {\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"streetOne\": \"123 Main Street\",\n        \"city\": \"Austin\",\n        \"state\": \"Texas\",\n        \"zip\": \"78751\",\n        \"country\": \"United States\",\n        \"countryIso2\": \"US\",\n        \"email\": \"janedoe@email.com\"\n    },\n    \"products\": [\n        {\n            \"name\": \"BigCommerce Poster\",\n            \"quantity\": 1,\n            \"priceIncTax\": 10.98,\n            \"priceExTax\": 10\n        },\n        {\n            \"name\": \"BigCommerce Coffee Mug\",\n            \"quantity\": 1,\n            \"priceIncTax\": 50,\n            \"priceExTax\": 45\n        }\n    ]\n}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"PUT\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"orderId\":117,\"statusId\":0,\"billingAddress\":{\"firstName\":\"Jane\",\"lastName\":\"Doe\",\"streetOne\":\"123 Main Street\",\"city\":\"Austin\",\"state\":\"Texas\",\"zip\":\"78751\",\"country\":\"United States\",\"countryIso2\":\"US\",\"email\":\"janedoe@email.com\"},\"products\":[{\"name\":\"BigCommerce Poster\",\"quantity\":1,\"priceIncTax\":10.98,\"priceExTax\":10},{\"name\":\"BigCommerce Coffee Mug\",\"quantity\":1,\"priceIncTax\":50,\"priceExTax\":45}]});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/orders\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": []
    },
    "/orders/company": {
      "post": {
        "operationId": "orders_company_create",
        "summary": "Update BC Order's 'Company attribute'",
        "description": "Add Company identifier for BigCommerce Customer Individual Orders, which can be used to convert BigCommerce Customer Individual Orders to Company-level Orders.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "required": [
                "customerID"
              ],
              "type": "object",
              "properties": {
                "customerID": {
                  "description": "BigCommerce user id.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object"
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {},
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40013,
                "data": {},
                "message": "Store does not exist."
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'localhost:8000/api/v2/io/orders/convert-from-bc'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImtpZG8uemhhb0BidW5kbGViMmIubmV0Iiwic3RvcmVfaGFzaCI6IjFpNnpweHBlM2ciLCJkYiI6ImRlZmF1bHQiLCJpc19iYWNrZW5kX3VzZXIiOiIyIn0.BpLPDLnmSEHgXw5Rf06G2kp0bKbMaJhxSxAuUW9vRo4'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"customerID\": \"7566\"\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\n                        import requests\n\n                        url = \"localhost:8000/api/v2/io/orders/convert-from-bc\"\n\n                        payload = \"{\n    \"customerID\": \"7566\"\n}\"\n                        headers = {\n                          'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImtpZG8uemhhb0BidW5kbGViMmIubmV0Iiwic3RvcmVfaGFzaCI6IjFpNnpweHBlM2ciLCJkYiI6ImRlZmF1bHQiLCJpc19iYWNrZW5kX3VzZXIiOiIyIn0.BpLPDLnmSEHgXw5Rf06G2kp0bKbMaJhxSxAuUW9vRo4',\n                          'Content-Type': 'application/json'\n                        }\n\n                        response = requests.request(\"POST\", url, headers=headers, data = payload)\n\n                        print(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImtpZG8uemhhb0BidW5kbGViMmIubmV0Iiwic3RvcmVfaGFzaCI6IjFpNnpweHBlM2ciLCJkYiI6ImRlZmF1bHQiLCJpc19iYWNrZW5kX3VzZXIiOiIyIn0.BpLPDLnmSEHgXw5Rf06G2kp0bKbMaJhxSxAuUW9vRo4\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"customerID\":\"7566\"});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"localhost:8000/api/v2/io/orders/convert-from-bc\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "put": {
        "operationId": "orders_company_update",
        "summary": "Update B2BE User's Orders' company attribute.",
        "description": "Update the orders belong to a B2BE company to another B2BE company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "required": [
                "customerID",
                "customerGroupID"
              ],
              "type": "object",
              "properties": {
                "customerGroupID": {
                  "description": "BigCommerce customer group id.",
                  "type": "string"
                },
                "customerID": {
                  "description": "BigCommerce user id.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object"
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {},
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40013,
                "data": {},
                "message": "Store does not exist."
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request PUT 'localhost:8000/api/v2/io/orders/company'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiMWk2enB4cGUzZyIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoia2lkby56aGFvQGJ1bmRsZWIyYi5uZXQifQ.fB8TtxpTDdhOUmR_7gYV16w9nV3Kp0US52W8JMHG1js'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"customerGroupID\": \"6406\",\n    \"customerID\": \"7298\"\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\n                        import requests\n\n                        url = \"localhost:8000/api/v2/io/orders/company\"\n\n                        payload = \"{\n    \"customerGroupID\": \"6406\",\n    \"customerID\": \"7298\"\n}\"\n                        headers = {\n                          'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiMWk2enB4cGUzZyIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoia2lkby56aGFvQGJ1bmRsZWIyYi5uZXQifQ.fB8TtxpTDdhOUmR_7gYV16w9nV3Kp0US52W8JMHG1js',\n                          'Content-Type': 'application/json'\n                        }\n\n                        response = requests.request(\"PUT\", url, headers=headers, data = payload)\n\n                        print(response.text.encode('utf8'))\n    )\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiMWk2enB4cGUzZyIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoia2lkby56aGFvQGJ1bmRsZWIyYi5uZXQifQ.fB8TtxpTDdhOUmR_7gYV16w9nV3Kp0US52W8JMHG1js\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"customerGroupID\":\"6406\",\"customerID\":\"7298\"});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"localhost:8000/api/v2/io/orders/company\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": []
    },
    "/orders/images": {
      "get": {
        "operationId": "orders_images_list",
        "summary": "Get Orders Images",
        "description": "Get all orders' images",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderIds",
            "in": "query",
            "description": "Query order ids",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "imageUrl": {
                        "description": "Image url.",
                        "type": "string"
                      },
                      "orderId": {
                        "description": "Order id.",
                        "type": "string"
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": [
                  {
                    "imageUrl": "https://www.google.com/imgres?imgurl=https%3A%2F%2Fimg.freepik.com%2Ffree-vector%2Fbroken-frosted-glass-realistic-icon_1284-12125.jpg%3Fsize%3D338%26ext%3Djpg&imgrefurl=https%3A%2F%2Fwww.freepik.com%2Ffree-photos-vectors%2Fpng&tbnid=tiRj4_jn2S_1DM&vet=12ahUKEwj_m-T-m8LqAhUTq54KHXruCV4QMygCegUIARDRAQ..i&docid=kU78UyWVW14S1M&w=338&h=338&q=png&ved=2ahUKEwj_m-T-m8LqAhUTq54KHXruCV4QMygCegUIARDRAQ",
                    "orderId": "1"
                  }
                ],
                "message": "Success"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/orders/images'                     --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/orders/images\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/orders/images\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": []
    },
    "/orders/{orderBCId}/companyIdBCId": {
      "get": {
        "operationId": "orders_companyIdBCId_list",
        "summary": "Get Company By BC OrderId",
        "description": "Get company basic info by bc order id",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Company id",
                      "type": "string"
                    },
                    "companyName": {
                      "description": "Company name",
                      "type": "string"
                    },
                    "customerGroupId": {
                      "description": "company customer group id",
                      "type": "string"
                    },
                    "extraInt1": {
                      "description": "Extra number",
                      "type": "number"
                    },
                    "extraInt2": {
                      "description": "Extra number",
                      "type": "number"
                    },
                    "extraInt3": {
                      "description": "Extra number",
                      "type": "number"
                    },
                    "extraInt4": {
                      "description": "Extra number",
                      "type": "number"
                    },
                    "extraInt5": {
                      "description": "Extra number",
                      "type": "number"
                    },
                    "extraStr1": {
                      "description": "Extra string",
                      "type": "string"
                    },
                    "extraStr2": {
                      "description": "Extra string",
                      "type": "string"
                    },
                    "extraStr3": {
                      "description": "Extra string",
                      "type": "string"
                    },
                    "extraStr4": {
                      "description": "Extra string",
                      "type": "string"
                    },
                    "extraStr5": {
                      "description": "Extra string",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "companyId": "2",
                  "companyName": "ABC.LLC",
                  "customerGroupId": "11",
                  "extraInt1": 0,
                  "extraInt2": 0,
                  "extraInt3": 0,
                  "extraInt4": 0,
                  "extraInt5": 0,
                  "extraStr1": "",
                  "extraStr2": "",
                  "extraStr3": "",
                  "extraStr4": "",
                  "extraStr5": ""
                },
                "message": "Success"
              }
            }
          },
          "400": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "data": {
                  "description": "Response error data",
                  "type": "object",
                  "properties": {
                    "[field]": {
                      "description": "Message about problem with field 'field'",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 40013,
                "data": {},
                "message": "Order does not exist."
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/orders/23/companyIdBCId'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/orders/23/companyIdBCId\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/orders/23/companyIdBCId\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "orderBCId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/orders/{orderId}/companyId": {
      "get": {
        "operationId": "orders_companyId_list",
        "summary": "Get Company Id By Order Id",
        "description": "Get company ID by order id",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "companyId": {
                      "description": "Company id",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "companyId": "2"
                },
                "message": "Success"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/orders/12/companyId'                     --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/orders/12/companyId\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/orders/12/companyId\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "orderId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/orders/{orderId}/details": {
      "get": {
        "operationId": "orders_details_list",
        "summary": "Get Order Detail",
        "description": "Get order's Detail",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "base_handling_cost": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "base_shipping_cost": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "base_wrapping_cost": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "billingAddress": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "type": "string"
                            },
                            "company": {
                              "description": "Company name",
                              "type": "string"
                            },
                            "country": {
                              "description": "Human readable country name",
                              "type": "string"
                            },
                            "countryIso2": {
                              "description": "Country ISO info.",
                              "type": "string"
                            },
                            "email": {
                              "description": "Address email.",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "Address first name",
                              "type": "string"
                            },
                            "formFields": {
                              "description": "Address form fields.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "Address last name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Address phone number",
                              "type": "string"
                            },
                            "state": {
                              "description": "Human readable state (or other subdivision) name",
                              "type": "string"
                            },
                            "streetOne": {
                              "description": "Typically the street address",
                              "type": "string"
                            },
                            "streetTwo": {
                              "description": "More detailed information about where to deliver mail, such as a suite or office number",
                              "type": "string"
                            },
                            "zip": {
                              "type": "string"
                            }
                          }
                        },
                        "cart_id": {
                          "description": "eg. 5e70bf45-9271-4737-8a80-94f7c99c2e2b",
                          "type": "string"
                        },
                        "coupon_discount": {
                          "description": "eg. 0.00000",
                          "type": "string"
                        },
                        "credit_card_type": {
                          "description": "eg. null",
                          "type": "string"
                        },
                        "currency_code": {
                          "description": "eg. USD",
                          "type": "string"
                        },
                        "currency_exchange_rate": {
                          "description": "eg. 1.0000000",
                          "type": "string"
                        },
                        "currency_id": {
                          "description": "eg. 1",
                          "type": "number"
                        },
                        "customer_id": {
                          "description": "eg. 168",
                          "type": "number"
                        },
                        "customer_message": {
                          "description": "eg. 123",
                          "type": "string"
                        },
                        "date_created": {
                          "description": "eg. 'Tue, 29 Oct 2019 09:58:32 +0000'",
                          "type": "string"
                        },
                        "date_modified": {
                          "description": "eg. 'Tue, 29 Oct 2019 09:58:32 +0000'",
                          "type": "string"
                        },
                        "date_shipped": {
                          "description": "eg. 'Tue, 29 Oct 2019 09:58:32 +0000'",
                          "type": "string"
                        },
                        "default_currency_code": {
                          "description": "eg. USD",
                          "type": "string"
                        },
                        "default_currency_id": {
                          "description": "eg. 1",
                          "type": "number"
                        },
                        "discount_amount": {
                          "description": "eg. 0.00000",
                          "type": "string"
                        },
                        "ebay_order_id": {
                          "description": "eg. 0",
                          "type": "string"
                        },
                        "external_source": {
                          "description": "eg. ",
                          "type": "string"
                        },
                        "geoip_country": {
                          "description": "eg. China",
                          "type": "string"
                        },
                        "geoip_country_iso2": {
                          "description": "eg. CN",
                          "type": "string"
                        },
                        "gift_certificate_amount": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "handling_cost_ex_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "handling_cost_inc_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "handling_cost_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "handling_cost_tax_class_id": {
                          "description": "eg. 2",
                          "type": "number"
                        },
                        "id": {
                          "description": "Order id",
                          "type": "string"
                        },
                        "ip_address": {
                          "description": "eg. 118.112.75.229",
                          "type": "string"
                        },
                        "is_deleted": {
                          "description": "eg. False",
                          "type": "boolean"
                        },
                        "is_email_opt_in": {
                          "description": "eg. false",
                          "type": "boolean"
                        },
                        "items_shipped": {
                          "description": "eg. 2",
                          "type": "number"
                        },
                        "items_total": {
                          "description": "eg. 2",
                          "type": "number"
                        },
                        "order_is_digital": {
                          "type": "boolean"
                        },
                        "order_source": {
                          "description": "eg. www",
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "eg. PO",
                          "type": "string"
                        },
                        "payment_provider_id": {
                          "description": "payment provider id",
                          "type": "string"
                        },
                        "payment_status": {
                          "description": "eg. AwaitingPayment",
                          "type": "string"
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "applied_discounts": {
                                "description": "eg. []",
                                "type": "string"
                              },
                              "base_cost_price": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "base_price": {
                                "description": "eg. 22.5000",
                                "type": "string"
                              },
                              "base_total": {
                                "description": "eg. 140.0000",
                                "type": "string"
                              },
                              "base_wrapping_cost": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "bin_picking_number": {
                                "description": "eg. 1",
                                "type": "string"
                              },
                              "configurable_fields": {
                                "description": "eg. []",
                                "type": "string"
                              },
                              "cost_price_ex_tax": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "cost_price_inc_tax": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "cost_price_tax": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "coupons": {
                                "type": "object",
                                "properties": {
                                  "resource": {
                                    "description": "eg. /orders/123/coupons",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "coupon url",
                                    "type": "string"
                                  }
                                }
                              },
                              "custom_status": {
                                "description": "eg. Awaiting Payment",
                                "type": "string"
                              },
                              "depth": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "ebay_item_id": {
                                "description": "eg. 1",
                                "type": "string"
                              },
                              "ebay_transaction_id": {
                                "description": "eg. 1",
                                "type": "string"
                              },
                              "event_date": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "event_name": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "external_id": {
                                "description": "eg. null",
                                "type": "string"
                              },
                              "external_merchant_id": {
                                "description": "eg. null",
                                "type": "string"
                              },
                              "fixed_shipping_cost": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "fulfillment_source": {
                                "description": "eg. []",
                                "type": "string"
                              },
                              "height": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "id": {
                                "description": "eg 1.",
                                "type": "string"
                              },
                              "is_bundled_product": {
                                "description": "eg. false",
                                "type": "boolean"
                              },
                              "is_refunded": {
                                "description": "eg. false",
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              },
                              "option_set_id": {
                                "description": "eg. 1",
                                "type": "string"
                              },
                              "order_address_id": {
                                "description": "eg. 24",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "eg 3.",
                                "type": "string"
                              },
                              "parent_order_product_id": {
                                "description": "eg. 1",
                                "type": "string"
                              },
                              "poNumber": {
                                "type": "object",
                                "properties": {
                                  "resource": {
                                    "description": "eg. orders/123/shippingaddresses/24/shippingquotes",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "shipping quote url",
                                    "type": "string"
                                  }
                                }
                              },
                              "priceExTax": {
                                "type": "string"
                              },
                              "priceIncTax": {
                                "type": "string"
                              },
                              "price_tax": {
                                "description": "eg. 0.0000",
                                "type": "string"
                              },
                              "productId": {
                                "description": "Product id.",
                                "type": "string"
                              },
                              "productOptions": {
                                "type": "string"
                              },
                              "product_options": {
                                "description": "eg. []",
                                "type": "string"
                              },
                              "quantity": {
                                "type": "string"
                              },
                              "quantity_refunded": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "quantity_shipped": {
                                "description": "eg. 1",
                                "type": "number"
                              },
                              "refund_amount": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "return_id": {
                                "description": "eg. 1.0000",
                                "type": "number"
                              },
                              "shipments": {
                                "description": "eg. false",
                                "type": "boolean"
                              },
                              "shipping_address": {
                                "type": "object",
                                "properties": {
                                  "resource": {
                                    "description": "eg. /orders/123/shippingaddresses",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "shipping address url",
                                    "type": "string"
                                  }
                                }
                              },
                              "sku": {
                                "type": "string"
                              },
                              "store_default_currency_code": {
                                "description": "eg. USD",
                                "type": "string"
                              },
                              "store_default_to_transactional_exchange_rate": {
                                "description": "eg. 1.00000000",
                                "type": "string"
                              },
                              "tax_provider_id": {
                                "description": "eg. BasicTaxProvider",
                                "type": "string"
                              },
                              "total_ex_tax": {
                                "description": "eg. 140.0000",
                                "type": "string"
                              },
                              "total_inc_tax": {
                                "description": "eg. 140.0000",
                                "type": "string"
                              },
                              "total_tax": {
                                "description": "eg. 0.0000",
                                "type": "string"
                              },
                              "type": {
                                "description": "eg. physical",
                                "type": "string"
                              },
                              "upc": {
                                "type": "string"
                              },
                              "variantId": {
                                "type": "string"
                              },
                              "variant_id": {
                                "description": "eg. 74",
                                "type": "string"
                              },
                              "weight": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "width": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "wrapping_cost_ex_tax": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "wrapping_cost_inc_tax": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "wrapping_cost_tax": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "wrapping_message": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              },
                              "wrapping_name": {
                                "description": "eg. 1.0000",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "refunded_amount": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "shippingAddress": {
                          "type": "object",
                          "properties": {
                            "base_cost": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "base_handling_cost": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "company": {
                              "description": "Company name",
                              "type": "string"
                            },
                            "cost_ex_tax": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "cost_inc_tax": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "cost_tax": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "cost_tax_class_id": {
                              "description": "eg. 20",
                              "type": "string"
                            },
                            "country": {
                              "description": "Human readable country name",
                              "type": "string"
                            },
                            "countryIso2": {
                              "description": "Country ISO info.",
                              "type": "string"
                            },
                            "email": {
                              "description": "Address email.",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "Address first name",
                              "type": "string"
                            },
                            "formFields": {
                              "description": "Address form fields.",
                              "type": "string"
                            },
                            "form_fields": {
                              "description": "eg. []",
                              "type": "string"
                            },
                            "handling_cost_ex_tax": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "handling_cost_inc_tax": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "handling_cost_tax": {
                              "description": "eg. 0.0000",
                              "type": "string"
                            },
                            "handling_cost_tax_class_id": {
                              "description": "eg. 1",
                              "type": "number"
                            },
                            "items_shipped": {
                              "description": "eg. 6",
                              "type": "string"
                            },
                            "items_total": {
                              "description": "eg. 6",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "Address last name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Address phone number",
                              "type": "string"
                            },
                            "shipping_method": {
                              "description": "eg. Free Shipping",
                              "type": "string"
                            },
                            "shipping_quoteseg": {
                              "type": "object"
                            },
                            "shipping_zone_id": {
                              "description": "eg. 1",
                              "type": "number"
                            },
                            "shipping_zone_name": {
                              "description": "eg. United States1",
                              "type": "string"
                            },
                            "state": {
                              "description": "Human readable state (or other subdivision) name",
                              "type": "string"
                            },
                            "streetOne": {
                              "description": "Typically the street address",
                              "type": "string"
                            },
                            "streetTwo": {
                              "description": "More detailed information about where to deliver mail, such as a suite or office number",
                              "type": "string"
                            },
                            "zip": {
                              "type": "string"
                            }
                          }
                        },
                        "shipping_address_count": {
                          "description": "eg. 1",
                          "type": "number"
                        },
                        "shipping_cost_ex_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "shipping_cost_inc_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "shipping_cost_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "shipping_cost_tax_class_id": {
                          "description": "eg. 2",
                          "type": "number"
                        },
                        "staff_notes": {
                          "type": "string"
                        },
                        "status": {
                          "description": "eg. Awaiting Payment",
                          "type": "string"
                        },
                        "status_id": {
                          "description": "eg. 8",
                          "type": "number"
                        },
                        "store_credit_amount": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "subtotal_ex_tax": {
                          "description": "eg. 135.0000",
                          "type": "string"
                        },
                        "subtotal_inc_tax": {
                          "description": "eg. 135.0000",
                          "type": "string"
                        },
                        "subtotal_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "total_ex_tax": {
                          "description": "eg. 135.0000",
                          "type": "string"
                        },
                        "total_inc_tax": {
                          "description": "eg. 135.0000",
                          "type": "string"
                        },
                        "total_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "wrapping_cost_ex_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "wrapping_cost_inc_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "wrapping_cost_tax": {
                          "description": "eg. 0.0000",
                          "type": "string"
                        },
                        "wrapping_cost_tax_class_id": {
                          "description": "eg. 2",
                          "type": "number"
                        },
                        "channelId": {
                          "type": "integer",
                          "description": "BigCommerce channel id"
                        },
                        "channelName": {
                          "type": "string",
                          "description": "Channel name"
                        }
                      }
                    },
                    {
                      "$ref": "https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/order/order-extra.yaml"
                    }
                  ]
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "base_handling_cost": "0.0000",
                  "base_shipping_cost": "0.0000",
                  "base_wrapping_cost": "0.0000",
                  "billing_address": {
                    "city": "Irvine",
                    "company": "qqqq",
                    "country": "United States",
                    "country_iso2": "US",
                    "email": "15002803905@163.com",
                    "first_name": "sdsdsd",
                    "form_fields": [],
                    "last_name": "errte",
                    "phone": "9497486023",
                    "state": "California",
                    "street_1": "15440 Laguna Canyon Road, Ste 213",
                    "street_2": "ssadsdas",
                    "zip": "92618"
                  },
                  "cart_id": "f6a167af-fdc2-4409-8282-0358c36b46c5",
                  "channel_id": "1",
                  "coupon_discount": "0.0000",
                  "coupons": {
                    "resource": "/orders/126/coupons",
                    "url": "https://api.bigcommerce.com/stores/1i6zpxpe3g/v2/orders/126/coupons"
                  },
                  "credit_card_type": "",
                  "currency_code": "USD",
                  "currency_exchange_rate": "1.0000000000",
                  "currency_id": 1,
                  "custom_status": "Awaiting Payment",
                  "customer_id": 168,
                  "customer_message": "123456\n123456798",
                  "date_created": "Tue, 29 Oct 2019 12:33:25 +0000",
                  "date_modified": "Tue, 29 Oct 2019 12:33:29 +0000",
                  "date_shipped": "",
                  "default_currency_code": "USD",
                  "default_currency_id": 1,
                  "discount_amount": "0.0000",
                  "ebay_order_id": "0",
                  "external_id": null,
                  "external_merchant_id": null,
                  "external_source": "",
                  "geoip_country": "China",
                  "geoip_country_iso2": "CN",
                  "gift_certificate_amount": "0.0000",
                  "handling_cost_ex_tax": "0.0000",
                  "handling_cost_inc_tax": "0.0000",
                  "handling_cost_tax": "0.0000",
                  "handling_cost_tax_class_id": 2,
                  "id": "126",
                  "ip_address": "171.213.12.107",
                  "is_deleted": false,
                  "is_email_opt_in": false,
                  "items_shipped": 0,
                  "items_total": 20,
                  "order_is_digital": false,
                  "order_source": "www",
                  "payment_method": "PO",
                  "payment_provider_id": "",
                  "payment_status": "",
                  "poNumber": "123456798",
                  "products": [
                    {
                      "applied_discounts": "",
                      "base_cost_price": "0.0000",
                      "base_price": "5.0019",
                      "base_total": "100.0000",
                      "base_wrapping_cost": "0.0000",
                      "bin_picking_number": "",
                      "configurable_fields": "",
                      "cost_price_ex_tax": "0.0000",
                      "cost_price_inc_tax": "0.0000",
                      "cost_price_tax": "0.0000",
                      "depth": "0.0000",
                      "ebay_item_id": "",
                      "ebay_transaction_id": "",
                      "event_date": "",
                      "event_name": "",
                      "external_id": "",
                      "fixed_shipping_cost": "0.0000",
                      "fulfillment_source": "",
                      "height": "0.0000",
                      "id": "39",
                      "is_bundled_product": false,
                      "is_refunded": false,
                      "name": "[Sample] Tiered Wire Basket",
                      "option_set_id": "",
                      "order_address_id": "27",
                      "order_id": "126",
                      "parent_order_product_id": "",
                      "price_ex_tax": "5.0000",
                      "price_inc_tax": "5.0000",
                      "price_tax": "0.0000",
                      "product_id": 97,
                      "product_options": "",
                      "quantity": "20",
                      "quantity_refunded": "0",
                      "quantity_shipped": 0,
                      "refund_amount": "0.0000",
                      "return_id": 0,
                      "sku": "TWB",
                      "total_ex_tax": "100.0000",
                      "total_inc_tax": "100.0000",
                      "total_tax": "0.0000",
                      "type": "physical",
                      "upc": "",
                      "variant_id": "69",
                      "weight": "1.0000",
                      "width": "0.0000",
                      "wrapping_cost_ex_tax": "0.0000",
                      "wrapping_cost_inc_tax": "0.0000",
                      "wrapping_cost_tax": "0.0000",
                      "wrapping_message": "",
                      "wrapping_name": ""
                    }
                  ],
                  "refunded_amount": "0.0000",
                  "shipments": false,
                  "shippingAddress": {
                    "base_cost": "0.0000",
                    "base_handling_cost": "0.0000",
                    "city": "Irvine",
                    "company": "qqqq",
                    "cost_ex_tax": "0.0000",
                    "cost_inc_tax": "0.0000",
                    "cost_tax": "0.0000",
                    "cost_tax_class_id": "2",
                    "country": "United States",
                    "country_iso2": "US",
                    "email": "15002803905@163.com",
                    "first_name": "sdsdsd",
                    "form_fields": "",
                    "handling_cost_ex_tax": "0.0000",
                    "handling_cost_inc_tax": "0.0000",
                    "handling_cost_tax": "0.0000",
                    "handling_cost_tax_class_id": 2,
                    "id": 27,
                    "items_shipped": "0",
                    "items_total": "20",
                    "last_name": "errte",
                    "order_id": 126,
                    "phone": "9497486023",
                    "shipping_method": "Free Shipping",
                    "shipping_quotes": {
                      "resource": "/orders/126/shippingaddresses/27/shippingquotes",
                      "url": "https://api.bigcommerce.com/stores/1i6zpxpe3g/v2/orders/126/shippingaddresses/27/shippingquotes"
                    },
                    "shipping_zone_id": 1,
                    "shipping_zone_name": "United States",
                    "state": "California",
                    "street_1": "15440 Laguna Canyon Road, Ste 213",
                    "street_2": "ssadsdas",
                    "zip": "92618"
                  },
                  "shipping_address_count": 1,
                  "shipping_addresses": {
                    "resource": "/orders/126/shippingaddresses",
                    "url": "https://api.bigcommerce.com/stores/1i6zpxpe3g/v2/orders/126/shippingaddresses"
                  },
                  "shipping_cost_ex_tax": "0.0000",
                  "shipping_cost_inc_tax": "0.0000",
                  "shipping_cost_tax": "0.0000",
                  "shipping_cost_tax_class_id": 2,
                  "staff_notes": "",
                  "status": "Awaiting Payment",
                  "status_id": 7,
                  "store_credit_amount": "0.0000",
                  "store_default_currency_code": "USD",
                  "store_default_to_transactional_exchange_rate": "1.0000000000",
                  "subtotal_ex_tax": "100.0000",
                  "subtotal_inc_tax": "100.0000",
                  "subtotal_tax": "0.0000",
                  "tax_provider_id": "BasicTaxProvider",
                  "total_ex_tax": "100.0000",
                  "total_inc_tax": "100.0000",
                  "total_tax": "0.0000",
                  "wrapping_cost_ex_tax": "0.0000",
                  "wrapping_cost_inc_tax": "0.0000",
                  "wrapping_cost_tax": "0.0000",
                  "wrapping_cost_tax_class_id": 3,
                  "extraStr1": "customize additional information",
                  "extraStr2": "customize additional information",
                  "extraStr3": "customize additional information",
                  "extraStr4": "customize additional information",
                  "extraStr5": "customize additional information",
                  "extraText": "customize additional information",
                  "extraInfo": {
                    "addressExtraFields": {
                      "shippingAddressExtraFields": [
                        {
                          "fieldName": "test",
                          "fieldValue": "test"
                        }
                      ],
                      "billingAddressExtraFields": [
                        {
                          "fieldName": "test",
                          "fieldValue": "test"
                        }
                      ]
                    }
                  }
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Order Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/orders/12/details'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/orders/12/details\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/orders/12/details\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "orderId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/orders/{orderId}/products": {
      "get": {
        "operationId": "orders_products_list",
        "summary": "Get Order Product",
        "description": "Get order's products info",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "optionList": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "option_id": {
                            "description": "Product option ID",
                            "type": "string"
                          },
                          "option_value": {
                            "description": "Product option value",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "productId": {
                      "description": "Product id",
                      "type": "string"
                    },
                    "quantity": {
                      "description": "Product quantity",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "optionList": [],
                  "productId": "97",
                  "quantity": "20",
                  "variantId": "69"
                },
                "message": "Success"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Order Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Order"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/orders/12/products'                     --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/orders/12/products\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/orders/12/products\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "orderId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/proxy": {
      "post": {
        "operationId": "proxy_create",
        "summary": "Third party API proxy",
        "description": "Get response data of third party APIs through this API.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body",
              "required": [
                "method",
                "url",
                "proxyType"
              ],
              "type": "object",
              "properties": {
                "data": {
                  "description": "Request data of your third party request",
                  "type": "string"
                },
                "method": {
                  "description": "HTTP request method, get/post/put/delete",
                  "type": "string"
                },
                "params": {
                  "description": "Request parameters of your third party request",
                  "type": "string"
                },
                "proxyType": {
                  "description": "Third party type or name, such as BigCommerce",
                  "type": "string"
                },
                "url": {
                  "description": "Url of request",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "message": "Success"
              }
            }
          },
          "500": {
            "description": "Response Bad Request",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status error code",
                  "type": "number"
                },
                "message": {
                  "description": "Response error message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 500,
                "message": "Bigcommerce API error"
              }
            }
          }
        },
        "tags": [
          "Proxy"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request POST 'https://api-b2b.bigcommerce.com/api/v2/io/proxy'                         --header 'Content-Type: application/json'                         --data-raw '{\n    \"method\": \"get\",\n    \"url\": \"/v2/customers\",\n    \"proxyType\": \"Bigcommerce\"\n}'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/proxy\"\n\npayload = \"{\"method\": \"get\", \"url\": \"/v2/customers\",\"proxyType\": \"Bigcommerce\"}\"\nheaders = {\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"method\": \"get\", \"url\": \"/v2/customers\", \"proxyType\": \"Bigcommerce\"});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/companies/23/addresses\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": []
    },
    "/sales-reps/companies": {
      "get": {
        "operationId": "sales-reps_companies_list",
        "summary": "Get Companies & Sales reps",
        "description": "Get all companies and their sales reps, default order by company",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset default: 0",
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination limit default: 10",
            "type": "number"
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "Group by('2' for company, '1' for sales reps)",
            "type": "number"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Order by default DESC choice (DESC ASC)",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "list": {
                      "description": "This interface has 2 type response data type, if get with groupBy 2 will return company info, if get with groupBy 1 will return sales reps info",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "catalogId": {
                            "description": "Catalog Id(groupBy: 2)",
                            "type": "string"
                          },
                          "city": {
                            "description": "Company city(groupBy: 2)",
                            "type": "string"
                          },
                          "companyCount": {
                            "description": "Sales rep's company count (groupBy: 1)",
                            "type": "string"
                          },
                          "companyEmail": {
                            "description": "Company name(groupBy: 2)",
                            "type": "string"
                          },
                          "companyId": {
                            "description": "Company Id(groupBy: 2)",
                            "type": "string"
                          },
                          "companyName": {
                            "description": "Company name(groupBy: 2)",
                            "type": "string"
                          },
                          "country": {
                            "description": "Company country(groupBy: 2)",
                            "type": "string"
                          },
                          "email": {
                            "description": "Sales rep's email (groupBy: 1)",
                            "type": "string"
                          },
                          "firstName": {
                            "description": "Sales rep's first name(groupBy: 1)",
                            "type": "string"
                          },
                          "lastName": {
                            "description": "Sales rep's last name(groupBy: 1)",
                            "type": "string"
                          },
                          "role": {
                            "description": "Sales rep's role (groupBy: 1)",
                            "type": "string"
                          },
                          "salesRepCount": {
                            "description": "Company's sales reps count(groupBy: 2)",
                            "type": "string"
                          },
                          "salesRepId": {
                            "description": "Sales rep's Id (groupBy: 1)",
                            "type": "string"
                          },
                          "state": {
                            "description": "Company state(groupBy: 2)",
                            "type": "string"
                          },
                          "zipCode": {
                            "description": "Company zip code(groupBy: 2)",
                            "type": "string"
                          },
                          "channelList": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "channelId": {
                                  "type": "integer",
                                  "description": "BigCommerce channel id"
                                },
                                "channelName": {
                                  "type": "string",
                                  "description": "Channel name"
                                },
                                "iconUrl": {
                                  "type": "string",
                                  "description": "Icon url"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "description": "Response data pagination",
                      "type": "object",
                      "properties": {
                        "limit": {
                          "description": "Response pagination limit",
                          "type": "number"
                        },
                        "offset": {
                          "description": "Response pagination offset",
                          "type": "number"
                        },
                        "totalCount": {
                          "description": "Response data items number",
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "list": [
                    {
                      "addressLine1": "",
                      "addressLine2": "",
                      "catalogId": "2",
                      "city": "",
                      "companyEmail": "kobe.tian@bunldeb2b.com",
                      "companyId": "34",
                      "companyName": "KobeCropTest111",
                      "country": ",",
                      "description": "KobeCropTest111",
                      "salesRepCount": "2",
                      "state": "",
                      "zipCode": ""
                    }
                  ],
                  "pagination": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 1
                  }
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "SalesRep"
        ]
      },
      "parameters": []
    },
    "/store/payments": {
      "get": {
        "operationId": "store_payments_list",
        "summary": "Get Store's All Payments",
        "description": "Get store's all payments",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "list": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "paymentCode": {
                            "description": "Payment method code",
                            "type": "string"
                          },
                          "paymentTitle": {
                            "description": "Payment method title",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "list": [
                    {
                      "paymentCode": "authorizenet",
                      "paymentTitle": "Authorize.net"
                    },
                    {
                      "paymentCode": "braintree",
                      "paymentTitle": "Braintree"
                    },
                    {
                      "paymentCode": "cheque",
                      "paymentTitle": "Check"
                    },
                    {
                      "paymentCode": "testgateway",
                      "paymentTitle": "Test Payment Gateway"
                    }
                  ]
                },
                "message": "SUCCESS"
              }
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://api-b2b.bigcommerce.com/api/v2/io/store/payments'                         --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                         --header 'Content-Type: application/json'\n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/store/payments\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/store/payments\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": []
    },
    "/users/{customerId}/companies": {
      "get": {
        "operationId": "users_companies_list",
        "summary": "Get Company By CustomerId",
        "description": "Get company by customer Id, if company not in bigCommerce will delete the company",
        "parameters": [
          {
            "name": "authToken",
            "in": "header",
            "description": "Auth token in header.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "description": "Company address line 1",
                      "type": "string"
                    },
                    "addressLine2": {
                      "description": "Company address line 2",
                      "type": "string"
                    },
                    "catalogId": {
                      "description": "Catalog Id",
                      "type": "string"
                    },
                    "city": {
                      "description": "Company city",
                      "type": "string"
                    },
                    "companyId": {
                      "description": "Company Id",
                      "type": "string"
                    },
                    "companyName": {
                      "description": "Company name",
                      "type": "string"
                    },
                    "companyStatus": {
                      "description": "Company status",
                      "type": "string"
                    },
                    "country": {
                      "description": "Company country",
                      "type": "string"
                    },
                    "description": {
                      "description": "Company description",
                      "type": "string"
                    },
                    "state": {
                      "description": "Company state",
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "Company zip code",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 200,
                "data": {
                  "addressLine1": "",
                  "addressLine2": "",
                  "catalogId": "1",
                  "city": "Paris",
                  "companyId": "35",
                  "companyName": "CropTest1",
                  "companyStatus": "1",
                  "country": "French",
                  "description": "CropTest",
                  "state": "BC",
                  "zipCode": "1032332"
                },
                "message": "SUCCESS"
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "schema": {
              "description": "Response body",
              "type": "object",
              "properties": {
                "code": {
                  "description": "Response status code",
                  "type": "number"
                },
                "data": {
                  "description": "Response data",
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "description": "Error message info",
                      "type": "string"
                    }
                  }
                },
                "message": {
                  "description": "Response message",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "code": 404,
                "data": {
                  "errMsg": "Companies Does not Exist"
                },
                "message": "Not Found Error"
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "\ncurl --location --request GET 'https://https://api-b2b.bigcommerce.com/api/v2/io/users/124/companies'                              --header 'authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY'                              --header 'Content-Type: application/json' \n"
          },
          {
            "lang": "Python",
            "source": "\nimport requests\n\nurl = \"https://api-b2b.bigcommerce.com/api/v2/io/users/124/companies\"\n\npayload = {}\nheaders = {\n  'authToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data = payload)\n\nprint(response.text.encode('utf8'))\n"
          },
          {
            "lang": "JavaScript",
            "source": "\nvar myHeaders = new Headers();\nmyHeaders.append(\"authToken\", \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdG9yZV9oYXNoIjoiZjJvc3hqam54aiIsImRiIjoiZGVmYXVsdCIsImVtYWlsIjoiYnJ1Y2UuaHVhbmdAc2lsa3NvZnR3YXJlLmNvbSJ9._DQFg-3FgtztdQVCGU5Gxfv8j8V3U9Ssaw7ARxUU6pY\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-b2b.bigcommerce.com/api/v2/io/users/124/companies\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          }
        ]
      },
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "BigCommerce's customer id"
        }
      ]
    },
    "/users/{userId}/company": {
      "parameters": [
        {
          "type": "string",
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {}
}