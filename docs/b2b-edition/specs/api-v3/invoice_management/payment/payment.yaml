openapi: '3.0.1'
info:
  title: PaymentMethod
  description: BigCommerce B2B Edition PaymentMethod
  contact: {}
  version: v3
servers:
  - url: 'https://api-b2b.bigcommerce.com/api/v3/io/ip'
security:
  - authToken: []
components:
  securitySchemes:
    authToken:
      name: authToken
      type: apiKey
      in: header
  responses:
    '400':
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              code:
                type: number
              data:
                type: object
                properties:
                  errMsg:
                    type: string
                    minLength: 1
                required:
                  - errMsg
              meta:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
            required:
              - code
              - data
              - meta
            x-examples:
              example-1:
                code: 400
                data:
                  errMsg: The payment operation is not allowed.
                meta:
                  message: Not Found Error
          examples:
            example-1:
              value:
                code: 400
                data:
                  errMsg: The payment operation is not allowed.
                meta:
                  message: Not Found Error
            example-2:
              value:
                code: 400
                data:
                  errMsg: The payment processing status is not allowed.
                meta:
                  message: Not Found Error
    '404':
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              code:
                type: number
              data:
                type: object
                properties:
                  errMsg:
                    type: string
                    minLength: 1
                required:
                  - errMsg
              meta:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
            required:
              - code
              - data
              - meta
            x-examples:
              example-1:
                code: 404
                data:
                  errMsg: Payment does not exist
                meta:
                  message: Not Found Error
          examples:
            example:
              value:
                code: 404
                data:
                  errMsg: Payment does not exist
                meta:
                  message: Not Found Error
    '422':
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                code: 422
                meta:
                  message: Parameter Error
                data:
                  lineItems:
                    - This field is required.
            properties:
              code:
                type: number
              meta:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    minLength: 1
              data:
                type: object
                required:
                  - '{field name}'
                properties:
                  '{field name}':
                    type: array
                    items:
                      type: string
            required:
              - code
              - meta
              - data
          examples:
            example:
              value:
                code: 422
                meta:
                  message: Parameter Error
                data:
                  currency:
                    - Currency is required
paths:
  /payments:
    get:
      summary: Get Payments
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    code: 200
                    data:
                      - id: 117
                        createdAt: 1635932127
                        updatedAt: 1635932127
                        storeHash: rtmh8fqr05
                        customerId: '6041'
                        externalId: null
                        externalCustomerId: null
                        payerName: Check
                        payerCustomerId: '6041'
                        details:
                          memo: k
                        moduleName: payments_offline
                        fees: []
                        moduleData:
                          transactions:
                            - memo: k
                              type: OfflineTransaction
                              rawTransaction: null
                        processingStatus: 3
                        appliedStatus: 1
                        fundingStatus: 2
                        total:
                          code: GBP
                          value: '0.7800'
                        lineItems:
                          - paymentId: 117
                            invoiceId: 141
                            invoiceNumber: '00000141'
                            amount:
                              code: GBP
                              value: '0.7800'
                        customerName: ''
                        allowedOperations: []
                        allowedStatuses:
                          - 1
                          - 2
                          - 3
                          - 4
                    meta:
                      pagination:
                        totalCount: 2
                        offset: 0
                        limit: 10
                      message: SUCCESS
                properties:
                  code:
                    type: number
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        createdAt:
                          type: number
                        updatedAt:
                          type: number
                        storeHash:
                          type: string
                          minLength: 1
                        customerId:
                          type: string
                          minLength: 1
                        externalId:
                          type: string
                          nullable: true
                        externalCustomerId:
                          type: string
                          nullable: true
                        payerName:
                          type: string
                          minLength: 1
                        payerCustomerId:
                          type: string
                          minLength: 1
                        details:
                          type: object
                          properties:
                            memo:
                              type: string
                              minLength: 1
                          required:
                            - memo
                        moduleName:
                          type: string
                          minLength: 1
                        fees:
                          type: array
                          items:
                            type: object
                        moduleData:
                          type: object
                          properties:
                            transactions:
                              type: array
                              uniqueItems: true
                              minItems: 1
                              items:
                                type: object
                                properties:
                                  memo:
                                    type: string
                                    minLength: 1
                                  type:
                                    type: string
                                    minLength: 1
                                  rawTransaction:
                                    type: array
                                    nullable: true
                                    items: {}
                                required:
                                  - memo
                                  - type
                          required:
                            - transactions
                        processingStatus:
                          type: number
                        appliedStatus:
                          type: number
                        fundingStatus:
                          type: number
                        total:
                          type: object
                          required:
                            - code
                            - value
                          properties:
                            code:
                              type: string
                              minLength: 1
                            value:
                              type: string
                              minLength: 1
                        lineItems:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            type: object
                            properties:
                              paymentId:
                                type: number
                              invoiceId:
                                type: number
                              invoiceNumber:
                                type: string
                                minLength: 1
                              amount:
                                type: object
                                properties:
                                  code:
                                    type: string
                                    minLength: 1
                                  value:
                                    type: string
                                    minLength: 1
                                required:
                                  - code
                                  - value
                            required:
                              - paymentId
                              - invoiceId
                              - invoiceNumber
                        customerName:
                          type: string
                        allowedOperations:
                          type: array
                          items:
                            type: number
                        allowedStatuses:
                          type: array
                          items:
                            type: number
                        channelId:
                          type: string
                          description: BigCommerce channel id
                        channelName:
                          type: string
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - storeHash
                        - customerId
                        - payerName
                        - payerCustomerId
                        - moduleName
                        - processingStatus
                        - appliedStatus
                        - fundingStatus
                        - total
                        - lineItems
                        - customerName
                  meta:
                    type: object
                    required:
                      - pagination
                      - message
                    properties:
                      pagination:
                        type: object
                        required:
                          - totalCount
                          - offset
                          - limit
                        properties:
                          totalCount:
                            type: number
                          offset:
                            type: number
                          limit:
                            type: number
                      message:
                        type: string
                        minLength: 1
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      - id: 70
                        createdAt: 1618800393
                        updatedAt: 1618803026
                        storeHash: jexy81vb0h
                        customerId: '95075'
                        externalId: null
                        externalCustomerId: null
                        payerName: Store offline payment
                        payerCustomerId: '95075'
                        details:
                          memo: ''
                        moduleName: payments_offline
                        fees: []
                        moduleData: {}
                        processingStatus: 3
                        appliedStatus: 1
                        fundingStatus: 2
                        total:
                          code: USD
                          value: '6.0000'
                        lineItems:
                          - paymentId: 70
                            invoiceId: 26
                            amount:
                              code: USD
                              value: '6.0000'
                        customerName: silk
                        allowedOperations: []
                        allowedStatuses:
                          - 1
                          - 2
                          - 3
                          - 4
                      - id: 66
                        createdAt: 1618590401
                        updatedAt: 1618797215
                        storeHash: jexy81vb0h
                        customerId: '3'
                        externalId: null
                        externalCustomerId: null
                        payerName: Store offline payment
                        payerCustomerId: '3'
                        details:
                          memo: 'Check#:12345'
                        moduleName: payments_offline
                        fees: []
                        moduleData: {}
                        processingStatus: 2
                        appliedStatus: 1
                        fundingStatus: 2
                        total:
                          code: USD
                          value: '30.0000'
                        lineItems:
                          - paymentId: 66
                            invoiceId: 30
                            amount:
                              code: USD
                              value: '10.0000'
                          - paymentId: 66
                            invoiceId: 28
                            amount:
                              code: USD
                              value: '20.0000'
                        customerName: ABC123
                        allowedOperations: []
                        allowedStatuses:
                          - 1
                          - 2
                          - 3
                          - 4
                      - id: 65
                        createdAt: 1618502653
                        updatedAt: 1618502653
                        storeHash: jexy81vb0h
                        customerId: '3'
                        externalId: null
                        externalCustomerId: null
                        payerName: Store offline payment
                        payerCustomerId: '3'
                        details:
                          memo: '123456'
                        moduleName: payments_offline
                        fees: []
                        moduleData: {}
                        processingStatus: 3
                        appliedStatus: 1
                        fundingStatus: 2
                        total:
                          code: USD
                          value: '30.0000'
                        lineItems:
                          - paymentId: 65
                            invoiceId: 30
                            amount:
                              code: USD
                              value: '10.0000'
                          - paymentId: 65
                            invoiceId: 28
                            amount:
                              code: USD
                              value: '20.0000'
                        customerName: ABC123
                        allowedOperations: []
                        allowedStatuses:
                          - 1
                          - 2
                          - 3
                          - 4
                        channelId: 1
                        channelName: string
                    meta:
                      pagination:
                        totalCount: 59
                        offset: 0
                        limit: 10
                      message: SUCCESS
      operationId: get-payments
      description: Get payment list
      parameters:
        - schema:
            type: number
          in: query
          name: offset
          description: Pagination offset
        - schema:
            type: number
          in: query
          name: limit
          description: Pagination limit
        - schema:
            type: string
            enum:
              - DESC
              - ASC
            example: DESC
          in: query
          name: orderBy
          description: '"DESC" or "ASC"'
        - schema:
            type: string
            example: createdAt
            enum:
              - moduleName
              - processingStatus
              - appliedStatus
              - createdAt
              - customerId
              - externalCustomerId
              - fundingStatus
              - updatedAt
              - totalAmount
          in: query
          name: sortBy
          description: Sort by the field value
        - schema:
            type: string
            enum:
              - id
              - customerId
              - externalId
              - externalCustomerId
          in: query
          name: searchBy
          description: Filter by a field
        - schema:
            type: string
          in: query
          name: q
          description: 'Keyword queries are performed on fields corresponding to the value of "searchBy" or, if "searchBy" is empty, on all fields supported by "searchBy"'
        - schema:
            type: string
          in: query
          name: customerName
          description: Query by invoice B2B Edition company name
        - schema:
            type: number
          in: query
          name: invoiceId
          description: Query by invoice id
        - schema:
            type: number
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
            example: 3
          in: query
          name: processingStatus
          description: 'payment processing status(0="Incomplete", 1="Awaiting Processing", 2="Processing", 3="Completed", 4="Refunded")'
        - schema:
            type: array
          in: query
          name: channelIds
          description: BigCommerce channel ids. Do not use this parameter if you do not have opened multi-storefront
  '/payments/{paymentId}':
    parameters:
      - schema:
          type: number
        name: paymentId
        in: path
        required: true
        description: Payment Id
    get:
      summary: Get Payment Detail
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    code: 200
                    data:
                      id: 117
                      createdAt: 1635932127
                      updatedAt: 1635932127
                      storeHash: rtmh8fqr05
                      customerId: '6041'
                      externalId: null
                      externalCustomerId: null
                      payerName: Check
                      payerCustomerId: '6041'
                      details:
                        memo: k
                      moduleName: payments_offline
                      fees: []
                      moduleData:
                        transactions:
                          - memo: k
                            type: OfflineTransaction
                            rawTransaction: null
                      processingStatus: 3
                      appliedStatus: 1
                      fundingStatus: 2
                      total:
                        code: GBP
                        value: '0.7800'
                      lineItems:
                        - paymentId: 117
                          invoiceId: 141
                          invoiceNumber: '00000141'
                          amount:
                            code: GBP
                            value: '0.7800'
                      customerName: ''
                      allowedOperations: []
                      allowedStatuses:
                        - 1
                        - 2
                        - 3
                        - 4
                    meta:
                      message: SUCCESS
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - storeHash
                      - customerId
                      - payerName
                      - payerCustomerId
                      - details
                      - moduleName
                      - fees
                      - moduleData
                      - processingStatus
                      - appliedStatus
                      - fundingStatus
                      - total
                      - lineItems
                      - customerName
                      - allowedOperations
                      - allowedStatuses
                    properties:
                      id:
                        type: number
                      createdAt:
                        type: number
                      updatedAt:
                        type: number
                      storeHash:
                        type: string
                        minLength: 1
                      customerId:
                        type: string
                        minLength: 1
                      externalId:
                        type: string
                        nullable: true
                      externalCustomerId:
                        type: string
                        nullable: true
                      payerName:
                        type: string
                        minLength: 1
                      payerCustomerId:
                        type: string
                        minLength: 1
                      details:
                        type: object
                        properties:
                          memo:
                            type: string
                            minLength: 1
                      moduleName:
                        type: string
                        minLength: 1
                      fees:
                        type: array
                        items:
                          type: object
                      moduleData:
                        type: object
                        required:
                          - transactions
                        properties:
                          transactions:
                            type: array
                            uniqueItems: true
                            minItems: 1
                            items:
                              type: object
                              properties:
                                memo:
                                  type: string
                                  minLength: 1
                                type:
                                  type: string
                                  minLength: 1
                                rawTransaction: {}
                              required:
                                - type
                      processingStatus:
                        type: number
                      appliedStatus:
                        type: number
                      fundingStatus:
                        type: number
                      total:
                        type: object
                        required:
                          - code
                          - value
                        properties:
                          code:
                            type: string
                            minLength: 1
                          value:
                            type: string
                            minLength: 1
                      lineItems:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            paymentId:
                              type: number
                            invoiceId:
                              type: number
                            invoiceNumber:
                              type: string
                              minLength: 1
                            amount:
                              type: object
                              properties:
                                code:
                                  type: string
                                  minLength: 1
                                value:
                                  type: string
                                  minLength: 1
                              required:
                                - code
                                - value
                          required:
                            - paymentId
                            - invoiceId
                            - invoiceNumber
                      customerName:
                        type: string
                      allowedOperations:
                        type: array
                        description: |-
                          allowed payment actions
                          operation code map as 
                          (0, "Apply to Invoice Balances"),
                          (1, "Revert Invoice Balances"),
                          (2, "Pull Updates From Order"),
                        items:
                          type: number
                      allowedStatuses:
                        type: array
                        description: |-
                          allowed payment status 
                          status code should be following
                          (1, 'Awaiting Processing'),
                          (2, 'Processing'),
                          (3, 'Completed'),
                          (4, 'Refunded'),
                        items:
                          type: number
                      channelId:
                        type: string
                        description: BigCommerce channel id
                      channelName:
                        type: string
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      id: 20
                      createdAt: 1617761431
                      updatedAt: 1617762957
                      storeHash: jexy81vb0h
                      customerId: '95075'
                      externalId: null
                      externalCustomerId: null
                      payerName: Hannah Admin
                      payerCustomerId: '95075'
                      details:
                        memo: ''
                      moduleName: payments_bigcommerce_sales_order
                      fees: []
                      moduleData:
                        cartId: d0afeab8-ff76-4b4e-867a-0675c0ea6e6e
                        orderId: 121
                        transactions:
                          - type: UnknownTransaction
                            rawTransaction: null
                      processingStatus: 4
                      appliedStatus: 0
                      fundingStatus: 2
                      total:
                        code: USD
                        value: '11.0000'
                      lineItems:
                        - paymentId: 20
                          invoiceId: 9
                          amount:
                            code: USD
                            value: '11.0000'
                      customerName: silk
                      allowedOperations: []
                      allowedStatuses:
                        - 1
                        - 2
                        - 3
                        - 4
                      channelId: 1
                      channelName: string
                    meta:
                      message: SUCCESS
        '404':
          $ref: '#/components/responses/404'
      operationId: get-payments-paymentId
      description: Get payment detail
      parameters: []
    delete:
      summary: Delete a Payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                      errors:
                        type: string
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      id: 1
                    meta:
                      message: SUCCESS
        '404':
          $ref: '#/components/responses/404'
      operationId: delete-a-payment
      description: Delete a payment
      parameters: []
  '/payments/{paymentId}/operations':
    parameters:
      - schema:
          type: number
        name: paymentId
        in: path
        required: true
        description: Payment Id
    get:
      summary: Get a Payment Operations
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    required:
                      - allowedOperations
                      - allowedStatuses
                    properties:
                      allowedOperations:
                        type: array
                        description: A list of allowable action codes for current payments
                        items: {}
                      allowedStatuses:
                        type: array
                        description: The list of states that the current payment allows to modify
                        items: {}
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                      errors:
                        type: string
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      allowedOperations: []
                      allowedStatuses:
                        - '1'
                        - '2'
                        - '3'
                        - '4'
                    meta:
                      message: Success
        '404':
          $ref: '#/components/responses/404'
      operationId: get-payment-operations-operations
      description: Get a payment all operations
      parameters: []
    post:
      summary: Performing Payment Operation
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                      errors:
                        type: string
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      id: 4
                    meta:
                      message: SUCCESS
        '400':
          $ref: '#/components/responses/400'
      operationId: post-payments-paymentId-operations
      description: Performing payment operation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                operationCode:
                  type: number
                  description: 'Payment operation code, list of allowed operations of this payment'
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                  example: '0'
              required:
                - operationCode
            examples:
              '200':
                value:
                  code: 200
                  data:
                    id: 3
                  meta:
                    message: SUCCESS
        description: ''
  '/payments/{paymentId}/processing-status':
    parameters:
      - schema:
          type: number
        name: paymentId
        in: path
        required: true
        description: Payment Id
    put:
      summary: Update Payment Processing Status
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                      errors:
                        type: string
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      id: 2
                    meta:
                      message: SUCCESS
        '400':
          $ref: '#/components/responses/400'
      operationId: put-payments-paymentId-processing-status
      description: Update payment processing status
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                processingStatus:
                  type: number
                  description: 'payment processing status(1="Awaiting Processing", 2="Processing", 3="Completed", 4="Refunded")'
              required:
                - processingStatus
  '/payments/{paymentId}/transactions':
    parameters:
      - schema:
          type: number
        name: paymentId
        in: path
        required: true
        description: Payment Id
    get:
      summary: Get Payment Transactions
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 200
                    data:
                      - type: CreditCardTransaction
                        gateway: test
                        transactionId: '521263'
                        authCode: null
                        event: capture
                        card:
                          type: Visa
                          last4: '1111'
                          expiryYear: 2050
                          expiryMonth: 12
                        rawTransaction: null
                    meta:
                      message: SUCCESS
                properties:
                  code:
                    type: number
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    description: 'contains payment transaction information, varies from different payment gateway，depends on payment gateway'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          minLength: 1
                        gateway:
                          type: string
                          minLength: 1
                        transactionId:
                          type: string
                          minLength: 1
                        authCode:
                          type: string
                        event:
                          type: string
                          minLength: 1
                        card:
                          type: object
                          properties:
                            type:
                              type: string
                              minLength: 1
                            last4:
                              type: string
                              minLength: 1
                            expiryYear:
                              type: number
                            expiryMonth:
                              type: number
                        rawTransaction:
                          type: string
                      required:
                        - type
                        - rawTransaction
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      - type: CreditCardTransaction
                        gateway: test
                        transactionId: '521263'
                        authCode: ''
                        event: capture
                        card:
                          type: Visa
                          last4: '1111'
                          expiryYear: 2050
                          expiryMonth: 12
                        rawTransaction: ''
                    meta:
                      message: SUCCESS
        '404':
          $ref: '#/components/responses/404'
      operationId: get-payments-paymentId-transactions
      description: Get payment transactions
      parameters: []
  /payments/offline:
    post:
      summary: Create Offline Payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    required:
                      - paymentId
                    properties:
                      paymentId:
                        type: number
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                      errors:
                        type: string
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      paymentId: 112
                    meta:
                      message: SUCCESS
        '422':
          $ref: '#/components/responses/422'
      operationId: post-payments-offline
      description: Create offline payment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lineItems:
                  type: array
                  items:
                    type: object
                    properties:
                      invoiceId:
                        type: number
                      amount:
                        type: string
                    required:
                      - invoiceId
                      - amount
                currency:
                  type: string
                details:
                  type: object
                  properties:
                    memo:
                      type: string
                externalId:
                  type: string
                customerId:
                  type: string
                  description: B2B Edition Company Id
                externalCustomerId:
                  type: string
                payerName:
                  type: string
                  default: Store offline payment
                  description: Default is "Store Offline Payment " if no value is passed in.
                payerCustomerId:
                  type: string
                  description: The default is the same as the customerId
                processingStatus:
                  type: number
                  default: 3
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 3
                  description: 'payment status, 3 as default '
                channelId:
                  type: integer
                  description: BigCommerce channel id
              required:
                - lineItems
                - currency
                - details
                - customerId
            examples:
              example:
                value:
                  lineItems:
                    - invoiceId: 13
                      amount: '20.00'
                  currency: USD
                  details:
                    memo: Test
                  customerId: '113'
                  payerName: Store offline payment
                  payerCustomerId: '113'
                  processingStatus: '3'
                  fundingStatus: '2'
  '/payments/offline/{paymentId}':
    parameters:
      - schema:
          type: number
        name: paymentId
        in: path
        required: true
        description: Payment Id
    put:
      summary: Update a Offline Payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    properties:
                      paymentId:
                        type: number
                  meta:
                    type: object
                    required:
                      - message
                    properties:
                      message:
                        type: string
                        minLength: 1
                      errors:
                        type: string
                required:
                  - code
                  - data
                  - meta
              examples:
                '200':
                  value:
                    code: 200
                    data:
                      paymentId: 112
                    meta:
                      message: SUCCESS
        '422':
          $ref: '#/components/responses/422'
      operationId: put-payments-offline-paymentId
      description: Update offline payment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lineItems:
                  type: array
                  items:
                    type: object
                    properties:
                      invoiceId:
                        type: number
                      amount:
                        type: string
                    required:
                      - invoiceId
                      - amount
                currency:
                  type: string
                details:
                  type: object
                  properties:
                    memo:
                      type: string
                externalId:
                  type: string
                customerId:
                  type: string
                  description: B2B Edition Company Id
                externalCustomerId:
                  type: string
                payerName:
                  type: string
                  default: Store offline payment
                  description: Default is "Store Offline Payment " if no value is passed in.
                payerCustomerId:
                  type: string
                  description: The default is the same as the customerId
                processingStatus:
                  type: number
                  default: 3
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 3
                fundingStatus:
                  type: number
                  default: 2
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
              required:
                - lineItems
                - currency
                - details
                - customerId
            examples:
              example:
                value:
                  lineItems:
                    - invoiceId: 13
                      amount: '20.00'
                  currency: USD
                  details:
                    memo: Test
                  customerId: '113'
                  payerName: Store offline payment
                  payerCustomerId: '113'
                  processingStatus: 3
                  fundingStatus: 2
tags:
  - name: Payments
