openapi: 3.0.1
info:
  title: Shopping List
  description: BigCommerce B2B Edition Shopping List
  contact: {}
  version: v3
servers:
  - url: 'https://api-b2b.bigcommerce.com/api/v3/io'
security:
  - Basic: []
tags:
  - name: Shopping List
    description: Shopping List management.
paths:
  /shopping-list:
    get:
      summary: Get Shopping Lists
      tags:
        - Shopping List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/utils/response-object.yaml
                  - type: object
                    properties:
                      meta:
                        $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/utils/pagination.yaml
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/shopping_list'
              examples: {}
        '422':
          $ref: '#/components/responses/422'
      operationId: get-shopping-list
      description: |-
        Get a list of shopping lists viewable based on user permissions of a buyer user id.

        A junior buyer can see all of the lists they create and no one else's.

        A senior buyer or admin can see all of the companies approved or ready for approval lists. This would include lists sent by junior buyers.
      parameters:
        - schema:
            type: integer
          in: query
          name: userId
          description: 'B2B Edition buyer user id(One of userId and customerId must be passed, and only one of them can be passed)'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - schema:
            type: number
          in: query
          name: channelId
          description: BigCommerce channel id
        - schema:
            type: integer
          in: query
          name: customerId
          description: 'BigCommerce customer id(One of userId and customerId must be passed, and only one of them can be passed)'
        - schema:
            type: integer
          in: query
          name: createdUserId
          description: 'B2B Edition buyer user id, if the userId has permissions to view all shopping lists of the 
          company, entering this parameter will filter out the shopping lists created by that user.'
      security:
        - authToken: []
    post:
      summary: Create a Shopping List
      operationId: post-shopping-list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/utils/response-object.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          shoppingListId:
                            type: integer
                            description: shopping list id for created
                            example: 1
              examples:
                example-1:
                  value:
                    code: 200
                    meta:
                      message: SUCCESS
                    data:
                      shoppingListId: 1
        '422':
          $ref: '#/components/responses/422'
      tags:
        - Shopping List
      description: create a shopping list for a user
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    name:
                      type: string
                    description:
                      type: string
                      description: description information for shopping list
                    status:
                      type: integer
                      description: 'status of shopping list, (0: approved, 20: deleted, 30: draft, 40: ready for approval)'
                      enum:
                        - 0
                        - 30
                        - 40
                      example: 0
                    userId:
                      type: integer
                      description: 'B2B Edition buyer user id(One of userId and customerId must be passed, and only one of them can be passed)'
                    customerId:
                      type: integer
                      x-stoplight:
                        id: pb1efje3kgqqo
                      description: 'BigCommerce customer id(One of userId and customerId must be passed, and only one of them can be passed)'
                    channelId:
                      type: integer
                      description: BigCommerce channel id
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/shopping_list_item'
                  required:
                    - name
              type: object
            examples:
              example-1:
                value:
                  name: my first shopping list
                  description: this is my first shopping list
                  status: 0
                  userId: 0
                  channelId: 1
                  items:
                    - productId: 123
                      variantId: 321
                      quantity: 5
              Example 1:
                value:
                  name: my first shopping list
                  description: this is my first shopping list
                  status: 0
                  customerId: 0
                  channelId: 1
                  items:
                    - productId: 123
                      variantId: 321
                      quantity: 5
        description: ''
      security:
        - authToken: []
  '/shopping-list/{shoppingListId}':
    get:
      summary: Get a Shopping List
      tags:
        - Shopping List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/utils/response-object.yaml
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/shopping_list'
                          - type: object
                            properties:
                              items:
                                type: array
                                items:
                                  $ref: '#/components/schemas/shopping_list_item'
                  - type: object
                    x-stoplight:
                      id: zka4a8tisb66g
                    properties:
                      meta:
                        x-stoplight:
                          id: csv4ed548bp7e
                        type: object
                        properties:
                          pagination:
                            type: object
                            x-stoplight:
                              id: km5rkrtftuvgf
                            properties:
                              totalCount:
                                type: integer
                                x-stoplight:
                                  id: x8lrr38ifqna9
                                description: The total number of the all data
                              limit:
                                type: integer
                                x-stoplight:
                                  id: xflcvhxtgazvp
                                description: 'Pagination limit '
                              offset:
                                type: integer
                                x-stoplight:
                                  id: q8znvefz4a0xc
                                description: Pagination offset
              examples: {}
        '404':
          $ref: '#/components/responses/404'
      operationId: get-shopping-list-shoppingListId
      description: get a shopping list detail information
      parameters:
        - schema:
            type: integer
          in: query
          name: userId
          description: 'B2B Edition buyer user id, you can enter a user id for check if this user can view this shopping list'
        - schema:
            type: string
            enum:
              - quantity
              - productName
              - productSku
              - sortOrder
            example: sortOrder
          in: query
          name: sortBy
          description: the field to sort by
        - schema:
            type: string
            enum:
              - DESC
              - ASC
            example: DESC
          in: query
          name: orderBy
          description: desc or asc for sort by
        - schema:
            type: integer
          in: query
          description: 'BigCommerce customer id, passing this parameter will obtain the shopping list according to the b2c user'
          name: customerId
        - schema:
            type: integer
            minimum: 0
            default: 0
          in: query
          name: offset
          description: Pagination offset for shopping list items
        - schema:
            type: integer
            default: 250
            minimum: 1
            maximum: 250
          in: query
          name: limit
          description: Pagination limit for shopping list items
      security:
        - authToken: []
    parameters:
      - $ref: '#/components/parameters/shoppingListId'
    put:
      summary: Update a Shopping List
      operationId: put-shopping-list-shoppingListId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/utils/response-object.yaml
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/shopping_list'
              examples:
                example-1:
                  value:
                    code: 200
                    meta:
                      message: SUCCESS
                    data:
                      id: 1
                      name: my first shopping list
                      description: this is my first shopping list
                      status: 0
                      companyId: 1
                      userId: 12
                      createdAt: 1631495936
                      updatedAt: 1631495936
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
      tags:
        - Shopping List
      description: |-
        update a shopping list detail. you can also update shopping list items by update the items field by this API endpoints. 
        note: 
        1. User id for update the shopping list is not required. You can optionally enter this field according to whether you need to judge user permissions.
        2. The id field in shopping list items is an optional field. If it is null, you can only change the quantity of this item by product id and variant id and option list, these three fields will determine an actual item. If it is not null, the id field will determine an actual item and you can change product id and variant id and option list by this way.
        3. Set a zero quantity of shopping list item will delete this item.
        4. Quantity = 0 will remove item, you can modify multiple items at one time
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    name:
                      type: string
                      example: my first shopping list
                      description: name for shopping list
                    description:
                      type: string
                      description: description information for shopping list
                      example: this is my first shopping list
                    status:
                      type: integer
                      description: 'status of shopping list, (0: approved, 20: deleted, 30: draft, 40: ready for approval)'
                      enum:
                        - 0
                        - 30
                        - 40
                      example: 0
                    userId:
                      type: integer
                      example: 12
                      description: 'B2B Edition buyer user id, you can enter a user id for check if this user can update this shopping list'
                    customerId:
                      type: integer
                      x-stoplight:
                        id: 00y1uko9vm7c7
                      description: 'BigCommerce customer id, passing this parameter will obtain the shopping list according to the b2c user'
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: unique id field for shopping list item
                          productId:
                            type: integer
                            description: product id for shopping list item
                          variantId:
                            type: integer
                            description: 'variant id for shopping list item.If the product has options, variant id is required, otherwise it can be left blank'
                          quantity:
                            type: integer
                            description: quantity of product and variant
                          sortOrder:
                            type: integer
                            description: The sort order for item
                          optionList:
                            type: object
                            description: The optionlist does not need to be input in and will be automatically obtained based on productId and variantId.
                            properties:
                              optionId:
                                type: string
                              optionValue:
                                type: string
                          productNote:
                            type: string
                            description: product note
              type: object
            examples:
              example-1:
                value:
                  name: test
                  description: develop test
                  status: 0
                  companyId: 155576
                  userId: 223437
                  items:
                    - id: 75693
                      productId: 107
                      variantId: 73
                      quantity: 0
                    - id: 85416
                      productId: 86
                      variantId: 66
                      quantity: 40
                    - id: 76533
                      productId: 112
                      variantId: 79
                      quantity: 1
              Example 1:
                value:
                  name: test
                  description: develop test
                  status: 0
                  companyId: 155576
                  customerId: 237
                  items:
                    - id: 76533
                      productId: 112
                      variantId: 79
                      quantity: 1
        description: ''
      security:
        - authToken: []
      parameters: []
    delete:
      summary: Delete a Shopping List
      operationId: delete-shopping-list-shoppingListId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/utils/response-object.yaml
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          shoppingListId:
                            type: integer
                            example: 1
                            description: shopping list id for deleted
              examples:
                example-1:
                  value:
                    code: 200
                    meta:
                      message: SUCCESS
                    data:
                      shoppingListId: 1
        '404':
          $ref: '#/components/responses/422'
      tags:
        - Shopping List
      description: delete a shopping list. note this will not delete shopping list item.
      parameters:
        - schema:
            type: integer
          in: query
          name: userId
          description: 'B2B Edition buyer user id, you can enter a user id for check if this user can delete this shopping list'
      security:
        - authToken: []
  '/shopping-list/{shoppingListId}/items/{itemId}':
    parameters:
      - schema:
          type: string
        name: shoppingListId
        in: path
        required: true
      - schema:
          type: string
        name: itemId
        in: path
        required: true
    delete:
      summary: delete a shopping list item
      operationId: delete-shopping-list-shoppingListId-items-itemId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                  data:
                    type: object
                required:
                  - code
                  - message
                  - data
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  data:
                    type: object
                    properties:
                      errMsg:
                        type: string
                  meta:
                    type: object
                    properties:
                      message:
                        type: string
              examples:
                example-1:
                  value:
                    code: 404
                    data:
                      errMsg: Shopping list item matching query does not exist.
                    meta:
                      message: Not Found Error
      security:
        - authToken: []
      description: ''
      tags:
        - Shopping List
      parameters: []
components:
  parameters:
    shoppingListId:
      name: shoppingListId
      in: path
      required: true
      schema:
        type: integer
      description: unique id for shopping list
    limit:
      name: limit
      in: query
      description: 'Pagination limit default: 10'
      allowEmptyValue: true
      schema:
        maximum: 250
        exclusiveMaximum: true
        minimum: 1
        exclusiveMinimum: true
        type: integer
        default: 10
    offset:
      name: offset
      in: query
      description: 'Pagination offset default: 0'
      allowEmptyValue: true
      schema:
        type: integer
        minimum: 0
    companyId:
      name: companyId
      in: path
      description: Unique numeric ID of this company.
      required: true
      schema:
        type: integer
  schemas:
    shopping_list:
      title: Shopping List
      type: object
      x-examples:
        example-1:
          id: 1
          name: my first shopping list
          description: this is my first shopping list
          status: 0
          companyId: 1
          userId: 12
          createdAt: 1631495936
          updatedAt: 1631495936
          channelId: 1
          channelName: string
      x-tags:
        - Models
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        name:
          type: string
          description: name for shopping list
          example: my first shopping list
        description:
          type: string
          description: description information for shopping list
          example: this is my first shopping list
        status:
          type: integer
          description: 'status of shopping list, (0: approved, 20: deleted, 30: draft, 40: ready for approval) '
          example: 0
          enum:
            - 0
            - 30
            - 40
        companyId:
          type: integer
          description: id for shopping list owner company
          example: 1
          readOnly: true
        userId:
          type: integer
          description: id for shopping list creator
          example: 12
        createdAt:
          type: integer
          example: 1631495936
          format: int32
          description: shopping list create time
          readOnly: true
        updatedAt:
          type: integer
          example: 1631495936
          format: int32
          description: update time for shopping list
          readOnly: true
        channelId:
          type: number
          description: BigCommerce channel id
        channelName:
          type: string
          description: Store Channel name
      required:
        - status
      x-internal: false
    shopping_list_b2c:
      title: B2C Shopping List
      type: object
      x-examples:
        example-1:
          id: 1
          name: my first shopping list
          description: this is my first shopping list
          status: 0
          companyId: 1
          userId: 12
          createdAt: 1631495936
          updatedAt: 1631495936
          channelId: 1
          channelName: string
      x-tags:
        - Models
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        name:
          type: string
          description: name for shopping list
          example: my first shopping list
        description:
          type: string
          description: description information for shopping list
          example: this is my first shopping list
        createdAt:
          type: integer
          example: 1631495936
          format: int32
          description: shopping list create time
          readOnly: true
        updatedAt:
          type: integer
          example: 1631495936
          format: int32
          description: update time for shopping list
          readOnly: true
        channelId:
          type: number
          description: BigCommerce channel id
        channelName:
          type: string
          description: Store Channel name
      x-internal: false
    shopping_list_item:
      title: Shopping List Item
      type: object
      x-examples:
        example-1:
          value:
            id: 1
            productId: 123
            variantId: 321
            quantity: 5
            option_list: '[{"filedName": "fieldvalue"}]'
      x-tags:
        - Models
      properties:
        id:
          type: integer
          example: 1
          description: unique id field for shopping list item
          readOnly: true
        productId:
          type: integer
          example: 123
          description: product id for shopping list item
        variantId:
          type: integer
          example: 321
          description: 'variant id for shopping list item.If the product has options, variant id is required, otherwise it can be left blank'
        quantity:
          type: integer
          example: 5
          description: quantity of product and variant
        sortOrder:
          type: integer
          description: The sort order for item
        optionList:
          type: object
          description: The optionlist does not need to be input in and will be automatically obtained based on productId and variantId.
          properties:
            optionId:
              type: string
            optionValue:
              type: string
        productNote:
          type: string
          description: product note
      required:
        - productId
        - variantId
        - quantity
      x-internal: false
  responses:
    '404':
      description: Not Found Error
      content:
        application/json:
          schema:
            type: object
            description: Response body
            properties:
              code:
                type: number
                description: Response status code
                example: 404
              data:
                type: object
                description: Response data
                properties:
                  errMsg:
                    type: string
                    example: some data entry not found
                    description: error message detail
              meta:
                type: object
                properties:
                  message:
                    type: string
                    example: Not Found Error
                    description: Error message of this response
          examples:
            example-1:
              value:
                code: 404
                data: {}
                meta:
                  message: Not Found Error
    '422':
      description: Parameter Error
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                code: 422
                data:
                  errMsg:
                    min_created:
                      - A valid integer is required.
                meta:
                  message: Parameter Error
            properties:
              code:
                type: number
                description: response status code
                example: 422
              data:
                type: object
                required:
                  - errMsg
                properties:
                  errMsg:
                    type: object
                    description: error detail information for some parameters.
              meta:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    minLength: 1
                    description: error information
                    example: Parameter Error
            required:
              - code
              - data
              - meta
          examples:
            parameter error:
              value:
                code: 422
                data:
                  errMsg:
                    user Id:
                      - user must belong to a company
                meta:
                  message: Parameter Error
    '500':
      description: Server Error
      content:
        application/json:
          schema:
            type: object
            description: Response body
            properties:
              code:
                type: number
                description: Response status code
                example: 500
              data:
                type: object
                description: Response data
              meta:
                type: object
                properties:
                  message:
                    type: string
                    example: Server Error
                    description: Server Error Response message
          examples:
            example-1:
              value:
                code: 500
                data: {}
                meta:
                  message: Server Error
  securitySchemes:
    authToken:
      type: apiKey
      name: authToken
      in: header
