openapi: '3.0.0'
info:
  title: backend
  version: '1.0'
servers:
  - url: 'https://api-b2b.bigcommerce.com/api/v2'
paths:
  /backend/session/status:
    get:
      summary: Get session status
      tags:
        - backend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      authToken:
                        type: string
                        minLength: 1
                    required:
                      - authToken
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImtpZG8uemhhb0BidW5kbGViMmIubmV0Iiwic3RvcmVfaGFzaCI6IjFpNnpweHBlM2ciLCJkYiI6ImRlZmF1bHQiLCJpc19iYWNrZW5kX3VzZXIiOiIyIn0.BpLPDLnmSEHgXw5Rf06G2kp0bKbMaJhxSxAuUW9vRo4
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      authToken: authToken
      operationId: get-backend-session-status
      parameters:
        - schema:
            type: string
          in: query
          name: storehash
          required: true
          description: Store Hash
      description: Get session status
      x-internal: true
  /backend/session:
    delete:
      summary: Backend User Login
      operationId: delete-backend-session
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties: {}
                    required: []
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data: {}
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data: {}
      description: Backend User Login
      tags:
        - backend
      x-internal: true
    post:
      summary: Backend User Login
      operationId: post-backend-session
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImtpZG8uemhhb0BidW5kbGViMmIubmV0Iiwic3RvcmVfaGFzaCI6IjFpNnpweHBlM2ciLCJkYiI6ImRlZmF1bHQiLCJpc19iYWNrZW5kX3VzZXIiOiIyIn0.BpLPDLnmSEHgXw5Rf06G2kp0bKbMaJhxSxAuUW9vRo4
                      permissionModules:
                        - '17100'
                        - '17101'
                        - '11114'
                      isPremium: '0'
                      userId: 3
                      isSales: '0'
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - authToken
                      - permissionModules
                      - isPremium
                      - userId
                      - isSales
                    properties:
                      authToken:
                        type: string
                        minLength: 1
                      permissionModules:
                        type: array
                        description: Permissions owned by backend users
                        items:
                          type: object
                      isPremium:
                        type: string
                        minLength: 1
                        description: '"0":Not premium, "0":Is premium'
                      userId:
                        type: number
                      isSales:
                        type: string
                        minLength: 1
                        description: '"0":Not sales, "0":Is sales'
                required:
                  - code
                  - message
                  - data
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      authToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImtpZG8uemhhb0BidW5kbGViMmIubmV0Iiwic3RvcmVfaGFzaCI6IjFpNnpweHBlM2ciLCJkYiI6ImRlZmF1bHQiLCJpc19iYWNrZW5kX3VzZXIiOiIyIn0.BpLPDLnmSEHgXw5Rf06G2kp0bKbMaJhxSxAuUW9vRo4
                      permissionModules:
                        - '17100'
                        - '17101'
                        - '11114'
                      isPremium: '0'
                      userId: 3
                      isSales: '0'
      description: Backend User Login
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                storeHash:
                  type: string
                  minLength: 1
              required:
                - email
                - password
                - storeHash
              x-examples:
                example-1:
                  email: payton@b2b.net
                  password: test123456
                  storeHash: 1i6zpxpe3g
            examples:
              example-1:
                value:
                  email: payton@b2b.net
                  password: test123456
                  storeHash: 1i6zpxpe3g
      tags:
        - backend
      x-internal: true
  /backend/user:
    post:
      summary: Create a backend user
      operationId: post-backend-end-user-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        minLength: 1
                    required:
                      - userId
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      userId: '123'
              examples:
                example-1:
                  value:
                    code: 200
                    message: success
                    data:
                      userId: '12'
        '':
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        minLength: 1
                    required:
                      - userId
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      userId: '36'
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      userId: '1'
      description: Create a backend user
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  email: levi.tuo@silksoftware.com
                  username: levi.tuo
                  phoneNumber: ''
                  status: '1'
                  roleId: '23'
              properties:
                email:
                  type: string
                  minLength: 1
                username:
                  type: string
                  minLength: 1
                phoneNumber:
                  type: string
                status:
                  type: string
                  minLength: 1
                  description: '"0":"BLOCK", "1":"ACTIVE"'
                roleId:
                  type: string
                  minLength: 1
                  description: Backend role's id
              required:
                - email
                - username
                - phoneNumber
                - roleId
        description: ''
      tags:
        - backend
      x-internal: true
    parameters: []
  /backend/users:
    get:
      summary: Get backend user list
      tags:
        - backend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      list:
                        - id: '36'
                          status: '0'
                          email: levi.tuo@silksoftware.com
                          roleId: '23'
                          roleName: Administrator
                          isOwner: '0'
                          isInnerSalesRep: '0'
                          username: levi.tuo
                          phoneNumber: ''
                      pagination:
                        totalCount: 1
                        offset: 0
                        limit: 10
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - list
                      - pagination
                    properties:
                      list:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              minLength: 1
                            status:
                              type: string
                              minLength: 1
                              description: 'backend user status("0":block, "1":active)'
                            email:
                              type: string
                              minLength: 1
                            roleId:
                              type: string
                              minLength: 1
                            roleName:
                              type: string
                              minLength: 1
                            isOwner:
                              type: string
                              minLength: 1
                              description: '"0":Not store owner, "1":Is store owner'
                            isInnerSalesRep:
                              type: string
                              minLength: 1
                              description: '"0":Not inner sales rep, "1":Is inner sales rep'
                            username:
                              type: string
                              minLength: 1
                            phoneNumber:
                              type: string
                          required:
                            - id
                            - status
                            - email
                            - roleId
                            - roleName
                            - isOwner
                            - isInnerSalesRep
                            - username
                            - phoneNumber
                      pagination:
                        type: object
                        required:
                          - totalCount
                          - offset
                          - limit
                        properties:
                          totalCount:
                            type: number
                          offset:
                            type: number
                          limit:
                            type: number
                required:
                  - code
                  - message
                  - data
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      list:
                        - id: '36'
                          status: '0'
                          email: example@example.com
                          roleId: '23'
                          roleName: Administrator
                          isOwner: '0'
                          isInnerSalesRep: '0'
                          username: username
                          phoneNumber: ''
                      pagination:
                        totalCount: 1
                        offset: 0
                        limit: 10
      operationId: get-backend-users
      description: Get backend user list
      parameters:
        - schema:
            type: string
            default: '0'
          in: query
          name: offset
          description: Pagination offset
        - schema:
            type: string
            default: '10'
          in: query
          name: limit
          description: Pagination limit
        - schema:
            type: string
          in: query
          name: q
          description: Query string
      x-internal: true
  '/backend/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    get:
      summary: Get backend user info
      tags:
        - backend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      id: '36'
                      status: '0'
                      email: levi.tuo@silksoftware.com
                      roleId: '23'
                      roleName: Administrator
                      username: levi.tuo
                      phoneNumber: ''
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - id
                      - status
                      - email
                      - roleId
                      - roleName
                      - username
                      - phoneNumber
                    properties:
                      id:
                        type: string
                        minLength: 1
                      status:
                        type: string
                        minLength: 1
                        description: 'backend user status("0":block, "1":active)'
                      email:
                        type: string
                        minLength: 1
                      roleId:
                        type: string
                        minLength: 1
                      roleName:
                        type: string
                        minLength: 1
                      username:
                        type: string
                        minLength: 1
                      phoneNumber:
                        type: string
                required:
                  - code
                  - message
                  - data
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      id: '36'
                      status: '0'
                      email: example@example.com
                      roleId: '23'
                      roleName: Administrator
                      username: username
                      phoneNumber: ''
      operationId: get-backend-users-user_id
      description: Get backend user info
      x-internal: true
    put:
      summary: Update backend user info
      operationId: put-backend-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      userId:
                        type: number
                    required:
                      - userId
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      userId: 36
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      userId: 1
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  email: levi.tuo@silksoftware.com
                  username: levi.tuo
                  phoneNumber: ''
                  status: '1'
                  roleId: '23'
              properties:
                email:
                  type: string
                  minLength: 1
                username:
                  type: string
                  minLength: 1
                phoneNumber:
                  type: string
                status:
                  type: string
                  minLength: 1
                  description: 'backend user status("0":block, "1":active)'
                roleId:
                  type: string
                  minLength: 1
              required:
                - email
                - username
                - phoneNumber
                - status
                - roleId
      description: Update backend user info
      tags:
        - backend
      x-internal: true
    delete:
      summary: Delete Backend User
      operationId: delete-backend-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties: {}
                    required: []
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data: {}
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data: {}
      description: Delete Backend User
      tags:
        - backend
      x-internal: true
  /backend/password/forget:
    post:
      summary: Forget Backend User Password
      operationId: post-backend-password-forget
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties: {}
                    required: []
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data: {}
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                storeHash:
                  type: string
                email:
                  type: string
      description: Forget Backend User Password
      tags:
        - backend
      x-internal: true
  /backend/password/reset:
    put:
      summary: Reset Backend User Password
      operationId: put-backend-password-reset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties: {}
                    required: []
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data: {}
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data: {}
      description: Reset Backend User Password
      tags:
        - backend
      x-internal: true
    post:
      summary: Reset Backend User Password
      operationId: post-backend-password-reset
      responses:
        '200':
          description: A successful request will return a web form
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resetToken:
                  type: string
                password:
                  type: string
            examples: {}
      description: Reset Backend User Password
      tags:
        - backend
      x-internal: true
  '/backend/password/reset/{reset_token}':
    parameters:
      - schema:
          type: string
        name: reset_token
        in: path
        required: true
    get:
      summary: Reset Backend User Password
      tags:
        - backend
      responses:
        '200':
          description: A successful request will return a web form
      operationId: get-backend-password-reset-reset_token
      description: Reset Backend User Password html page
      x-internal: true
  /backend/roles:
    get:
      summary: Get All Backend Roles
      tags:
        - backend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          totalCount:
                            type: number
                          offset:
                            type: number
                          limit:
                            type: number
                        required:
                          - totalCount
                          - offset
                          - limit
                      list:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          required:
                            - id
                            - roleName
                            - roleType
                            - description
                            - isSales
                          properties:
                            id:
                              type: string
                              minLength: 1
                            roleName:
                              type: string
                              minLength: 1
                            roleType:
                              type: string
                              minLength: 1
                            description:
                              type: string
                            isSales:
                              type: string
                              minLength: 1
                    required:
                      - pagination
                      - list
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      pagination:
                        totalCount: 10
                        offset: 0
                        limit: 10
                      list:
                        - id: '46'
                          roleName: testInit
                          roleType: '1'
                          description: ''
                          isSales: '0'
                        - id: '45'
                          roleName: test d
                          roleType: '1'
                          description: ''
                          isSales: '0'
                        - id: '44'
                          roleName: test sales staff
                          roleType: '1'
                          description: ''
                          isSales: '1'
                        - id: '41'
                          roleName: TestIsSales
                          roleType: '1'
                          description: ''
                          isSales: '1'
                        - id: '42'
                          roleName: test Sales
                          roleType: '1'
                          description: ''
                          isSales: '1'
                        - id: '40'
                          roleName: Sales Rep
                          roleType: '0'
                          description: ''
                          isSales: '1'
                        - id: '33'
                          roleName: test409
                          roleType: '1'
                          description: ''
                          isSales: '0'
                        - id: '29'
                          roleName: test
                          roleType: '1'
                          description: ''
                          isSales: '0'
                        - id: '21'
                          roleName: Store Owner
                          roleType: '0'
                          description: ''
                          isSales: '0'
                        - id: '23'
                          roleName: Administrator
                          roleType: '0'
                          description: ''
                          isSales: '0'
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      pagination:
                        totalCount: 10
                        offset: 0
                        limit: 10
                      list:
                        - id: '1'
                          roleName: role name
                          roleType: '1'
                          description: Desc
                          isSales: '0'
      operationId: get-backend-roles
      description: Get All Backend Roles
      parameters:
        - schema:
            type: string
          in: query
          name: offset
          description: Pagination offset
        - schema:
            type: string
          in: query
          name: limit
          description: Pagination limit
        - schema:
            type: string
          in: query
          name: action
          description: '"addUser" is available'
      x-internal: true
  /backend/role:
    post:
      summary: Create Backend Role
      operationId: post-backend-role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      roleId:
                        type: string
                        minLength: 1
                    required:
                      - roleId
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      roleId: '47'
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      roleId: '1'
      description: Create Backend Role
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  permissionIds:
                    - '314'
                    - '311'
                    - '312'
                    - '313'
                  roleName: levi-test-role
                  isSales: '0'
              properties:
                permissionIds:
                  type: array
                  description: Backend Permission's id
                  items:
                    type: string
                roleName:
                  type: string
                  minLength: 1
                isSales:
                  type: string
                  minLength: 1
                  default: '0'
                  description: '"0":Not sales, "1":Is sales'
                description:
                  type: string
              required:
                - permissionIds
                - roleName
      tags:
        - backend
      x-internal: true
  '/backend/roles/{role_id}':
    parameters:
      - schema:
          type: string
        name: role_id
        in: path
        required: true
    get:
      summary: Get Backend Role Info
      tags:
        - backend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      roleId: '47'
                      roleName: levi-test-role
                      roleType: '1'
                      description: ''
                      permissions:
                        - '311'
                        - '314'
                        - '313'
                        - '312'
                      isSales: '0'
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - roleId
                      - roleName
                      - roleType
                      - description
                      - permissions
                      - isSales
                    properties:
                      roleId:
                        type: string
                        minLength: 1
                      roleName:
                        type: string
                        minLength: 1
                      roleType:
                        type: string
                        minLength: 1
                        description: '"0":"Predefined", "1":"Customizable"'
                      description:
                        type: string
                      permissions:
                        type: array
                        description: Permissions owned by the role
                        items:
                          type: string
                      isSales:
                        type: string
                        minLength: 1
                        description: '"0":Not sales, "1":Is sales'
                required:
                  - code
                  - message
                  - data
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      roleId: '1'
                      roleName: role name
                      roleType: '1'
                      description: ''
                      permissions:
                        - '311'
                        - '314'
                        - '313'
                        - '312'
                      isSales: '0'
      operationId: get-backend-roles-role_id
      description: Get Backend Role Info
      x-internal: true
    put:
      summary: Update Backend Role Info
      operationId: put-backend-roles-role_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      roleId:
                        type: string
                        minLength: 1
                    required:
                      - roleId
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      roleId: '47'
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      roleId: '1'
      description: Update Backend Role Info
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  permissionIds:
                    - '311'
                    - '314'
                    - '313'
                    - '312'
                    - '359'
                    - '360'
                    - '361'
                    - '365'
                    - '363'
                    - '367'
                  roleName: levi-test-role2
                  isSales: '0'
              properties:
                permissionIds:
                  type: array
                  description: Backend Permission's id
                  items:
                    type: string
                roleName:
                  type: string
                  minLength: 1
                isSales:
                  type: string
                  minLength: 1
                  description: '"0":Not sales, "1":Is sales'
                description:
                  type: string
              required:
                - permissionIds
                - roleName
      tags:
        - backend
      x-internal: true
    delete:
      summary: Delete Backend Role
      operationId: delete-backend-roles-role_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties: {}
                    required: []
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data: {}
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data: {}
      description: Delete Backend Role
      tags:
        - backend
      x-internal: true
  /backend/permissions:
    get:
      summary: Get All Backend Permissions
      tags:
        - backend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 200
                    message: SUCCESS
                    data:
                      list:
                        - id: '440'
                          permissionModuleId: '16104'
                        - id: '348'
                          permissionModuleId: '13100'
                        - id: '311'
                          permissionModuleId: '10000'
                        - id: '312'
                          permissionModuleId: '10001'
                        - id: '313'
                          permissionModuleId: '10002'
                        - id: '314'
                          permissionModuleId: '10003'
                        - id: '315'
                          permissionModuleId: '11100'
                        - id: '316'
                          permissionModuleId: '11101'
                        - id: '317'
                          permissionModuleId: '11102'
                        - id: '318'
                          permissionModuleId: '11103'
                        - id: '319'
                          permissionModuleId: '11104'
                        - id: '320'
                          permissionModuleId: '11105'
                        - id: '321'
                          permissionModuleId: '11106'
                        - id: '322'
                          permissionModuleId: '11107'
                        - id: '323'
                          permissionModuleId: '11108'
                        - id: '324'
                          permissionModuleId: '11109'
                        - id: '325'
                          permissionModuleId: '11110'
                        - id: '326'
                          permissionModuleId: '11111'
                        - id: '327'
                          permissionModuleId: '11112'
                        - id: '328'
                          permissionModuleId: '11113'
                        - id: '329'
                          permissionModuleId: '11200'
                        - id: '330'
                          permissionModuleId: '11201'
                        - id: '331'
                          permissionModuleId: '11202'
                        - id: '332'
                          permissionModuleId: '11203'
                        - id: '333'
                          permissionModuleId: '11204'
                        - id: '334'
                          permissionModuleId: '11205'
                        - id: '335'
                          permissionModuleId: '11206'
                        - id: '336'
                          permissionModuleId: '11300'
                        - id: '337'
                          permissionModuleId: '11301'
                        - id: '338'
                          permissionModuleId: '11302'
                        - id: '339'
                          permissionModuleId: '11303'
                        - id: '340'
                          permissionModuleId: '11304'
                        - id: '341'
                          permissionModuleId: '11400'
                        - id: '342'
                          permissionModuleId: '11401'
                        - id: '343'
                          permissionModuleId: '11402'
                        - id: '344'
                          permissionModuleId: '11500'
                        - id: '345'
                          permissionModuleId: '12100'
                        - id: '346'
                          permissionModuleId: '12101'
                        - id: '347'
                          permissionModuleId: '12300'
                        - id: '349'
                          permissionModuleId: '13101'
                        - id: '350'
                          permissionModuleId: '13102'
                        - id: '351'
                          permissionModuleId: '13200'
                        - id: '352'
                          permissionModuleId: '13300'
                        - id: '353'
                          permissionModuleId: '13301'
                        - id: '354'
                          permissionModuleId: '13400'
                        - id: '355'
                          permissionModuleId: '14100'
                        - id: '356'
                          permissionModuleId: '14500'
                        - id: '357'
                          permissionModuleId: '15100'
                        - id: '358'
                          permissionModuleId: '15101'
                        - id: '359'
                          permissionModuleId: '15102'
                        - id: '360'
                          permissionModuleId: '15103'
                        - id: '361'
                          permissionModuleId: '15104'
                        - id: '362'
                          permissionModuleId: '15200'
                        - id: '363'
                          permissionModuleId: '15201'
                        - id: '364'
                          permissionModuleId: '15300'
                        - id: '365'
                          permissionModuleId: '15301'
                        - id: '366'
                          permissionModuleId: '15400'
                        - id: '367'
                          permissionModuleId: '15401'
                        - id: '368'
                          permissionModuleId: '16101'
                        - id: '369'
                          permissionModuleId: '16102'
                        - id: '370'
                          permissionModuleId: '16103'
                        - id: '371'
                          permissionModuleId: '16105'
                        - id: '372'
                          permissionModuleId: '16106'
                        - id: '502'
                          permissionModuleId: '16107'
                        - id: '503'
                          permissionModuleId: '17100'
                        - id: '504'
                          permissionModuleId: '17101'
                        - id: '506'
                          permissionModuleId: '17103'
                        - id: '507'
                          permissionModuleId: '0'
                        - id: '508'
                          permissionModuleId: '17201'
                        - id: '509'
                          permissionModuleId: '17300'
                        - id: '510'
                          permissionModuleId: '0'
                        - id: '511'
                          permissionModuleId: '17500'
                        - id: '590'
                          permissionModuleId: '18100'
                        - id: '591'
                          permissionModuleId: '18101'
                        - id: '592'
                          permissionModuleId: '18102'
                        - id: '593'
                          permissionModuleId: '18103'
                        - id: '594'
                          permissionModuleId: '18200'
                        - id: '595'
                          permissionModuleId: '18201'
                        - id: '596'
                          permissionModuleId: '18202'
                        - id: '597'
                          permissionModuleId: '18203'
                        - id: '598'
                          permissionModuleId: '18204'
                        - id: '599'
                          permissionModuleId: '18300'
                        - id: '600'
                          permissionModuleId: '18400'
                        - id: '601'
                          permissionModuleId: '16108'
                        - id: '602'
                          permissionModuleId: '16109'
                        - id: '505'
                          permissionModuleId: '11114'
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - list
                    properties:
                      list:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              minLength: 1
                              description: Permission's id
                            permissionModuleId:
                              type: string
                              minLength: 1
                          required:
                            - id
                            - permissionModuleId
                required:
                  - code
                  - message
                  - data
              examples:
                example-1:
                  value:
                    code: 200
                    message: SUCCESS
                    data:
                      list:
                        - id: '440'
                          permissionModuleId: '16104'
                        - id: '348'
                          permissionModuleId: '13100'
      operationId: get-backend-permissions
      description: Get All Backend Permissions
      x-internal: true
components:
  schemas: {}
  securitySchemes:
    authToken:
      name: authToken
      type: apiKey
      in: header
security:
  - authToken: []
tags:
  - name: backend
x-internal: true
