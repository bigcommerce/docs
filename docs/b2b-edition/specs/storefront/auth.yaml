openapi: 3.0.0
info:
  title: Authentication
  description: "Description. Goes above all endpoint data. Also serves as landing page"
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: v2
servers:
  - url: 'https://api-b2b.bigcommerce.com/api/v2'
tags:
  - name: Authentication

paths:
  /v2/login:
    parameters: []
    post:
      tags:
        - Authentication
      summary: "Short-Description"
      operationId: post-login
      description: "extended-description"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - bcToken
              type: object
              properties:
                bcToken:
                  type: string
                  description: BigCommerce JWT token
                storeHash:
                  $ref: "#/components/schemas/storeHash"
                channelId:
                  $ref: "#/components/schemas/channelId"
                customerId:
                  type: integer
                  description: Customer ID
                  example: 123
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseBASE"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "SUCCESS"
  /io/auth/customers:
    parameters: []
    post:
      tags:
        - Authentication
      summary: "short-description"
      operationId: post-auth-customer
      description: "extended-description"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                storeHash:
                  $ref: "#/components/schemas/storeHash"
                channelId:
                  $ref: "#/components/schemas/channelId"
                name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
                  format: email
                  description: BigCommerce customer email
                password:
                  type: string
                  minLength: 1
                  format: password
                  description: BigCommerce customer password
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseBASE"
                  - type: object
                    properties:
                      data:
                        properties:
                          name:
                            type: string
                            example: "Marie Curie"
                      meta:
                        type: object
                        properties:
                          message:
                            type: string
                            example: "SUCCESS"
        "400":
          $ref: "#/components/responses/authFailed"

components:
  schemas:
    storeHash:
      type: string
      description: Unique BigCommerce store hash.
      example: abc123
    channelId:
      type: number
      description: Storefront channel ID.
      default: 1
      example: 123456
    responseBASE:
      type: object
      properties:
        code:
          type: number
          default: 200
        data:
          type: object
          properties:
            token:
              type: string
              description: Storefront customer token.
              example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImxldmkudHVvQHNpbGtzb2Z0d2FyZS5jb20iLCJzdG9yZV9oYXNoIjoiMWk2enB4cGUzZyIsImRiIjoiZGVmYXVsdCJ9.ETkUWT7Rw4eOBq6UMqq2EyWtFkhceogNyWVpr34Qwgw"
  responses:
    authFailed:
      description: 400 - Auth Failed
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              data:
                type: object
                properties:
                  errMsg:
                    type: string
                    example: "Customer auth failed"
              meta:
                type: object
                properties:
                  message:
                    type: string
                    example: "Calling BC API failed"
