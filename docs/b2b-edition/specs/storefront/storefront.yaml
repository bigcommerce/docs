openapi: '3.0.0'
info:
  contact: {}
  description: BigCommerce B2B Edition Headless Storefront APIs
  title: Headless Storefront API
  version: '1.0'
security:
  - authToken: []
servers:
  - url: 'https://api-b2b.bigcommerce.com/api/v2'
    variables:
      url:
        default: DefaultParameterValue
tags:
  - name: Company
  - name: Catalog
  - name: Users
  - name: QtyManageMent
  - name: dashboard
  - name: Stores
  - name: ShoppingList
  - name: Sales Rep
  - name: storeConfig
  - name: order
  - name: payments
  - name: Integration
  - name: Quotes
  - name: Cart
  - name: Order Products
  - name: Websocket
  - name: backendUser
  - name: backendRole&Permission
  - name: backendPermission
  - name: Itegretion-Acumatica
  - name: ip-Invoices
  - name: ip-Payments
  - name: ip-Receipts
  - name: ip-Configs
  - name: ip-Stores
  - name: ip-pay
  - name: proxy
  - name: RequestForQuote
  - name: Inner Sales Rep
paths:
  /catalog/products/availablity:
    get:
      deprecated: false
      description: Get available products
      operationId: getavailableproducts
      parameters:
        - explode: true
          in: query
          name: productIds
          required: true
          schema:
            example: 1
            format: int32
            type: integer
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get available products
      tags:
        - Catalog
      security:
        - authToken: []
      x-internal: true
  /catalogs/quick-order-pad:
    get:
      deprecated: false
      description: Get products by sku quickly
      operationId: quickorderpad
      parameters:
        - explode: true
          in: query
          name: 'variantSku[]'
          required: true
          schema:
            example: sku001
            type: string
          style: form
          description: json style of sku list
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response-ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          variantSku:
                            type: string
                          productId:
                            type: string
                          variantId:
                            type: string
                          baseSku:
                            type: string
                          productName:
                            type: string
                          categories:
                            type: array
                            items:
                              type: number
                          option:
                            type: array
                            items:
                              type: object
                          minQuantity:
                            type: integer
                          maxQuantity:
                            type: integer
                          isVisible:
                            type: string
                            example: '1'
                          modifiers:
                            type: string
              examples:
                example-1:
                  value:
                    code: 200
                    message: Success
                    data:
                      variantSku: string
                      productId: string
                      variantId: string
                      baseSku: string
                      productName: string
                      categories: []
                      option: []
                      minQuantity: 1
                      maxQuantity: 5
                      isVisible: string
                      modifiers: string
          description: ''
          headers: {}
        '500':
          $ref: '#/components/responses/500'
      summary: quick order pad
      tags:
        - Catalog
      security:
        - authToken: []
    post:
      deprecated: false
      description: Get products quickly
      operationId: quickorderpad(post)
      parameters: []
      summary: quick order pad(post)
      tags:
        - Catalog
      security:
        - authToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                variantSkus:
                  type: array
                  items: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response-ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          variantSku:
                            type: string
                          productId:
                            type: string
                          variantId:
                            type: string
                          baseSku:
                            type: string
                          productName:
                            type: string
                          categories:
                            type: array
                            items:
                              type: number
                          option:
                            type: array
                            items:
                              type: object
                          minQuantity:
                            type: integer
                          maxQuantity:
                            type: integer
                          isVisible:
                            type: string
                            example: '1'
                          modifiers:
                            type: string
              examples:
                example-1:
                  value:
                    code: 200
                    message: Success
                    data:
                      variantSku: string
                      productId: string
                      variantId: string
                      baseSku: string
                      productName: string
                      categories: []
                      option: []
                      minQuantity: 0
                      maxQuantity: 5
                      isVisible: string
                      modifiers: string
          description: ''
          headers: {}
        '500':
          $ref: '#/components/responses/500'
  /catalogs/quickProduct:
    get:
      deprecated: false
      description: Get catalogs list quickly
      operationId: searchVariantSku
      parameters:
        - description: ''
          explode: true
          in: query
          name: variantSkus
          required: true
          schema:
            example: variantSku|variantSku
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response-ok'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          variantSku:
                            type: string
                          productId:
                            type: string
                          variantId:
                            type: string
                          baseSku:
                            type: string
                          productName:
                            type: string
                          categories:
                            type: array
                            items:
                              type: number
                          option:
                            type: array
                            items:
                              type: object
                          price:
                            type: number
                          isVisible:
                            type: string
                            example: '1'
              examples:
                example-1:
                  value:
                    code: 200
                    message: Success
                    data:
                      variantSku: string
                      productId: string
                      variantId: string
                      baseSku: string
                      productName: string
                      categories:
                        - 0
                      option:
                        - {}
                      price: 0
                      isVisible: '1'
          description: ''
          headers: {}
      summary: searchVariantSku
      tags:
        - Catalog
      security:
        - authToken: []
  /catalogs/variants:
    get:
      deprecated: false
      description: 'Get variants list '
      operationId: getproductvariantsinfobyproductid
      parameters:
        - explode: true
          in: query
          name: productId
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get product variants info by product id
      tags:
        - Catalog
      security:
        - authToken: []
  /companies/addresses/countries:
    get:
      deprecated: false
      description: Get countries list
      operationId: getcountries
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get countries
      tags:
        - Company
  /companies/addresses/permission:
    get:
      deprecated: false
      description: Get whether there is permission to modify address(storefront)
      operationId: getaddresseditpermission
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get address edit permission
      tags:
        - Company
  /companies/existence:
    get:
      deprecated: false
      description: Check the existence of a company
      operationId: Checktheexistenceofacompany
      parameters:
        - description: ''
          explode: true
          in: query
          name: storeHash
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: companyName
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Check the existence of a company
      tags:
        - Company
  /companies/extra_fields/storefront:
    get:
      deprecated: false
      description: Get company extra fields storefront
      operationId: getcompanyextrafieldsstorefront
      parameters:
        - description: ''
          explode: true
          in: query
          name: storeHash
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get company extra fields storefront
      tags:
        - Company
  '/companies/validations/backend/user-emails/{email}':
    get:
      deprecated: false
      description: Check if user email can be used for current company，user info and available status will be respond.(backend)
      operationId: checkbackenduseremail
      parameters:
        - description: '可选参数, 更新的时候需要，新建的时候不需要'
          explode: true
          in: query
          name: companyId
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: role
          required: true
          schema:
            example:
              - '0'
              - '1'
              - '2'
              - '3'
              - '4'
            items:
              type: string
            type: array
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Check user email available
      tags:
        - Company
    parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
  '/companies/validations/fronted/user-emails/{email}':
    get:
      deprecated: false
      description: Check if user email can be used for current company，user info and available status will be respond.(fronted)
      operationId: validatefronteduseremail
      parameters:
        - description: ''
          explode: true
          in: query
          name: storeHash
          required: true
          schema:
            type: string
          style: form
        - description: 可选参数更新的时候需要
          explode: true
          in: query
          name: companyId
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: role
          required: true
          schema:
            example:
              - '0'
              - '1'
              - '2'
              - '3'
              - '4'
            items:
              type: string
            type: array
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: validate fronted user email
      tags:
        - Company
    parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
  '/companies/{companyId}/addresses':
    get:
      deprecated: false
      description: Get company address book by companyId
      operationId: getcompanyaddresslist
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: authToken
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Get company address list
      tags:
        - Company
    parameters:
      - in: path
        name: companyId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: create a new address of a company
      operationId: createanaddress
      parameters:
        - description: ''
          explode: true
          in: query
          name: lastName
          required: true
          schema:
            type: string
          style: form
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                addressLine1:
                  type: string
                addressLine2:
                  type: string
                city:
                  type: string
                country:
                  type: string
                countryName:
                  type: string
                countryCode:
                  type: string
                firstName:
                  type: string
                isBilling:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                isDefaultBilling:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                isDefaultShipping:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                isShipping:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                label:
                  type: string
                phoneNumber:
                  type: string
                state:
                  type: string
                stateCode:
                  type: string
                stateName:
                  type: string
                zipCode:
                  type: string
              required:
                - firstName
                - addressLine2
                - city
                - country
                - state
                - zipCode
                - phoneNumber
                - isShipping
                - isBilling
                - addressLine1
                - isDefaultShipping
                - isDefaultBilling
                - countryName
                - countryCode
                - stateName
                - stateCode
                - label
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: create an address
      tags:
        - Company
  '/companies/{companyId}/addresses/searches':
    get:
      deprecated: false
      description: Get company address book by companyId
      operationId: searchcompanyaddress
      parameters:
        - description: 关键字
          explode: true
          in: query
          name: q
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: offset
          required: true
          schema:
            example: 0
            format: int32
            type: integer
          style: form
        - description: ''
          explode: true
          in: query
          name: limit
          required: true
          schema:
            example: 10
            format: int32
            type: integer
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: search company address
      tags:
        - Company
    parameters:
      - in: path
        name: companyId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Get address book by company ID and use this post because of we are creating a multiple search
      operationId: getaddressbookbysearch
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                address:
                  type: string
                city:
                  type: string
                country:
                  type: string
                filters:
                  description: filter object
                  type: string
                firstName:
                  type: string
                isBilling:
                  description: Boolean object should be '0' or '1'
                  type: string
                isShipping:
                  description: Boolean object should be '0' or '1'
                  type: string
                label:
                  type: string
                lastName:
                  type: string
                limit:
                  description: rows per page
                  type: string
                offset:
                  description: state index
                  example: 0
                  format: int32
                  type: integer
                phoneNumber:
                  type: string
                q:
                  description: keywords of search
                  type: string
                state:
                  type: string
                type:
                  type: string
                zipCode:
                  type: string
              required:
                - offset
                - limit
                - q
                - filters
                - firstName
                - lastName
                - address
                - city
                - country
                - state
                - zipCode
                - phoneNumber
                - type
                - isShipping
                - isBilling
                - label
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get address book by search
      tags:
        - Company
  '/companies/{companyId}/addresses/{addressId}':
    get:
      deprecated: false
      description: Get an address info by companyId
      operationId: getanaddress
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get an address
      tags:
        - Company
    parameters:
      - in: path
        name: addressId
        required: true
        schema:
          type: string
      - in: path
        name: companyId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update an address's info
      operationId: updateanaddress
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                addressLine1:
                  type: string
                addressLine2:
                  type: string
                city:
                  type: string
                country:
                  type: string
                countryCode:
                  type: string
                countryName:
                  type: string
                firstName:
                  type: string
                isBilling:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                isDefaultBilling:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                isDefaultShipping:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                isShipping:
                  description: 'boolean object should be "0" or "1"'
                  type: string
                label:
                  type: string
                lastName:
                  type: string
                phoneNumber:
                  type: string
                state:
                  type: string
                stateCode:
                  type: string
                stateName:
                  type: string
                zipCode:
                  type: string
              required:
                - firstName
                - lastName
                - addressLine2
                - city
                - country
                - state
                - zipCode
                - phoneNumber
                - isShipping
                - isBilling
                - addressLine1
                - isDefaultShipping
                - isDefaultBilling
                - countryName
                - countryCode
                - stateName
                - stateCode
                - label
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: update an address
      tags:
        - Company
  '/companies/{companyId}/addresses/{addressId}/activation':
    parameters:
      - in: path
        name: companyId
        required: true
        schema:
          type: string
      - in: path
        name: addressId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Mark an address as active or inactive
      operationId: markanaddressasactiveorinactive
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                isActive:
                  description: 'boolean object should be "0" or "1"'
                  example: 0
                  format: int32
                  type: integer
              required:
                - isActive
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: mark an address as active or inactive
      tags:
        - Company
  '/companies/{companyId}/default-addresses':
    get:
      deprecated: false
      description: Get default addresses by companyId
      operationId: getdefaultaddressesbycompanyId
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get default addresses by companyId
      tags:
        - Company
    parameters:
      - in: path
        name: companyId
        required: true
        schema:
          type: string
  '/companies/{companyId}/users':
    get:
      deprecated: false
      description: Get company user list by companyId
      operationId: getcompanyusers
      parameters:
        - description: |-
            "": 获取所有的users
            "0": admin
            "1": senior
            "2": junior
            "3": sales-rep
          explode: true
          in: query
          name: role
          required: true
          schema:
            example:
              - '0'
              - '1'
              - '2'
              - '3'
            items:
              type: string
            type: array
          style: form
        - description: ''
          explode: true
          in: query
          name: offset
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: limit
          required: true
          schema:
            type: string
          style: form
        - description: 获取company users
          explode: true
          in: query
          name: q
          required: true
          schema:
            example: '"kobe"'
            type: string
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Get company user list
      tags:
        - Company
    parameters:
      - in: path
        name: companyId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Create company user(s)
      operationId: createcompanyuserinfo
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: authToken
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                companyId:
                  example: 123
                  format: int32
                  type: integer
                email:
                  example: kobe.tian@bundleb2b.net
                  type: string
                firstName:
                  example: kobe
                  type: string
                lastName:
                  example: tian
                  type: string
                phone:
                  example: 17316289569
                  format: int64
                  type: integer
                userRole:
                  example: Admin
                  type: string
              required:
                - firstName
                - lastName
                - phone
                - email
                - userRole
                - companyId
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Create company user(s)
      tags:
        - Company
  '/customers/{customerId}/companies':
    get:
      deprecated: false
      description: Get company info by user id
      operationId: getcompanybyuserid
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get company by user id
      tags:
        - Users
    parameters:
      - in: path
        name: customerId
        required: true
        schema:
          type: string
  /emails/quotes:
    post:
      deprecated: false
      description: Send a quote emails
      operationId: sentemail
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                email:
                  example: '@email'
                  type: string
                quoteId:
                  example: 1
                  format: int32
                  type: integer
                quoteUrl:
                  description: quote detail页面的url
                  example: '@url'
                  type: string
              required:
                - email
                - quoteId
                - quoteUrl
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: sent email
      tags:
        - Quotes
  /frontend/companies:
    post:
      deprecated: false
      description: 'Create a company (fronted) '
      operationId: createcompany(fronted)
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                addressLine1:
                  type: string
                addressLine2:
                  type: string
                city:
                  type: string
                companyEmail:
                  example: kobe@bu.com
                  type: string
                companyFirstName:
                  example: xxxx
                  type: string
                companyLastName:
                  example: xxxxx
                  type: string
                companyName:
                  example: KobeTestCrop
                  type: string
                companyPhoneNumber:
                  example: 17316289569
                  format: int64
                  type: integer
                customerId:
                  type: string
                extraFields:
                  type: string
                fieldName:
                  example: str1
                  type: string
                fieldValue:
                  example: value1
                  type: string
                state:
                  type: string
                storeHash:
                  example: storeHash
                  type: string
                zipCode:
                  type: string
              required:
                - storeHash
                - companyName
                - companyPhoneNumber
                - companyEmail
                - addressLine1
                - addressLine2
                - city
                - state
                - zipCode
                - companyFirstName
                - companyLastName
                - customerId
                - extraFields
                - fieldName
                - fieldValue
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: create company (fronted)
      tags:
        - Company
  /login:
    post:
      deprecated: false
      description: Login
      operationId: login
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                bcToken:
                  type: string
                customerId:
                  type: string
                storeHash:
                  type: string
              required:
                - bcToken
                - customerId
                - storeHash
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: login
      tags:
        - Users
  /ordered-products:
    get:
      deprecated: false
      description: Get ordered products
      operationId: getorderproductlist
      parameters:
        - description: 搜索字段，默认不传或为空
          explode: true
          in: query
          name: q
          required: true
          schema:
            type: string
          style: form
        - description: 09/08/2020，默认不传或者为空
          explode: true
          in: query
          name: beginDateAt
          required: true
          schema:
            example: '@date'
            type: string
          style: form
        - description: 10/18/2020，默认不传或为空
          explode: true
          in: query
          name: endDateAt
          required: true
          schema:
            example: '@date'
            type: string
          style: form
        - description: 分页参数
          explode: true
          in: query
          name: offset
          required: true
          schema:
            example: 0
            format: int32
            type: integer
          style: form
        - description: 分页参数
          explode: true
          in: query
          name: limit
          required: true
          schema:
            example: 10
            format: int32
            type: integer
          style: form
        - description: 筛选条件，最小的被下单次数
          explode: true
          in: query
          name: minOrderedTimes
          required: true
          schema:
            example: '@number'
            type: string
          style: form
        - description: 筛选条件，最大的被下单次数
          explode: true
          in: query
          name: maxOrderedTimes
          required: true
          schema:
            example: '@number'
            type: string
          style: form
        - description: 筛选条件，产品的id
          explode: true
          in: query
          name: productID
          required: true
          schema:
            example: '@number'
            type: string
          style: form
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get order product list
      tags:
        - Order Products
  /orders:
    get:
      deprecated: false
      description: Get orders
      operationId: orderlist
      parameters:
        - description: 09/08/2019
          explode: true
          in: query
          name: beginDateAt
          required: true
          schema:
            example: '@date'
            type: string
          style: form
        - description: 10/18/2019
          explode: true
          in: query
          name: endDateAt
          required: true
          schema:
            example: '@date'
            type: string
          style: form
        - description: dateCreated
          explode: true
          in: query
          name: orderBy
          required: true
          schema:
            example:
              - bcOrderId
              - totalIncTax
              - createdAt
            items:
              type: string
            type: array
          style: form
        - description: 默认DESC
          explode: true
          in: query
          name: sortBy
          required: true
          schema:
            example:
              - DESC
              - ASC
            items:
              type: string
            type: array
          style: form
        - description: 0--N 1--Y 默认"0"
          explode: true
          in: query
          name: isShowMy
          required: true
          schema:
            example:
              - '0'
              - '1'
            items:
              type: string
            type: array
          style: form
        - description: ''
          explode: true
          in: query
          name: offset
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: limit
          required: true
          schema:
            type: string
          style: form
        - description: 默认为空
          explode: true
          in: query
          name: q
          required: true
          schema:
            type: string
          style: form
        - description: 筛选字段，默认为空
          explode: true
          in: query
          name: orderNumber
          required: true
          schema:
            type: string
          style: form
        - description: 筛选字段，默认为空
          explode: true
          in: query
          name: companyName
          required: true
          schema:
            type: string
          style: form
        - description: 筛选字段，默认为空
          explode: true
          in: query
          name: poNumber
          required: true
          schema:
            type: string
          style: form
        - description: 筛选字段，默认为空
          explode: true
          in: query
          name: createdBy
          required: true
          schema:
            type: string
          style: form
        - description: 筛选字段，默认为空
          explode: true
          in: query
          name: status
          required: true
          schema:
            type: string
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: order list
      tags:
        - order
    post:
      deprecated: false
      description: Create orders
      operationId: createorder
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxxx
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                isSaveOrderComment:
                  description: 默认值为1，0表示不显示PO#，1表示显示PO#
                  example: 1
                  format: int32
                  type: integer
                orderId:
                  type: string
                poNumber:
                  type: string
                totalIncTax:
                  type: string
              required:
                - orderId
                - poNumber
                - totalIncTax
                - isSaveOrderComment
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: create order
      tags:
        - order
  /orders/images:
    get:
      deprecated: false
      description: Get order's images
      operationId: getordersimages
      parameters:
        - description: ''
          explode: true
          in: query
          name: orderIds
          required: true
          schema:
            example:
              - '123'
              - '123'
            items:
              type: string
            type: array
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get orders images
      tags:
        - order
  '/orders/{orderId}/details':
    get:
      deprecated: false
      description: Get order detail by orderId
      operationId: getorderdetail
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get order detail
      tags:
        - order
    parameters:
      - in: path
        name: orderId
        required: true
        schema:
          type: string
  '/orders/{orderId}/products':
    get:
      deprecated: false
      description: Get order products by orderId
      operationId: getorderproduct
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get order product
      tags:
        - order
    parameters:
      - in: path
        name: orderId
        required: true
        schema:
          type: string
  '/qty/cartLimit/{cartId}':
    get:
      deprecated: false
      description: Get cart limit by carId
      operationId: checkCartItemsQtyLimit
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: authToken
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: checkCartItemsQtyLimit
      tags:
        - QtyManageMent
    parameters:
      - in: path
        name: cartId
        required: true
        schema:
          type: string
  /qty/quantity-limit-list:
    get:
      deprecated: false
      description: 'Get quantity limit list '
      operationId: getAdvQtyList
      parameters:
        - description: ''
          explode: true
          in: query
          name: variantSkus
          required: true
          schema:
            example: sku001|sku002
            type: string
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: getAdvQtyList
      tags:
        - QtyManageMent
  /quotes:
    get:
      deprecated: false
      description: Get quote list
      operationId: getquoteList
      parameters:
        - description: 分页参数，默认0
          explode: true
          in: query
          name: offset
          required: true
          schema:
            example: 0
            format: int32
            type: integer
          style: form
        - description: 每页条数，默认10
          explode: true
          in: query
          name: limit
          required: true
          schema:
            example: 10
            format: int32
            type: integer
          style: form
        - description: '排序字段,[''createdAt'', ''grandTotal'']'
          explode: true
          in: query
          name: sortBy
          required: true
          schema:
            example: createdAt
            type: string
          style: form
        - description: 'DESC 或 ASC'
          explode: true
          in: query
          name: orderBy
          required: true
          schema:
            example: DESC
            type: string
          style: form
        - description: quote的id值，默认为空
          explode: true
          in: query
          name: referenceNumber
          required: true
          schema:
            example: 1
            format: int32
            type: integer
          style: form
        - description: 公司名称，默认为空
          explode: true
          in: query
          name: company
          required: true
          schema:
            example: ABC
            type: string
          style: form
        - description: sales rep的名字，默认为空
          explode: true
          in: query
          name: salesRep
          required: true
          schema:
            example: Allen
            type: string
          style: form
        - description: |-
            quote的状态:

            [
            '0': 'new', 
            '1': 'sent', 
            '2': 'ordered', 
            '3': 'expired' ,
            '4': 'opened'
            ]
            sent为sales rep独有的状态值，opened为company user独有的状态值。
          explode: true
          in: query
          name: status
          required: true
          schema:
            example:
              - '0'
              - '1'
              - '2'
              - '3'
            items:
              type: string
            type: array
          style: form
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get quote List
      tags:
        - Quotes
    post:
      deprecated: false
      description: Create quote
      operationId: createaquote
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                additionalInfo:
                  description: TEXT
                  type: string
                addressInfo:
                  description: 地址，这是一个json字段
                  type: string
                basePrice:
                  description: 产品原价
                  example: 120
                  format: int32
                  type: integer
                color:
                  type: string
                companyId:
                  description: 需创建quote的company的id
                  example: 1
                  format: int32
                  type: integer
                currency_location:
                  description: 符号位置
                  example: left
                  type: string
                currency_token:
                  description: 货币符号
                  example: $
                  type: string
                decimal_places:
                  description: 小数保留位数
                  example: 2
                  format: int32
                  type: integer
                decimal_token:
                  description: 小数分隔符
                  example: .
                  type: string
                description:
                  description: quote的描述
                  example: Test desciption
                  type: string
                discount:
                  description: 报价优惠
                  example: 30
                  format: int32
                  type: integer
                expiredAt:
                  description: 01/01/2020
                  example: '@date'
                  type: string
                grandTotal:
                  description: 总计
                  example: 270
                  format: int32
                  type: integer
                imageUrl:
                  description: 产品图片地址
                  example: '@url'
                  type: string
                money:
                  description: BC返回的货币信息，不做驼峰处理，直接传一个对象
                  type: string
                newPrice:
                  description: 报价
                  example: 100
                  format: int32
                  type: integer
                options:
                  type: string
                productId:
                  description: ''
                  example:
                    - '1'
                    - '2'
                  items:
                    type: string
                  type: array
                productList:
                  type: string
                productName:
                  description: 产品名字
                  example: Test Product
                  type: string
                quantity:
                  description: 数量
                  example: 2
                  format: int32
                  type: integer
                referenceNumber:
                  type: string
                size:
                  type: string
                sku:
                  description: 产品sku
                  example:
                    - sku-001
                    - sku-002
                  items:
                    type: string
                  type: array
                status:
                  description: |-
                    "0", "1", "2", "3", "4", "5"
                    0-new
                    1-sent
                    2-orderd
                    3-expired
                    4-opend
                    5-draft
                    6-await approve
                    7-reject（不允许传7）
                    默认为空的情况下 为new
                  example: 0
                  format: int32
                  type: integer
                subtotal:
                  description: 小计
                  example: 300
                  format: int32
                  type: integer
                thousands_token:
                  description: 千位分隔符
                  example: ','
                  type: string
                title:
                  description: quote的标题
                  example: Test title
                  type: string
                variantId:
                  description: 若没有则传空
                  example:
                    - '1'
                    - '2'
                  items:
                    type: string
                  type: array
              required:
                - title
                - description
                - expiredAt
                - subtotal
                - discount
                - grandTotal
                - money
                - productList
                - sku
                - basePrice
                - newPrice
                - quantity
                - productId
                - variantId
                - imageUrl
                - productName
                - options
                - size
                - color
                - referenceNumber
                - companyId
                - currency_location
                - decimal_token
                - decimal_places
                - currency_token
                - thousands_token
                - status
                - additionalInfo
                - addressInfo
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: create a quote
      tags:
        - Quotes
  '/quotes/info/store-company/{companyId}':
    get:
      deprecated: false
      description: Get store and company info by companyId
      operationId: getstoreandcompanyinfo
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get store and company info
      tags:
        - Quotes
    parameters:
      - in: path
        name: companyId
        required: true
        schema:
          type: string
  /quotes/products/upload:
    post:
      deprecated: false
      description: Upload quote CSV file
      operationId: uploadquoteCSVfile
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                companyId:
                  type: string
                quoteFile:
                  type: string
              required:
                - companyId
                - quoteFile
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: upload quote CSV file
      tags:
        - Quotes
  '/quotes/{quoteId}':
    delete:
      deprecated: false
      description: Delete a quote by quoteId
      operationId: deleteaquote
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: delete a quote
      tags:
        - Quotes
    get:
      deprecated: false
      description: Get quote info by quoteId
      operationId: getaquote
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get a quote
      tags:
        - Quotes
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    put:
      description: Update quote (to optimize)
      operationId: Update quote
      responses:
        '200':
          description: OK
      summary: ''
  '/quotes/{quoteId}/checkout':
    delete:
      deprecated: false
      description: Delete a quote by quoteId
      operationId: deletecheckoutinfo
      parameters:
        - description: ''
          explode: true
          in: query
          name: authToken
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: delete checkout info
      tags:
        - Quotes
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Checkout a quote by quoteId
      operationId: quotecheckout
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote checkout
      tags:
        - Quotes
  '/quotes/{quoteId}/ordered':
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update a quote status by quoteId
      operationId: updateaquotestatus
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                orderId:
                  description: order_id
                  example: '@id'
                  type: string
              required:
                - orderId
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: update a quote status
      tags:
        - Quotes
  '/quotes/{quoteId}/pdf-export':
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Export quote pdf by quoteId
      operationId: quotesexportpdffile
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                currency:
                  type: string
              required:
                - currency
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quotes export pdf file
      tags:
        - Quotes
  /rfq:
    get:
      deprecated: false
      description: Get quote form list. You can get current companyʼs quote form list in storefront, get all quote form list in backend.
      operationId: quoteformlist
      parameters:
        - description: ''
          explode: true
          in: query
          name: offset
          required: true
          schema:
            example: 0
            format: int32
            type: integer
          style: form
        - description: ''
          explode: true
          in: query
          name: limit
          required: true
          schema:
            example: 10
            format: int32
            type: integer
          style: form
        - description: 'createdAt, updatedAt, expiredAt'
          explode: true
          in: query
          name: sortBy
          required: true
          schema:
            example: createdAt
            type: string
          style: form
        - description: 'DESC, ASC'
          explode: true
          in: query
          name: orderBy
          required: true
          schema:
            example: DESC
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: quoteNumber
          required: true
          schema:
            example: 1
            format: int32
            type: integer
          style: form
        - description: ''
          explode: true
          in: query
          name: company
          required: true
          schema:
            example: ABC
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: salesRep
          required: true
          schema:
            example: Allen
            type: string
          style: form
        - description: 0 - new; 1 - open; 2 - in process; 3 - updated by customer; 4 - ordered; 5 - expired
          explode: true
          in: query
          name: status
          required: true
          schema:
            example:
              - '0'
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
            items:
              type: string
            type: array
          style: form
        - description: ''
          explode: true
          in: query
          name: quoteTitle
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: createdBy
          required: true
          schema:
            type: string
          style: form
        - description: 月/日/年格式， 10/01/2021，创建日期筛选：开始
          explode: true
          in: query
          name: dateCreatedBeginAt
          required: true
          schema:
            example: 10/01/2021
            type: string
          style: form
        - description: 月/日/年格式， 10/01/2021，创建日期筛选：结束
          explode: true
          in: query
          name: dateCreatedEndAt
          required: true
          schema:
            example: 10/01/2021
            type: string
          style: form
        - description: 月/日/年格式， 10/01/2021，更新日期筛选：开始
          explode: true
          in: query
          name: dateUpdatedBeginAt
          required: true
          schema:
            example: 10/01/2021
            type: string
          style: form
        - description: 月/日/年格式， 10/01/2021，更新日期筛选：结束
          explode: true
          in: query
          name: dateUpdatedEndAt
          required: true
          schema:
            example: 10/01/2021
            type: string
          style: form
        - description: 月/日/年格式， 10/01/2021，过期日期筛选：开始
          explode: true
          in: query
          name: dateExpiredBeginAt
          required: true
          schema:
            example: 10/01/2021
            type: string
          style: form
        - description: 月/日/年格式， 10/01/2021，过期日期筛选：结束
          explode: true
          in: query
          name: dateExpiredEndAt
          required: true
          schema:
            example: 10/01/2021
            type: string
          style: form
        - description: 搜索参数
          explode: true
          in: query
          name: q
          required: true
          schema:
            type: string
          style: form
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote form list
      tags:
        - RequestForQuote
    post:
      deprecated: false
      description: Create a quote form
      operationId: createaquoteform
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                address:
                  description: 地址1，必填
                  example: '@str'
                  type: string
                apartment:
                  description: 地址2
                  example: '@str'
                  type: string
                basePrice:
                  description: 基础价格，必传
                  example: '@float(0,100,2,2)'
                  type: string
                city:
                  description: 城市
                  example: '@city'
                  type: string
                companyId:
                  description: 如果选择了Bundle公司，则必传
                  example: 1
                  format: int32
                  type: integer
                companyName:
                  example: '@name'
                  type: string
                contactInfo:
                  type: string
                country:
                  description: 国家，必填
                  example: '@region'
                  type: string
                currency:
                  description: 货币信息
                  type: string
                currencyExchangeRate:
                  description: 汇率
                  type: string
                decimalPlaces:
                  description: 小数保留位数
                  example: 2
                  format: int32
                  type: integer
                decimalToken:
                  description: 小数分隔符
                  example: .
                  type: string
                discount:
                  description: 优惠价格
                  example: '@float(0,100,2,2)'
                  type: string
                email:
                  description: 必填
                  example: '@email'
                  type: string
                expiredAt:
                  description: |-
                    01/01/2021，按照这个格式；
                    前台创建可以不传，后台必传
                  example: 1/01/2021
                  type: string
                grandTotal:
                  description: 优惠后总价
                  example: '@float(0,100,2,2)'
                  type: string
                imageUrl:
                  description: 产品图片，没有传空
                  type: string
                isBackendUser:
                  description: 必传，0 - 前台用户，1 - 后台用户
                  example: 0
                  format: int32
                  type: integer
                legalTerms:
                  description: 后台用户填写，前台不填写， 非必填
                  type: string
                location:
                  description: '货币位置，right, left'
                  example: right
                  type: string
                message:
                  description: 留言
                  example: '@str'
                  type: string
                name:
                  description: 必填
                  example: '@name'
                  type: string
                notes:
                  description: '后台用户填写，前台不填写, 非必填'
                  type: string
                offeredPrice:
                  description: 折后价格，必传
                  example: '@float(0,100,2,2)'
                  type: string
                optionId:
                  description: 属性的id
                  example: 1
                  format: int32
                  type: integer
                optionLabel:
                  description: '属性的标签，如small, red'
                  type: string
                optionName:
                  description: '属性的类，如size,color'
                  type: string
                optionValue:
                  description: 属性值
                  type: string
                options:
                  description: 产品属性，没有传空数组
                  type: string
                phoneNumber:
                  example: 0
                  format: int32
                  type: integer
                productId:
                  description: 产品ID，必传
                  example: 1
                  format: int32
                  type: integer
                productList:
                  type: string
                productName:
                  description: 产品名字，没有传空
                  type: string
                quantity:
                  description: 数量，必传
                  example: '@int(1,100)'
                  type: string
                quoteTitle:
                  description: title， 非必填， 长度不超过200
                  type: string
                referenceNumber:
                  type: string
                shippingAddress:
                  type: string
                sku:
                  description: 'sku, 必传'
                  example: '@str'
                  type: string
                state:
                  description: 省份
                  example: '@province'
                  type: string
                storeHash:
                  example: '@str'
                  type: string
                subtotal:
                  description: 总价
                  example: '@float(0,100,2,2)'
                  type: string
                thousandsToken:
                  description: 千位分隔符
                  example: ','
                  type: string
                token:
                  description: 货币符号
                  example: $
                  type: string
                userEmail:
                  description: 除guest以外，其余用户必传
                  example: '@email'
                  type: string
                variantId:
                  description: 'variantId, 没有传空'
                  example: 1
                  format: int32
                  type: integer
                zipCode:
                  description: 邮编，必填
                  example: '@zip'
                  type: string
              required:
                - storeHash
                - isBackendUser
                - userEmail
                - contactInfo
                - name
                - email
                - companyName
                - phoneNumber
                - companyId
                - shippingAddress
                - country
                - state
                - city
                - zipCode
                - address
                - apartment
                - expiredAt
                - subtotal
                - discount
                - grandTotal
                - currency
                - token
                - location
                - decimalToken
                - thousandsToken
                - decimalPlaces
                - message
                - productList
                - sku
                - basePrice
                - offeredPrice
                - quantity
                - productId
                - variantId
                - imageUrl
                - productName
                - options
                - optionId
                - optionValue
                - optionLabel
                - optionName
                - referenceNumber
                - currencyExchangeRate
                - quoteTitle
                - notes
                - legalTerms
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: create a quote form
      tags:
        - RequestForQuote
  /rfq/configs:
    get:
      deprecated: false
      description: Get quote config backend
      operationId: quoteconfigs
      parameters:
        - description: ''
          explode: true
          in: query
          name: storeHash
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote configs
      tags:
        - RequestForQuote
  /rfq/emails:
    post:
      deprecated: false
      description: Send a quote email
      operationId: quotesendemail
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                email:
                  example: '@email'
                  type: string
                quoteId:
                  example: 1
                  format: int32
                  type: integer
              required:
                - email
                - quoteId
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote send email
      tags:
        - RequestForQuote
  /rfq/store-info:
    get:
      deprecated: false
      description: 'Get store, company, and sales rep info. Mainly used for preview'
      operationId: quotestoreinfo
      parameters:
        - description: 必传，用于获取店铺信息
          explode: true
          in: query
          name: storeHash
          required: true
          schema:
            type: string
          style: form
        - description: 获取company信息，不需要就不传
          explode: true
          in: query
          name: companyId
          required: true
          schema:
            type: string
          style: form
        - description: 获取Sales rep信息，不需要就不传，这个ID是后台用户的ID
          explode: true
          in: query
          name: salesRepId
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote store info
      tags:
        - RequestForQuote
  '/rfq/{quoteId}':
    delete:
      deprecated: false
      description: Delete a quote by quoteId
      operationId: Deletedeleteaquote
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: delete a quote
      tags:
        - RequestForQuote
    get:
      deprecated: false
      description: Get a quote detail by quoteId
      operationId: getaquotedetail
      parameters:
        - description: ''
          explode: true
          in: query
          name: storeHash
          required: true
          schema:
            example: '@str'
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: isBackendUser
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get a quote detail
      tags:
        - RequestForQuote
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: |-
        Update a quote. You don't need to pass all the parameters, It's broken down into several modules: message,expiredAt, referenceNumber, contactInfo, shippingAddress, quoteTitle, notes, legalTerms, productList(include products, currency, price and so on)，you can pass the parameters that you want to modify. You can only modify message in storefront, but you can modify all of this in backend. Notice: company can not be modified
      operationId: updateaquote
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                address:
                  type: string
                apartment:
                  type: string
                basePrice:
                  example: '@float(0,100,2,2)'
                  type: string
                city:
                  type: string
                companyName:
                  type: string
                contactInfo:
                  type: string
                country:
                  type: string
                currency:
                  type: string
                decimalPlaces:
                  example: 2
                  format: int32
                  type: integer
                decimalToken:
                  example: .
                  type: string
                discount:
                  example: '@float(0,100,2,2)'
                  type: string
                email:
                  type: string
                expiredAt:
                  example: 1/01/2021
                  type: string
                grandTotal:
                  example: '@float(0,100,2,2)'
                  type: string
                imageUrl:
                  type: string
                isBackendUser:
                  example: 0
                  format: int32
                  type: integer
                legalTerms:
                  description: 新增字段，可单独传这一个参数开进行修改，只能后台修改
                  type: string
                location:
                  example: right
                  type: string
                message:
                  example: '@str'
                  type: string
                name:
                  type: string
                notes:
                  description: 新增字段，可单独传这一个参数开进行修改，只能后台修改
                  type: string
                offeredPrice:
                  example: '@float(0,100,2,2)'
                  type: string
                optionId:
                  example: 1
                  format: int32
                  type: integer
                optionLabel:
                  type: string
                optionName:
                  type: string
                optionValue:
                  type: string
                options:
                  type: string
                phoneNumber:
                  type: string
                productId:
                  example: 1
                  format: int32
                  type: integer
                productList:
                  type: string
                productName:
                  type: string
                quantity:
                  example: '@int(1,100)'
                  type: string
                quoteTitle:
                  description: 新增字段，可单独传这一个参数开进行修改
                  type: string
                referenceNumber:
                  type: string
                shippingAddress:
                  type: string
                sku:
                  example: '@str'
                  type: string
                state:
                  type: string
                storeHash:
                  type: string
                subtotal:
                  example: '@float(0,100,2,2)'
                  type: string
                thousandsToken:
                  example: ','
                  type: string
                token:
                  example: $
                  type: string
                userEmail:
                  example: '@email'
                  type: string
                variantId:
                  example: 1
                  format: int32
                  type: integer
                zipCode:
                  type: string
              required:
                - isBackendUser
                - userEmail
                - expiredAt
                - subtotal
                - discount
                - grandTotal
                - currency
                - token
                - location
                - decimalToken
                - thousandsToken
                - decimalPlaces
                - message
                - productList
                - sku
                - basePrice
                - offeredPrice
                - quantity
                - productId
                - variantId
                - imageUrl
                - productName
                - options
                - optionId
                - optionValue
                - optionLabel
                - optionName
                - storeHash
                - referenceNumber
                - contactInfo
                - shippingAddress
                - name
                - email
                - companyName
                - phoneNumber
                - country
                - state
                - city
                - zipCode
                - address
                - apartment
                - quoteTitle
                - notes
                - legalTerms
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: update a quote
      tags:
        - RequestForQuote
  '/rfq/{quoteId}/checkout':
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Checkout quote form by quoteId
      operationId: quoteformcheckout
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                storeHash:
                  type: string
              required:
                - storeHash
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote form checkout
      tags:
        - RequestForQuote
  '/rfq/{quoteId}/pdf-export':
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Export quote pdf
      operationId: quoteexportpdf
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                currency:
                  description: 用户货币切换，不需要切换则不传
                  type: string
                currencyExchangeRate:
                  description: 汇率
                  type: string
                isBackendUser:
                  type: string
                storeHash:
                  type: string
                token:
                  description: 货币符号
                  type: string
              required:
                - currency
                - storeHash
                - token
                - currencyExchangeRate
                - isBackendUser
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote export pdf
      tags:
        - RequestForQuote
  /products/inventory:
    post:
      deprecated: false
      description: Get products inventory  info
      operationId: getproductsinventoryinfo
      parameters:
        - description: 必填
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                productId:
                  description: 必填
                  type: string
                products:
                  type: string
                quantity:
                  type: string
                variantId:
                  description: 没有传空
                  type: string
              required:
                - products
                - productId
                - variantId
                - quantity
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get products inventory  info
      tags:
        - Order Products
  '/rqf/{quoteId}/ordered':
    parameters:
      - in: path
        name: quoteId
        required: true
        schema:
          type: string
    post:
      deprecated: false
      description: Ordered a quote by quoteId
      operationId: quoteordered
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                orderId:
                  type: string
                storeHash:
                  type: string
              required:
                - orderId
                - storeHash
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: quote ordered
      tags:
        - RequestForQuote
  '/sales-reps/{customerId}/companies/masquerading':
    get:
      deprecated: false
      description: Get current sales rep is masquerading company info
      operationId: getmasqueradingcompanybysalesrep副本
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get masquerading company by sales rep(copay)
      tags:
        - Sales Rep
    parameters:
      - in: path
        name: customerId
        required: true
        schema:
          type: string
  '/sales-reps/{customerId}/companies/{companyId}/end-masq':
    parameters:
      - in: path
        name: customerId
        required: true
        schema:
          type: string
      - in: path
        name: companyId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update status for when a super admin ends masquerade as a company by customerId and companyId
      operationId: SalesRepEndmasquerade
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: authToken
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Sales Rep End masquerade
      tags:
        - Sales Rep
  '/sales-reps/{salesRepId}/companies':
    get:
      deprecated: false
      description: Get company by salesRepId
      operationId: getcompanylistbysalesRep
      parameters:
        - description: ''
          explode: true
          in: query
          name: limit
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: offset
          required: true
          schema:
            type: string
          style: form
        - description: '排序的字段 [ "companyName", "companyEmail" ]'
          explode: true
          in: query
          name: orderBy
          required: true
          schema:
            type: string
          style: form
        - description: 'DESC 或 ASC.'
          explode: true
          in: query
          name: sortBy
          required: true
          schema:
            example: DESC
            type: string
          style: form
        - description: 关键字参数
          explode: true
          in: query
          name: q
          required: true
          schema:
            type: string
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get company list by salesRep
      tags:
        - Sales Rep
    parameters:
      - in: path
        name: salesRepId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update a company by salesRepId
      operationId: assigncompaniestosalesrep
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                companies:
                  type: string
                companyId:
                  type: string
              required:
                - companies
                - companyId
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Assign Companies to Super Admin
      tags:
        - Sales Rep
  '/sales-reps{customerId}/companies/{companyId}/begin-masq':
    parameters:
      - in: path
        name: customerId
        required: true
        schema:
          type: string
      - in: path
        name: companyId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update status for when a super admin ends masquerade as a company by customerId and companyId
      operationId: SalesRepbeginmasquerade
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: authToken
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Sales Rep begin masquerade
      tags:
        - Sales Rep
  /shoppinglists:
    get:
      deprecated: false
      description: Get shopplist
      operationId: getshopplistLists
      parameters:
        - description: ''
          explode: true
          in: query
          name: offset
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: limit
          required: true
          schema:
            type: string
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get shopplist Lists
      tags:
        - ShoppingList
    post:
      deprecated: false
      description: Create shoppinglist
      operationId: createdshoppinglist
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                description:
                  example: '@title()'
                  type: string
                name:
                  example: '@title()'
                  type: string
                status:
                  description: ''
                  example:
                    - 0
                    - 20
                    - 30
                    - 40
                  items:
                    format: int32
                    type: integer
                  type: array
              required:
                - name
                - description
                - status
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: created shoppinglist
      tags:
        - ShoppingList
    put:
      deprecated: false
      description: Update shopplists
      operationId: updateshopplists
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                description:
                  type: string
                id:
                  type: string
                name:
                  type: string
                status:
                  description: 只能admin 和 seniorbuyer 能修改 shopplist的状态
                  type: string
              required:
                - id
                - name
                - status
                - description
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: update shopplists
      tags:
        - ShoppingList
  /shoppinglists/duplicate:
    post:
      deprecated: false
      description: Duplicate a shoppinglist
      operationId: duplicateashoppinglist
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                description:
                  example: '@title'
                  type: string
                name:
                  example: '@title'
                  type: string
                sampleShoppingListId:
                  example: 1
                  format: int32
                  type: integer
              required:
                - name
                - description
                - sampleShoppingListId
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: duplicate a shoppinglist
      tags:
        - ShoppingList
  /shoppinglists/items:
    get:
      deprecated: false
      description: Get shopplists items
      operationId: getshoppingitems
      parameters:
        - description: shopplistid
          explode: true
          in: query
          name: id
          required: true
          schema:
            example: 123
            format: int32
            type: integer
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get shopping items
      tags:
        - ShoppingList
    post:
      deprecated: false
      description: Add shopplists items
      operationId: createdshopplistsitems
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                id:
                  description: shopplistId
                  type: string
                items:
                  type: string
                optionList:
                  description: 不是必须的
                  type: string
                option_id:
                  description: 下划线是为了直接添加到bc接口 addto cart这些 bc是下划线数据
                  type: string
                option_value:
                  type: string
                productId:
                  description: 接口调试不过，暂时改为不必须
                  type: string
                qty:
                  type: string
                variantId:
                  description: 如果是simple产品则和productId一样
                  type: string
              required:
                - id
                - items
                - productId
                - qty
                - variantId
                - optionList
                - option_id
                - option_value
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: created shopplists items
      tags:
        - ShoppingList
    put:
      deprecated: false
      description: Edit shopplists items
      operationId: updateshopplistsitems
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxx
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                itemId:
                  example: 123
                  format: int32
                  type: integer
                optionList:
                  type: string
                option_id:
                  type: string
                option_value:
                  type: string
                qty:
                  example: 13
                  format: int32
                  type: integer
                shoppinglistId:
                  example: 123
                  format: int32
                  type: integer
                variantId:
                  example: qadwad
                  type: string
              required:
                - shoppinglistId
                - itemId
                - variantId
                - qty
                - optionList
                - option_id
                - option_value
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: update shopplists items
      tags:
        - ShoppingList
  /shoppinglists/items-extension:
    get:
      deprecated: false
      description: Get shopplists items extension
      operationId: getshoppingitemsextension
      parameters:
        - description: ''
          explode: true
          in: query
          name: offset
          required: true
          schema:
            example: 0
            format: int32
            type: integer
          style: form
        - description: ''
          explode: true
          in: query
          name: limit
          required: true
          schema:
            example: 100
            format: int32
            type: integer
          style: form
        - description: shopplistid
          explode: true
          in: query
          name: id
          required: true
          schema:
            example: 123
            format: int32
            type: integer
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get shopping items extension
      tags:
        - ShoppingList
  /shoppinglists/lists:
    get:
      deprecated: false
      description: Get shoppinglist's ID and name
      operationId: getshopplistsnameid
      parameters:
        - description: |-
            筛选参数： 不传时为筛选全部。
            0: approved status
            2: draft status
            3:  ready for approval status
          explode: true
          in: query
          name: status
          required: true
          schema:
            example: '@int(0, 3)'
            type: string
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get shopplists name id
      tags:
        - ShoppingList
  '/shoppinglists/{shoppingListId}':
    delete:
      deprecated: false
      description: Delete shoppinglist
      operationId: deleteshoppinglist
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: delete shoppinglist
      tags:
        - ShoppingList
    parameters:
      - in: path
        name: shoppingListId
        required: true
        schema:
          type: string
  '/shoppinglists/{shoppingListId}/items/{itemId}':
    delete:
      deprecated: false
      description: Delete shopping list item using shoppingListId and itemId
      operationId: deleteshopplistitems
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: delete shopplist items
      tags:
        - ShoppingList
    parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      - in: path
        name: shoppingListId
        required: true
        schema:
          type: string
  /store-configs/switch-status:
    get:
      deprecated: false
      description: Get store configs switch status
      operationId: getstoreconfig的switch-status
      parameters:
        - description: 可以根据key来获取单个的
          explode: true
          in: query
          name: key
          required: true
          schema:
            type: string
          style: form
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get store config's switch-status
      tags:
        - storeConfig
  /stores/currencies:
    get:
      deprecated: false
      description: Get store currencies
      operationId: getstorecurrencies
      parameters:
        - description: ''
          explode: true
          in: query
          name: storehash
          required: true
          schema:
            example: sssw
            type: string
          style: form
        - description: required
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: get store currencies
      tags:
        - Stores
  /stores/order-statuses:
    get:
      deprecated: false
      description: Get order status
      operationId: GetStoreOrderStatuses
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: xxxxxxxxxxxxxxxxxxx
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Get Store Order Statuses
      tags:
        - Stores
  /users:
    get:
      deprecated: false
      description: Get user list
      operationId: userlist
      parameters:
        - description: '分页的参数，开始的id，默认值为0, 正常会传递(当前页-1)*limit， 比如，要请求第5页的数据，每页10条，那么这里应该传入(5 - 1) * 10'
          explode: true
          in: query
          name: offset
          required: true
          schema:
            example: 0
            format: int32
            type: integer
          style: form
        - description: 每页条数
          explode: true
          in: query
          name: limit
          required: true
          schema:
            example: 10
            format: int32
            type: integer
          style: form
        - description: 搜索关键字
          explode: true
          in: query
          name: q
          required: true
          schema:
            type: string
          style: form
        - description: |-
            [
            "",
            "0",
            "1",
            "2",
            "3",
            "4"
            ]
          explode: true
          in: query
          name: role
          required: true
          schema:
            type: string
          style: form
        - description: 必选
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: user list
      tags:
        - Users
    post:
      deprecated: false
      description: Create users
      operationId: createuser
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                email:
                  example: kobe@bu.com
                  type: string
                firstName:
                  example: kobe
                  type: string
                lastName:
                  example: tian
                  type: string
                phoneNumber:
                  example: 17316289569
                  format: int64
                  type: integer
                role:
                  type: string
              required:
                - firstName
                - lastName
                - email
                - phoneNumber
                - role
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: create user
      tags:
        - Users
  /users/validations/existence:
    get:
      deprecated: false
      description: Check if the email address already exists at the given store
      operationId: Checktheexistenceofemailinthespecificstore
      parameters:
        - description: ''
          explode: true
          in: query
          name: storeHash
          required: true
          schema:
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: email
          required: true
          schema:
            example: '@email'
            type: string
          style: form
        - description: lable在请求中对应的fieldName，这可以在浏览器中对请求进行拦截查看。例如，Customer ID这个lable对应的是customerId。
          explode: true
          in: query
          name: extraFieldName
          required: true
          schema:
            example: customerId
            type: string
          style: form
        - description: ''
          explode: true
          in: query
          name: extraFieldValue
          required: true
          schema:
            type: string
          style: form
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: Check the existence of email in the specific store
      tags:
        - Company
  '/users/{userId}':
    delete:
      deprecated: false
      description: 'Delete user '
      operationId: deleteuser
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: b3-accessToken
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: delete user
      tags:
        - Users
    get:
      deprecated: false
      description: Get user infomation by userId
      operationId: getUserInfo
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            example: b3-accessToken
            type: string
          style: simple
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: getUserInfo
      tags:
        - Users
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
    put:
      deprecated: false
      description: Update user infomation
      operationId: updateuserinfo
      parameters:
        - description: ''
          in: header
          name: authToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              properties:
                email:
                  type: string
                firsName:
                  type: string
                lastName:
                  type: string
                phoneNumber:
                  type: string
                role:
                  type: string
              required:
                - firsName
                - lastName
                - email
                - phoneNumber
                - role
              type: object
        required: false
      responses:
        default:
          content: {}
          description: ''
          headers: {}
      summary: update user info
      tags:
        - Users
components:
  examples: {}
  parameters:
    companyId:
      description: Unique numeric ID of company
      in: path
      name: companyId
      required: true
      schema:
        example: 1
        type: integer
    limit:
      allowEmptyValue: true
      description: 'Pagination limit default: 10'
      in: query
      name: limit
      schema:
        default: 10
        exclusiveMaximum: true
        exclusiveMinimum: true
        maximum: 250
        minimum: 1
        type: integer
    offset:
      allowEmptyValue: true
      description: 'Pagination offset default: 0'
      in: query
      name: offset
      schema:
        minimum: 0
        type: integer
    orderBy:
      description: Order by
      in: query
      name: orderBy
      required: false
      schema:
        default: DESC
        enum:
          - DESC
          - ASC
        example: ASC
        type: string
    orderId:
      description: Unique numeric ID of order
      in: path
      name: orderId
      required: true
      schema:
        example: 1
        type: integer
    sortBy:
      description: Sort order by desc or asc
      in: query
      name: sortBy
      required: false
      schema:
        default: desc
        enum:
          - desc
          - asc
        example: desc
        type: string
  responses:
    '404':
      content:
        application/json:
          examples:
            example-1:
              value:
                code: 404
                data: {}
                meta:
                  message: Not Found Error
          schema:
            description: ''
            properties:
              code:
                example: 404
                type: integer
              data:
                type: object
              meta:
                properties:
                  message:
                    description: error message of this response
                    example: Not Found Error
                    type: string
                type: object
            required:
              - code
              - data
            type: object
            x-examples:
              example-1:
                code: 404
                data: {}
                meta:
                  message: Not Found Error
      description: Resource not found error
    '500':
      content:
        application/json:
          examples:
            example-1:
              value:
                code: 500
                data:
                  errMsg: Get xxx error.
                message: Internal Server Error
          schema:
            description: Response body
            type: object
            properties:
              code:
                description: Response status code
                example: 500
                type: integer
              data:
                description: Response data
                type: object
                properties:
                  errMsg:
                    type: string
                    example: Get xxx error.
                    description: error message detail
              message:
                type: string
                description: Server Error Response message
                example: Internal Server Error
      description: Server Error
  schemas:
    address:
      description: address base model
      properties:
        addressLine1:
          description: Address line 1 of the Address Model.
          example: 1600 Pennsylvania Avenue NW
          maxLength: 200
          minLength: 1
          type: string
        addressLine2:
          description: Address line 2 of the Address Model.
          example: 'Washington, DC 22202'
          maxLength: 200
          minLength: 1
          type: string
        city:
          description: City of the Address Model.
          example: Austin
          maxLength: 100
          minLength: 1
          type: string
        companyId:
          description: The company ID of this address owner
          example: 1840
          type: integer
        country:
          description: Country of the Address Model.
          properties:
            countryCode:
              description: Country code of the Address Model.
              example: US
              maxLength: 50
              minLength: 1
              type: string
            countryName:
              description: Country name of the Address Model.
              example: United States
              maxLength: 200
              minLength: 1
              type: string
          required:
            - countryCode
            - countryName
          type: object
        firstName:
          description: First name of the Address Model.
          example: Jane
          maxLength: 100
          minLength: 1
          type: string
        id:
          description: Unique numeric ID of this Address.
          example: 1
          format: int32
          readOnly: true
          type: integer
        isBilling:
          type: boolean
        isDefaultBilling:
          type: boolean
        isDefaultShipping:
          type: boolean
        isShipping:
          type: boolean
        lastName:
          description: Last name of the Address Model.
          example: Doe
          maxLength: 100
          minLength: 1
          type: string
        phoneNumber:
          description: contact phone number of this address
          example: '11111111111'
          maxLength: 50
          minLength: 1
          type: string
        state:
          description: state of this address
          properties:
            stateCode:
              description: State code of the Address Model.
              example: TX
              maxLength: 50
              minLength: 1
              type: string
            stateName:
              description: State name of the Address Model.
              example: Texas
              maxLength: 50
              minLength: 1
              type: string
          required:
            - stateCode
            - stateName
          type: object
        zipCode:
          description: zip code
          example: '78751'
          maxLength: 50
          minLength: 1
          type: string
      required:
        - addressLine1
        - addressLine2
        - city
        - country
        - firstName
        - lastName
        - isBilling
        - isDefaultBilling
        - isDefaultShipping
        - isShipping
        - phoneNumber
        - state
        - zipCode
        - companyId
      title: Address Model
      type: object
      x-examples:
        example-1:
          addressLine1: 1600 Pennsylvania Avenue NW
          addressLine2: 'Washington, DC 22202'
          city: Austin
          companyId: 1840
          country:
            countryCode: US
            countryName: United States
          firstName: Jane
          id: 1
          isBilling: true
          isDefaultBilling: true
          isDefaultShipping: true
          isShipping: true
          lastName: Doe
          phoneNumber: '11111111111'
          state:
            stateCode: TX
            stateName: Texas
          zipCode: '78751'
    company:
      description: Company basic model
      properties:
        addressLine1:
          description: Address line 1 of ths company.
          example: 1600 Pennsylvania Avenue NW
          maxLength: 200
          type: string
        addressLine2:
          description: Address line 2 of ths company.
          example: 'Washington, DC 22202'
          maxLength: 200
          type: string
        bcGroupName:
          description: Corresponding group name in bigcommerce. It must be unqiue. It will be same as company name or additional a random string.
          example: Tesla-RandomStr
          maxLength: 250
          minLength: 1
          readOnly: true
          type: string
        catalogId:
          description: Unique numeric ID of company's catalog.
          example: '1'
          type: string
        catalogName:
          description: name of this company's catalog.
          example: catalog
          type: string
        city:
          description: City name of the company.
          example: 'Detroit '
          maxLength: 100
          type: string
        companyEmail:
          description: Contact email of this company.
          example: dev.b2b@test.net
          format: email
          maxLength: 200
          type: string
        companyName:
          description: name of this company
          example: Tesla
          maxLength: 200
          minLength: 1
          type: string
        companyStatus:
          description: The status of this company
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
          example: '1'
          readOnly: true
          type: string
        country:
          description: county of the company
          example: US
          maxLength: 200
          type: string
        createdAt:
          description: create timestamp of the Company
          example: 1620872672
          readOnly: true
          type: integer
        customerGroupId:
          description: customer group ID of this company in bigcommerce.
          example: '42'
          readOnly: true
          type: string
        id:
          description: Unique numeric ID of this Company. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          example: 1
          readOnly: true
          type: integer
        phoneNumber:
          description: Phone number of the company
          example: '9090980'
          maxLength: 50
          type: string
        state:
          description: State of the company.
          example: State of Texas
          maxLength: 50
          type: string
        updatedAt:
          description: update timestamp of the Company
          example: 1620872672
          readOnly: true
          type: integer
        uuid:
          description: UUID of Company
          example: 095be615
          readOnly: true
          type: string
        zipCode:
          description: Zip code of the company.
          example: '100000'
          maxLength: 50
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - companyName
      title: Company Model
      type: object
      x-examples:
        example-1:
          addressLine1: 1600 Pennsylvania Avenue NW
          addressLine2: 'Washington, DC 22202'
          bcGroupName: Tesla-RandomStr
          catalogId: '1'
          catalogName: catalog
          city: 'Detroit '
          companyEmail: dev.b2b@test.net
          companyName: Tesla
          companyStatus: '1'
          country: US
          createdAt: 1620872672
          customerGroupId: '42'
          id: 1
          phoneNumber: '9090980'
          state: State of Texas
          updatedAt: 1620872672
          uuid: 095be615
          zipCode: '100000'
    order:
      description: order base model
      properties:
        bcOrderId:
          description: Unique numeric ID of this order in bigcommerce.
          example: 11
          readOnly: true
          type: integer
        cartId:
          example: 1
          readOnly: true
          type: integer
        companyId:
          description: Company ID field
          example: 12
          format: int32
          type: integer
        createdAt:
          description: create timestamp of the order
          example: 1574999690
          readOnly: true
          type: integer
        currencyCode:
          description: Currency code of this order
          example: USD
          readOnly: true
          type: string
        customStatus:
          description: custom status of this order.set by store manage.
          example: my-completed
          readOnly: true
          type: string
        id:
          description: Unique numeric ID of this order in B2B Edition.
          example: 1
          format: int32
          readOnly: true
          type: integer
        items:
          description: total product item of this order.
          example: 4
          format: int32
          readOnly: true
          type: integer
        money:
          description: price display settings.
          example: '{"currency_location": "left", "currency_token": "$", "decimal_token": ".", "decimal_places": 2, "thousands_token": ","}'
          readOnly: true
          type: string
        poNumber:
          description: po payment method message.
          example: bj256
          type: string
        status:
          description: status of this order
          example: completed
          readOnly: true
          type: string
        statusCode:
          description: Order status code
          example: 0
          readOnly: true
          type: integer
        totalIncTax:
          description: Total price of order which include tax
          example: 10.5
          format: float
          minimum: 0
          type: number
        updatedAt:
          description: update timestamp of the order
          example: 1574999690
          readOnly: true
          type: integer
        usdIncTax:
          description: Total price of usd with order tax.
          example: 11
          format: float
          readOnly: true
          type: number
      required:
        - id
        - bcOrderId
      title: Order Model
      type: object
      x-examples:
        example-1:
          bcOrderId: 11
          cartId: 1
          companyId: 12
          createdAt: 1574999690
          currencyCode: USD
          customStatus: my-completed
          id: 1
          items: 4
          money: '{"currency_location": "left", "currency_token": "$", "decimal_token": ".", "decimal_places": 2, "thousands_token": ","}'
          poNumber: bj256
          status: completed
          statusCode: 0
          totalIncTax: 10.5
          updatedAt: 1574999690
          usdIncTax: 11
    order-product:
      description: Order product base model
      properties:
        createdAt:
          description: create timestamp of the order
          example: 1574999690
          readOnly: true
          type: integer
        id:
          description: Unique numeric ID of this order in B2B Edition.
          example: 1
          format: int32
          readOnly: true
          type: integer
        options:
          description: detail infomation of SKU
          example: '[{"id": 715, "option_id": 41, "order_product_id": 670, "product_option_id": 121, "display_name": "Gauge", "display_value": "12", "value": "123", "type": "Multiple choice", "name": "Gauge1576218034-477", "display_style": "Dropdown"}, {"id": 716, "option_id": 42, "order_product_id": 670, "product_option_id": 122, "display_name": "Leg 1 (inches)", "display_value": "5", "value": "5", "type": "Text field", "name": "Leg-1-(inches)1576218034-477", "display_style": ""}]'
          type: string
        productBrandName:
          description: brand name of this product
          example: LGM
          type: string
        productName:
          description: 'Name of this product '
          example: LGM Spicy Chili Crisp
          type: string
        quantity:
          description: quantity number of product in this order
          example: 10
          type: integer
        updatedAt:
          description: update timestamp of the order
          example: 1574999690
          readOnly: true
          type: integer
        variantId:
          description: SKU's ID
          example: 12
          type: integer
        variantSKU:
          description: SKU name
          example: 7.41 Ounce (Pack of 12)
          type: string
      title: Order Product Model
      type: object
      x-examples:
        example-1:
          createdAt: 1574999690
          id: 1
          options: '[{"id": 715, "option_id": 41, "order_product_id": 670, "product_option_id": 121, "display_name": "Gauge", "display_value": "12", "value": "123", "type": "Multiple choice", "name": "Gauge1576218034-477", "display_style": "Dropdown"}, {"id": 716, "option_id": 42, "order_product_id": 670, "product_option_id": 122, "display_name": "Leg 1 (inches)", "display_value": "5", "value": "5", "type": "Text field", "name": "Leg-1-(inches)1576218034-477", "display_style": ""}]'
          productBrandName: LGM
          productName: LGM Spicy Chili Crisp
          quantity: 10
          updatedAt: 1574999690
          variantId: 12
          variantSKU: 7.41 Ounce (Pack of 12)
    pagination:
      description: used to response pagination information
      properties:
        pagination:
          properties:
            limit:
              description: 'Pagination limit default: 10'
              example: 10
              maximum: 250
              minimum: 0
              type: integer
            offset:
              description: 'Pagination offset default: 0'
              example: 0
              minimum: 0
              type: integer
          type: object
      title: Pagination Model
      type: object
    response-ok:
      description: success Response base model
      title: Success Response Model
      type: object
      properties:
        code:
          description: response code of success request.
          example: 200
          type: integer
        message:
          type: string
          example: Success
          description: success reponse message.
      x-examples:
        example-1:
          code: 200
          message: Success
    response-ok-pagination:
      allOf:
        - $ref: '#/components/schemas/response-ok'
        - properties:
            meta:
              $ref: '#/components/schemas/pagination'
          type: object
      description: success response with pagination data
      title: Success Response With Pagination Model
      x-examples:
        example-1:
          code: 200
          meta:
            message: SUCCESS
            pagination:
              limit: 10
              offset: 0
    super-admin:
      description: super-admin model (sales rep)
      properties:
        createdAt:
          description: create timestamp of the SuperAdmin
          example: 1620872672
          readOnly: true
          type: integer
        firstName:
          description: First name of the SuperAdmin
          example: Tom
          maxLength: 50
          minLength: 1
          type: string
        id:
          description: Unique numeric ID of this SuperAdmin. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          example: 1
          readOnly: true
          type: integer
        lastName:
          description: Last name of the SuperAdmin
          example: Cat
          maxLength: 50
          minLength: 1
          type: string
        updatedAt:
          description: update timestamp of the SuperAdmin
          example: 1620872672
          readOnly: true
          type: integer
      required:
        - firstName
        - lastName
      title: SuperAdmin Model
      type: object
      x-examples:
        example-1:
          createdAt: 1620872672
          firstName: Tom
          id: 1
          lastName: Cat
          updatedAt: 1620872672
    user:
      description: user base model
      properties:
        bcId:
          description: user ID in bigcommerce
          example: 12
          readOnly: true
          type: integer
        companyId:
          description: Company ID
          example: 2
          readOnly: true
          type: integer
        createdAt:
          description: create timestamp of the user
          example: 1574999690
          readOnly: true
          type: integer
        email:
          description: Email address of the user
          example: user@example.com
          type: string
        firstName:
          description: first name of the user
          example: Tom
          type: string
        id:
          description: Unique numeric ID of this User. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
          example: 1
          readOnly: true
          type: integer
        lastName:
          description: last name of the user
          example: Cat
          type: string
        phoneNumber:
          description: phone number of the user
          example: '112233'
          type: string
        role:
          description: user role (0=admin 1=senior_buyer 2=junior_buyer 3=sales_rep)
          example: 1
          type: integer
        updatedAt:
          description: update timestamp of the user
          example: 1574999690
          readOnly: true
          type: integer
        uuid:
          description: UUID of user
          example: 095be615
          readOnly: true
          type: string
      required:
        - id
      title: User Model
      type: object
      x-examples:
        example-1:
          bcId: 12
          companyId: 2
          createdAt: 1574999690
          email: user@example.com
          firstName: Tom
          id: 1
          lastName: Cat
          phoneNumber: '112233'
          role: 1
          updatedAt: 1574999690
          uuid: 095be615
  securitySchemes:
    authToken:
      description: ''
      in: header
      name: authToken
      type: apiKey
