openapi: 3.0.0
info:
  title: Companies and Users
  description: |-
    ## Introduction

    B2B Edition Companies are business accounts used by your clients to access their specific instance of the storefront. The queries and mutations in the Companies Storefront API allow you to:

    * Submit a Business Account application
    * Add users to an existing Company
    * Confirm that a user is assigned to a specific Company account
    * Create a Company address
    * Update a Company address
    * Get a Company’s address book or its default addresses
    * Mark an address as active or inactive

    ## Users

    A Company user is a buyer with a [BigCommerce customer account](https://developer.bigcommerce.com/docs/rest-management/customers-v2#get-all-customers) associated with a B2B Edition Company account. The Users Storefront API allows you to perform common user management tasks as a B2B buyer, such as viewing and updating user information, adding users to a Company account, and deleting them.

    **NOTE:** When performing storefront user management tasks as a Company user, you must confirm that the user’s Company role has the necessary permissions for the task. See [Company Roles and Permissions](https://developer.bigcommerce.com/b2b-edition/apis/rest-management/company#company-roles-and-permissions) for a complete list of permissions and their scopes.

    ### Company Users and Customer Accounts

    Company user accounts and storefront customer accounts have a one-to-one relationship, and each record acts as the source of truth for specific data. This means that a Company user account overwrites changes made to specific data in its corresponding customer storefront account, and vice versa.

    See the following table for the data defined by each record.

    | BigCommerce customer account | B2B Edition Company user account |
    | --- | --- |
    | Defines:<br><ul><li>Store credit</li><li>Abandoned cart saver and product review email consent</li><li>Account password and password reset</li><li>Tax exempt code</li><li>Account signup form fields</li><li>Data collection consent</li></ul> | Defines:<br><ul><li>Storefront channel access</li><li>Basic user information like name and email address</li><li>Assigned buyer role</li><li>Company user extra fields</li></ul>|

    ### Specifying User Role
    The role field uses numeric values to assign a role to a Company user account. B2B Edition’s predefined Company roles correspond the following values:

    * `0` — Admin
    * `1` — Senior Buyer
    * `2` — Junior Buyer

    Custom Company roles generate their own `role` values upon creation. Use the [Get Company Roles](https://developer.bigcommerce.com/b2b-edition/apis/rest-management/company/company-roles-and-permissions#get-company-roles) endpoint in the Server to Serve Management API to retrieve the id values of the store’s custom roles.
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: v2
servers:
  - url: 'https://api-b2b.bigcommerce.com/api/v2'
security:
  - BearerToken: []
tags:
  - name: Companies
  - name: Addresses
  - name: User

paths:
  /frontend/companies:
    parameters: []
    post:
      tags:
        - Companies
      summary: "Create a Company"
      operationId: createcompany(frontend)
      description: |-
        Submit a Business Account application on the storefront to create a Company account in the Pending status. This is an anonymous operation which does not require a [storefront authToken](https://developer.bigcommerce.com/b2b-edition/apis/rest-storefront/authentication) for a particular customer.

        Equivalent Storefront GraphQL API Mutation: `companyCreate`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).

        If you have configured required information fields in your store’s Extra Fields settings for Company accounts or Company users, you must include the field’s name and value in the `extraFields` array of the request body. For more information on extra fields, see [B2B Edition Settings](https://support.bigcommerce.com/s/article/B2B-Edition-Settings) in the Help Center.
      parameters: []
      requestBody:
        content:
          application/json:
            encoding: {}
            schema:
              required:
                - addressLine1
                - addressLine2
                - city
                - companyEmail
                - companyFirstName
                - companyLastName
                - companyName
                - companyPhoneNumber
                - customerId
                - state
                - storeHash
                - zipCode
                - country
              allOf:
                - type: object
                  properties:
                    companyName:
                      $ref: "#/components/schemas/companyName"
                    companyPhoneNumber:
                      $ref: "#/components/schemas/companyPhone"
                    companyFirstName:
                      type: string
                      description: "The first name of the Company account administrator."
                      example: "Robert"
                    companyLastName:
                      type: string
                      description: "The last name of the Company account administrator."
                      example: "Robertson"
                    customerId:
                      type: string
                      description: "The ID of the BigCommerce customer account for the Company account administrator."
                    storeHash:
                      type: string
                      description: "The unique store hash for the BigCommerce store."
                      example: "abc123"
                - $ref: "#/components/schemas/companyEmail"
                - $ref: "#/components/schemas/addressString"
                - $ref: "#/components/schemas/extraFields"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    default: 200
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      companyId:
                        $ref: "#/components/schemas/companyId_INT"
  /companies/extra-fields/storefront:
    parameters: []
    get:
      tags:
        - Companies
      summary: "Get Company Extra Fields"
      operationId: get-companies-extra_fields-storefront
      description: |-
        Returns a list of available extra fields for Company accounts.

        Equivalent Storefront GraphQL API Query: `companyExtraFields`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).

        This request will only return Company extra fields that are configured to be visible on the storefront.
      parameters:
        - $ref: "#/components/parameters/storeHash"
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/extraFields_FULL"
                      code:
                        type: number
                        default: 200
  /customers/{userId}/companies:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      tags:
        - Companies
        - User
      summary: "Get a Company by User ID"
      operationId: getcompanybyuserid
      description: |-
        Returns information for the Company account that corresponds to the provided user ID.

        Equivalent Storefront GraphQL API Query: `userCompany`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).

        You must use the `userId` value for the Company user to return the correct Company; the `customerId` value of the corresponding BigCommerce customer account is not supported.
      parameters: []
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        allOf:
                          - type: object
                            properties:
                              companyId:
                                $ref: "#/components/schemas/companyId"
                              companyName:
                                $ref: "#/components/schemas/companyName"
                              bcGroupName:
                                type: string
                                description: "The internal name of the BigCommerce customer group assigned to the Company account. This field is read-only."
                                example: "Tier 3 B2B Clients"
                              copanyStatus:
                                type: string
                                description: "The Company’s activity status. See [Company Status Codes](https://developer.bigcommerce.com/b2b-edition/apis/rest-management/company#company-status-codes) to learn about their corresponding statuses."
                                enum:
                                  - "0"
                                  - "1"
                                  - "2"
                                  - "3"
                                example: "0"
                              description:
                                type: string
                                description: "The name of the business associated with the Company account."
                              catalogId:
                                $ref: "#/components/schemas/catalogId"
                              extraFields:
                                $ref: "#/components/schemas/extraFields"
                          - $ref: "#/components/schemas/addressString"
  /companies/{companyId}/users:
    parameters:
      - $ref: "#/components/parameters/companyId"
    get:
      tags:
        - Companies
        - User
      summary: "Get a Company User List"
      operationId: get-companies-companyId-users
      description: |-
        Returns a list of users associated with a Company account.

        Equivalent Storefront GraphQL API Query: `users`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters:
        - $ref: "#/components/parameters/shortRole"
        - $ref: "#/components/parameters/paginationLimit"
        - $ref: "#/components/parameters/paginationOffset"
        - $ref: "#/components/parameters/queryString"
        - name: minLastModifiedTime
          in: query
          schema:
            type: string
          description: "The earliest [Unix timestamp](https://www.unixtimestamp.com/) for when the Company account was modified that can be returned."
          example: "1618794615"
        - name: maxLastModifiedTime
          in: query
          schema:
            type: string
          description: "The latest [Unix timestamp](https://www.unixtimestamp.com/) for when the Company account was modified that can be returned."
          example: "1618794615"
        - name: minLastCreatedTime
          in: query
          schema:
            type: string
          description: "The earliest [Unix timestamp](https://www.unixtimestamp.com/) for when the Company account was created that can be returned."
          example: "1618794615"
        - name: maxLastCreatedTime
          in: query
          schema:
            type: string
          description: "The earliest [Unix timestamp](https://www.unixtimestamp.com/) for when the Company account was created that can be returned."
          example: "1618794615"
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          list:
                            type: array
                            items:
                              allOf:
                                - $ref: "#/components/schemas/userListItems_BASE"
                                - type: object
                                  properties:
                                    uuid:
                                      type: string
                                      description: "A unique ID associated with the user's account. Does not match the `id` field by default."
                                      format: uuid
                                    catalogId:
                                      $ref: "#/components/schemas/catalogId"
                          pagination:
                            $ref: "#/components/schemas/responsePagination"
    post:
      tags:
        - Companies
        - User
      summary: "Create a Company User"
      operationId: post-companies-companyId-users
      description: |-
        Creates a user associated with a particular Company account.

        Equivalent Storefront GraphQL API Mutation: `userCreate`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).

        If you enter an email address in the `email` field that is associated with a BigCommerce customer account, and the customer account does not already have a corresponding Company user account, it will link the existing customer account with the new Company user. If the email is not associated with a customer account, a new one will be created with the Company user.

        You can confirm if a particular email address is associated with a BigCommerce customer account by using the [Validate a Frontend User Email](/b2b-edition/apis/rest-storefront/company/companies#validate-a-frontend-user-email) endpoint.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - firstName
                - lastName
                - email
                - phone
                - userRole
              allOf:
                - $ref: "#/components/schemas/user_BASE"
                - type: object
                  properties:
                    userRole:
                      $ref: "#/components/schemas/userRoleInt"
                    phone:
                      $ref: "#/components/schemas/userPhone"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          userId:
                            type: number
                            description: "The unique ID for the customer account."
                            example: 123
  /companies/validations/frontend/user-emails/{email}:
    parameters:
      - name: email
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/email_BASE"
        description: "The email address of the user to be validated."
    get:
      tags:
        - Companies
      summary: "Validate a Frontend User Email"
      operationId: get-companies-validations-fronted-user-emails-email
      description: |-
        Checks if an email address is associated with a BigCommerce customer account and a Company user account.

        Equivalent Storefront GraphQL API Query: `userEmailCheck`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).

        The `isValid` value in the response indicates whether or not the email address is used by an existing customer or Company user. The following values are possible:

        * `0` — The email address is associated with a Company user account and a corresponding customer account.
        * `1` — The email address is not associated with a customer account or a Company user account.
        * `2` — The email address is associated with a customer account, but not a Company user account.
      parameters:
        - $ref: "#/components/parameters/storeHash"
        - $ref: "#/components/parameters/userRole"
        - name: companyId
          in: query
          schema:
            type: string
          description: "The unique numeric ID of the Company account."
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          isValid:
                            type: string
                            description: "The validation status of the account as outlined above."
                            example: "1"
                          userInfo:
                            allOf:
                              - $ref: "#/components/schemas/user_BASE"
                              - type: object
                                properties:
                                  id:
                                    $ref: "#/components/schemas/userId"
                                  phoneNumber:
                                    $ref: "#/components/schemas/userPhone"
                                  role:
                                    $ref: "#/components/schemas/userRole"
      x-internal: false
  /companies/addresses/countries:
    parameters: []
    get:
      tags:
        - Addresses
      summary: "Get Countries List"
      operationId: get-companies-addresses-countries
      description: |-
        Returns a list of **all** countries and, if applicable, their states. The response includes the name and code of each returned element and the id of each country.

        **NOTE:** Due to the size of the list returned, the results should be cached for continued use, if possible.

        Equivalent Storefront GraphQL API Query: `countries`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters:
        - $ref: "#/components/parameters/storeHash"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          list:
                            type: array
                            uniqueItems: true
                            items:
                              $ref: "#/components/schemas/countryWithState"
  /companies/addresses/permission:
    parameters: []
    get:
      tags:
        - Addresses
      summary: "Get Address Edit Permission"
      operationId: get-companies-addresses-permission
      description: |-
        Checks whether or not the storefront allows Company users to modify addresses. This corresponds with the Address book management settings in the B2B Edition control panel. See [B2B Edition Settings](https://support.bigcommerce.com/s/article/B2B-Edition-Settings) in the Help Center to learn more.

        Equivalent Storefront GraphQL API Query: `addressConfig`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          isAllow:
                            type: string
                            description: "Indicates whether users are allowed to modify addresses from the storefront. A value of `1` indicates storefront address management is allowed. A value of `0` indicates it is not."
                            example: "1"
                          isEnabled:
                            type: string
                            description: "Indicates whether storefront address management is enabled. A value of `1` indicates the feature is enabled. A value of `0` indicates the feature is disabled and the setting of `isAllow` will have no effect."
                            example: "1"
  /companies/{companyId}/addresses:
    parameters:
      - $ref: "#/components/parameters/companyId"
    get:
      tags:
        - Addresses
      summary: "Get a Company Address List"
      operationId: get-companies-companyId-addresses
      description: |-
        Returns the billing and shipping addresses associated with a particular Company account.

        Equivalent Storefront GraphQL API Query: `addresses`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          addresses:
                            type: object
                            description: "Addresses are returned as member objects within this object using the addressId as the member key."
                            properties:
                              addressId:
                                allOf:
                                  - type: object
                                    properties:
                                      addressId:
                                        $ref: "#/components/schemas/addressIdInt"
                                      lastName:
                                        type: string
                                        description: "The last name of the address."
                                        example: "Curie"
                                      isShipping:
                                        type: number
                                        description: "Indicates whether the address can be used as a shipping address."
                                        example: 1
                                      isBilling:
                                        type: number
                                        description: "Indicates whether the address can be used as a billing address."
                                        example: 0
                                      label:
                                        $ref: "#/components/schemas/addressLabel"
                                  - $ref: "#/components/schemas/addressExtendedInt"
                                  - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml
                          defaultShippingId:
                            type: string
                            description: "The ID of the default shipping address for the Company account."
                            example: "17"
                          defaultBillingId:
                            type: string
                            description: "The ID of the default billing address for the Company account."
                            example: "76"
                          canEnterNewAddress:
                            type: boolean
                            description: "Indicates whether users can enter addresses."
                            example: true
              examples:
                200 - SUCCESS:
                  value:
                    addresses:
                      27:
                        addressId: 27
                        firstName: "Marie"
                        lastName: "Curie"
                        isShipping: 1
                        isBilling: 0
                        phoneNumber: "8001234567"
                        addressLine1: "11305 Four Points Drive"
                        addressLine2: "Building 2"
                        city: "Austin"
                        state:
                          stateName: "Texas"
                          stateCode: "TX"
                        zipCode: "78726"
                        country:
                          countryName: "United States"
                          countryCode: "US"
                        extraFields:
                          - fieldName: "Company Tax Code"
                            fieldValue: "Code G"
                    defaultShippingId: "17"
                    defaultBillingId: "76"
                    canEnterNewAddresses: true
    post:
      tags:
        - Addresses
      summary: "Create a Company Address"
      operationId: post-companies-companyId-addresses
      description: |-
        Creates an address for a Company account, if address book management is enabled for your storefront. You can designate whether the address is for shipping, billing, or both.

        Equivalent Storefront GraphQL API Mutation: `addressCreate`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      requestBody:
        content:
          application/json:
            encoding: {}
            schema:
              required:
                - addressLine1
                - city
                - country
                - firstName
              allOf:
                - $ref: "#/components/schemas/addressExtended"
                - type: object
                  properties:
                    isDefaultShipping:
                      $ref: "#/components/schemas/isDefaultShipping"
                    isDefaultBilling:
                      $ref: "#/components/schemas/isDefaultBilling"
                    label:
                      $ref: "#/components/schemas/addressLabel"
                - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml
            examples:
              Create an Address:
                value:
                  label: "Austin Warehouse"
                  firstName: "Marie"
                  isShipping: "1"
                  isBilling: "0"
                  isDefaultShipping: "0"
                  isDefaultBilling: "0"
                  phoneNumber: "8001234567"
                  addressLine1: "11305 Four Points Drive"
                  addressLine2: "Building 2"
                  city: "Austin"
                  state:
                    stateName: "Texas"
                    stateCode: "TX"
                  zipCode: "78726"
                  country:
                    countryName: "United States"
                    countryCode: "US"
                  extraFields:
                    - fieldName: "Company Tax Code"
                      fieldValue: "Code G"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          addressId:
                            $ref: "#/components/schemas/addressId"
  /companies/{companyId}/addresses/searches:
    parameters:
      - $ref: "#/components/parameters/companyId"
    get:
      tags:
        - Addresses
      summary: "Search Company Addresses"
      operationId: get-companies-companyId-addresses-searches
      description: |-
        Returns all addresses associated with a Company account that match the query string `q`

        Equivalent Storefront GraphQL API Query: `addresses`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters:
        - $ref: "#/components/parameters/queryString"
        - $ref: "#/components/parameters/limitRequired"
        - $ref: "#/components/parameters/offsetRequired"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          addressBookStatus:
                            type: string
                          defaultAddress:
                            $ref: "#/components/schemas/companyAddressResponse"
                          list:
                            type: array
                            items:
                              $ref: "#/components/schemas/companyAddressResponse"
                          pagination:
                            $ref: "#/components/schemas/responsePagination"
    post:
      tags:
        - Addresses
      summary: "Search Addresses with Multiple Filters"
      operationId: post-companies-companyId-addresses-searches
      description: |-
        Returns one or more Company addresses based on the filter parameters. You can use this to make refined searches, such as locating a particular address by its label or viewing all addresses in a specific country.

        Equivalent Storefront GraphQL API Query: `addresses`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  allOf:
                    - $ref: "#/components/schemas/addressFilter"
                    - type: object
                      properties:
                        address:
                          type: string
                        state:
                          $ref: "#/components/schemas/stateString"
                        country:
                          $ref: "#/components/schemas/countryString"
                        addressType:
                          type: object
                          properties:
                            isBilling:
                              $ref: "#/components/schemas/isBilling"
                            isShipping:
                              $ref: "#/components/schemas/isShipping"
                offset:
                  type: number
                  description: "Pagination offset for the results."
                  example: 0
                limit:
                  type: number
                  description: "Pagination limit for the results."
                  example: 10
                q:
                  type: string
                  description: "The search string for the request. Its value determines the results returned by the request."
                  example: "United States"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          list:
                            type: array
                            items:
                              allOf:
                                - type: object
                                  properties:
                                    addressId:
                                      $ref: "#/components/schemas/addressId"
                                    isDefaultShipping:
                                      $ref: "#/components/schemas/isDefaultShipping"
                                    isDefaultBilling:
                                      $ref: "#/components/schemas/isDefaultBilling"
                                - $ref: "#/components/schemas/addressFilter"
                                - $ref: "#/components/schemas/addressExtended"
                                - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml
                          defaultAddressIds:
                            type: object
                            properties:
                              shippingAddressId:
                                type: string
                                example: "17"
                              billingAddressId:
                                type: string
                                example: "76"
                          pagination:
                            $ref: "#/components/schemas/responsePagination"
              examples:
                Search Addresses:
                  value:
                    code: 200
                    message: "Success"
                    data:
                      list:
                        - addressId: "27"
                          label: "Austin Warehouse"
                          firstName: "Marie"
                          LastName: "Curie"
                          addressLine1: "11305 Four Points Drive"
                          addressLine2: "Building 2"
                          city: "Austin"
                          state:
                            stateName: "Texas"
                            stateCode: "TX"
                          zipCode: "78726"
                          country:
                            countryName: "United States"
                            countryCode: "US"
                          phoneNumber: "8001234567"
                          extraFields:
                            - fieldName: "Company Tax Code"
                              fieldValue: "Code G"
                          isShipping: "1"
                          isBilling: "0"
                          isDefaultShipping: "0"
                          isDefaultBilling: "0"
                      defaultAddressIds:
                        shippingAddressId: 17
                        billingAddressId: 76
                      pagination:
                        totalCount: 175
                        offset: 0
                        limit: 10
  /companies/{companyId}/addresses/{addressId}:
    parameters:
      - $ref: "#/components/parameters/companyId"
      - $ref: "#/components/parameters/addressId"
    get:
      tags:
        - Addresses
      summary: "Get an Address"
      operationId: get-companies-companyId-addresses-addressId
      description: |-
        Returns a specific address based on the `companyId` and `addressId` in the path.

        Equivalent Storefront GraphQL API Query: address. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              encoding: {}
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        allOf:
                          - $ref: "#/components/schemas/addressExtended"
                          - type: object
                            properties:
                              addressId:
                                $ref: "#/components/schemas/addressId"
                              lastName:
                                $ref: "#/components/schemas/addressLastName"
                              isDefaultShipping:
                                $ref: "#/components/schemas/isDefaultShipping"
                              isDefaultBilling:
                                $ref: "#/components/schemas/isDefaultBilling"
                              label:
                                $ref: "#/components/schemas/addressLabel"
                          - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml
              examples:
                Create an Address:
                  value:
                    addressId: "27"
                    label: "Austin Warehouse"
                    firstName: "Marie"
                    lastName: "Curie"
                    isShipping: "1"
                    isBilling: "0"
                    isDefaultShipping: "0"
                    isDefaultBilling: "0"
                    phoneNumber: "8001234567"
                    addressLine1: "11305 Four Points Drive"
                    addressLine2: "Building 2"
                    city: "Austin"
                    state:
                      stateName: "Texas"
                      stateCode: "TX"
                    zipCode: "78726"
                    country:
                      countryName: "United States"
                      countryCode: "US"
                    extraFields:
                      - fieldName: "Company Tax Code"
                        fieldValue: "Code G"
    put:
      tags:
        - Addresses
      summary: "Update Address Information"
      operationId: put-companies-companyId-addresses-addressId
      description: |-
        Updates the details of a billing or shipping address, if address book management is enabled for your storefront.

        Equivalent Storefront GraphQL API Mutation: `addressUpdate`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - label
                - firstName
                - lastName
                - addressLine1
                - addressLine2
                - city
                - zipCode
                - phoneNumber
                - country
                - state
                - isShipping
                - isBilling
                - isDefaultShipping
                - isDefaultBilling
                - addressId
              allOf:
                - $ref: "#/components/schemas/addressExtended"
                - type: object
                  properties:
                    addressId:
                      $ref: "#/components/schemas/addressId"
                    lastName:
                      $ref: "#/components/schemas/addressLastName"
                    isDefaultShipping:
                      $ref: "#/components/schemas/isDefaultShipping"
                    isDefaultBilling:
                      $ref: "#/components/schemas/isDefaultBilling"
                    label:
                      $ref: "#/components/schemas/addressLabel"
                - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml
            examples:
              Create an Address:
                value:
                  addressId: "27"
                  label: "Austin Warehouse"
                  firstName: "Marie"
                  lastName: "Curie"
                  isShipping: "1"
                  isBilling: "0"
                  isDefaultShipping: "0"
                  isDefaultBilling: "0"
                  phoneNumber: "8001234567"
                  addressLine1: "11305 Four Points Drive"
                  addressLine2: "Building 2"
                  city: "Austin"
                  state:
                    stateName: "Texas"
                    stateCode: "TX"
                  zipCode: "78726"
                  country:
                    countryName: "United States"
                    countryCode: "US"
                  extraFields:
                    - fieldName: "Company Tax Code"
                      fieldValue: "Code G"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                  - properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          addressId:
                            $ref: "#/components/schemas/addressId"
  /companies/{companyId}/addresses/{addressId}/activation:
    parameters:
      - $ref: "#/components/parameters/companyId"
      - $ref: "#/components/parameters/addressId"
    put:
      tags:
        - Addresses
      summary: "Mark an Address as Active or Inactive"
      operationId: put-companies-companyId-addresses-addressId-activation
      description: |-
        Specifies whether or not a Company account can use a particular address on quotes or at checkout.

        Equivalent Storefront GraphQL API Mutation: `addressDelete`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                  - properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          addressId:
                            $ref: "#/components/schemas/addressId"
  /companies/{companyId}/default-addresses:
    parameters:
      - $ref: "#/components/parameters/companyId"
    get:
      tags:
        - Addresses
      summary: "Get Company Default Addresses"
      operationId: get-companies-companyId-default-addresses
      description: |-
        Returns a Company’s default shipping and billing addresses. Use Update Address Information to change which addresses are set as the defaults.

        Equivalent Storefront GraphQL API Query: `defaultBillingAddress` for the billing address and `defaultShippingAddress` for the shipping address. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                  - properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          shipping:
                            allOf:
                              - $ref: "#/components/schemas/addressFULL"
                              - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml
                          billing:
                            allOf:
                              - $ref: "#/components/schemas/addressFULL"
                              - $ref: https://raw.githubusercontent.com/bigcommerce/docs/main/docs/b2b-edition/models/extra_fields/extra_field_values.yaml
              examples:
                200 - SUCCESS:
                  value:
                    code: 200
                    message: "Success"
                    data:
                      shipping:
                        addressId: "27"
                        label: "Austin Warehouse"
                        firstName: "Marie"
                        lastName: "Curie"
                        phoneNumber: "8001234567"
                        addressLine1: "11305 Four Points Drive"
                        addressLine2: "Building 2"
                        city: "Austin"
                        state:
                          stateName: "Texas"
                          stateCode: "TX"
                        zipCode: "78726"
                        country:
                          countryName: "United States"
                          countryCode: "US"
                        extraFields:
                          - fieldName: "Company Tax Code"
                            fieldValue: "Code G"
                      billing:
                        addressId: "27"
                        label: "Austin Warehouse"
                        firstName: "Marie"
                        lastName: "Curie"
                        phoneNumber: "8001234567"
                        addressLine1: "11305 Four Points Drive"
                        addressLine2: "Building 2"
                        city: "Austin"
                        state:
                          stateName: "Texas"
                          stateCode: "TX"
                        zipCode: "78726"
                        country:
                          countryName: "United States"
                          countryCode: "US"
                        extraFields:
                          - fieldName: "Company Tax Code"
                            fieldValue: "Code G"
  /users/validations/existence:
    parameters: []
    get:
      tags:
        - User
      summary: "Check Existence of a Customer Email"
      operationId: get-users-validations-existence
      description: "This endpoint previously validated extra fields for a particular Company user by email address."
      parameters:
        - $ref: "#/components/parameters/storeHash"
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: "The email of the customer to be validated."
        - name: extraFieldName
          in: query
          schema:
            type: string
          description: "The name of the extra field."
        - name: extraFieldValue
          in: query
          schema:
            type: string
          description: "The value of the extra field."
      responses:
        "200":
          $ref: "#/components/responses/genericResponse"
      deprecated: true
  /users:
    parameters: []
    get:
      tags:
        - User
      summary: "Get User List"
      operationId: get-users
      description: |-
        Returns a list of a Company’s users by role.

        Equivalent Storefront GraphQL API Query: `users`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).

        The `role` parameter allows you to filter for users that have a predefined Company role. You can also view all users in a Company, or users with an unknown role.
      parameters: 
        - $ref: "#/components/parameters/queryString"
        - $ref: "#/components/parameters/userRole"
        - $ref: "#/components/parameters/paginationLimit"
        - $ref: "#/components/parameters/paginationOffset"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          list:
                            type: array
                            items:
                              $ref: "#/components/schemas/userListItems_BASE"
                          pagination:
                            $ref: "#/components/schemas/responsePagination"
    post:
      tags:
        - User
      summary: "Create a User"
      operationId: post-users
      description: |-
        Creates a new user in a Company account.

        Equivalent Storefront GraphQL API Mutation: `userCreate`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).

        If you enter an email address in the `email` field that is associated with a BigCommerce customer account, and the customer account does not already have a corresponding Company user account, it will link the existing customer account with the new Company user. If the email is not associated with a customer account, a new one will be created with the Company user.

        This endpoint will send a welcome email to the new user as if they had created their account via the Storefront UI.

        When you create an account this way, the user must reset their password to log in to the storefront unless they already have an existing BigCommerce customer account.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - companyId
                - firstName
                - lastName
                - email
                - phoneNumber
                - role
              allOf:
                - $ref: "#/components/schemas/user_BASE"
                - type: object
                  properties:
                    companyId:
                      $ref: "#/components/schemas/companyId"
                    phoneNumber:
                      $ref: "#/components/schemas/userPhone"
                    role:
                      allOf:
                        - $ref: "#/components/schemas/userRole"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          userId:
                            $ref: "#/components/schemas/userId"
                          bcId:
                            type: string
                            description: "The user's unique BigCommerce customer account ID. Does not match `userId` by default."
                            example: "321"
                          firstName:
                            $ref: "#/components/schemas/userFirstName"
                          lastName:
                            $ref: "#/components/schemas/userLastName"
                          email:
                            $ref: "#/components/schemas/userEmail"
                          role:
                            $ref: "#/components/schemas/userRole"
  /users/{userId}:
    parameters: 
      - $ref: "#/components/parameters/userId"
    get:
      tags:
        - User
      summary: "Get User Information"
      operationId: get-users-userId
      description: |-
        Returns Company user information. The `userId` parameter accepts both the Company user ID and the BigCommerce customer account ID.

        Equivalent Storefront GraphQL API Query: `user`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters:
        - name: isBcId
          in: query
          schema:
            type: string
          description: "Indicates whether the `userId` parameter is the BigCommerce Customer ID. A value of `1` indicates that it is."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/responseObject"
                  - type: object
                    properties:
                      code:
                        type: number
                        default: 200
                      data:
                        type: object
                        properties:
                          roleId:
                            $ref: "#/components/schemas/userRole"
                          userId:
                            $ref: "#/components/schemas/userId"
                          firstName:
                            $ref: "#/components/schemas/userFirstName"
                          lastName:
                            $ref: "#/components/schemas/userLastName"
                          phoneNumber:
                            $ref: "#/components/schemas/userPhone"
                          email:
                            $ref: "#/components/schemas/userEmail"
    put:
      tags:
        - User
      summary: "Update User Information"
      operationId: put-users-userId
      description: |-
        Updates information about an existing Company user. The `userId` parameter accepts both the Company user ID and the BigCommerce customer account ID.

        Equivalent Storefront GraphQL API Mutation: `userUpdate`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - firstName
                - lastName
                - email
                - phoneNumber
                - role
              allOf:
                - $ref: "#/components/schemas/user_BASE"
                - type: object
                  properties:
                    phoneNumber:
                      $ref: "#/components/schemas/userPhone"
                    role:
                      $ref: "#/components/schemas/userRole"
      responses:
        "200":
          $ref: "#/components/responses/genericResponse"
    delete:
      tags:
        - User
      summary: "Delete a User"
      operationId: delete-users-userId
      description: |-
        Deletes a Company user.

        Equivalent Storefront GraphQL API Mutation: `userDelete`. For more information, see the [GraphQL Playground](https://api-b2b.bigcommerce.com/graphql/playground).
      parameters: []
      responses:
        "200":
          $ref: "#/components/responses/genericResponse"

components:
  schemas:
    addressBASE:
      type: object
      properties:
        addressLine1:
          type: string
          description: "The first line of the address"
          example: "11305 Four Points Drive"
        addressLine2:
          type: string
          description: "The second line of the address"
          example: "Building 2"
        city:
          $ref: "#/components/schemas/companyCity"
        zipCode:
          $ref: "#/components/schemas/zipCode"
    addressString:
      allOf:
        - $ref: "#/components/schemas/addressBASE"
        - type: object
          properties:
            state:
              $ref: "#/components/schemas/stateString"
            country:
              $ref: "#/components/schemas/countryString"
    addressObject:
      allOf:
        - $ref: "#/components/schemas/addressBASE"
        - type: object
          properties:
            state:
              $ref: "#/components/schemas/stateObject"
            country:
              $ref: "#/components/schemas/countryObject"
    addressExtended:
      allOf:
        - type: object
          properties:
            firstName:
              $ref: "#/components/schemas/addressFirstName"
            isShipping:
              $ref: "#/components/schemas/isShipping"
            isBilling:
              $ref: "#/components/schemas/isBilling"
            phoneNumber:
              $ref: "#/components/schemas/addressPhone"
        - $ref: "#/components/schemas/addressObject"
    addressExtendedInt:
      allOf:
        - type: object
          properties:
            firstName:
              $ref: "#/components/schemas/addressFirstName"
            phoneNumber:
              $ref: "#/components/schemas/addressPhone"
        - $ref: "#/components/schemas/addressObject"
    addressFULL:
      allOf:
        - type: object
          properties:
            addressId:
              $ref: "#/components/schemas/addressId"
            firstName:
              $ref: "#/components/schemas/addressFirstName"
            lastName:
              $ref: "#/components/schemas/addressLastName"
            phoneNumber:
              $ref: "#/components/schemas/addressPhone"
            label:
              $ref: "#/components/schemas/addressLabel"
        - $ref: "#/components/schemas/addressObject"
    addressFirstName:
      type: string
      description: "The first name of the address."
      example: "Marie"
    addressLastName:
      type: string
      description: "The last name of the address."
      example: "Curie"
    addressId:
      type: string
      description: "The unique ID of the address."
      example: "27"
    addressIdInt:
      type: number
      description: "The unique ID of the address."
      example: 27
    isShipping:
      type: string
      description: "Indicates whether the address can be used as a shipping address."
      example: '1'
    isBilling:
      type: string
      description: "Indicates whether the address can be used as a billing address."
      example: '1'
    isDefaultShipping:
      type: string
      description: "Indicates whether the address is the default shipping address for the Company account."
      example: '1'
    isDefaultBilling:
      type: string
      description: "Indicates whether the address is the default billing address for the Company account."
      example: '1'
    addressLabel:
      type: string
      description: "The label used on the storefront to identify the address."
      example: "Austin Warehouse"
    addressPhone:
      type: string
      description: "The phone number associated with the address."
      example: "8001234567"
    companyAddressResponse:
      type: object
      properties:
        companyId:
          $ref: "#/components/schemas/companyId"
        companyName:
          $ref: "#/components/schemas/companyName"
        companyAddress:
          type: string
          description: "The local address information for the address."
          example: "11305 Four Points Drive, Building 2"
        companyCity:
          $ref: "#/components/schemas/companyCity"
        companyState:
          type: string
          description: "The name of the state, if applicable, for the address."
          example: "Texas"
        companyStateCode:
          type: string
          description: "The state code, if applicable, for the address"
          example: "TX"
        companyZipCode:
          $ref: "#/components/schemas/zipCode"
        companyCountry:
          type: string
          description: "The name of the country for the address."
          example: "United States"
        companyCountryCode:
          type: string
          description: "The country code for the address"
          example: "US"
        firstName:
          $ref: "#/components/schemas/addressFirstName"
        lastName:
          $ref: "#/components/schemas/addressLastName"
        phoneNumber:
          $ref: "#/components/schemas/addressPhone"
        label:
          $ref: "#/components/schemas/addressLabel"
    companyId:
      type: string
      description: "Unique numeric ID of the Company account."
      example: "123456"
    companyId_INT:
      type: number
      description: "Unique numeric ID of the Company account."
      example: 123456
    companyName:
      type: string
      description: "The name of the business associated with the Company account."
      example: "Great Buys"
    companyPhone:
      type: string
      description: "The primary phone number for the Company account."
      example: "1234567890"
    companyCity:
      type: string
      description: "City of the address."
      example: "Austin"
    stateString:
      type: string
      description: |-
        State of the address.
      example: "Texas"
    stateObject:
      type: object
      properties:
        stateName:
          type: string
          example: "Texas"
        stateCode:
          type: string
          example: "TX"
      description: "State of the address as an object with both the name and the two-character code."
    zipCode:
      type: string
      description: "Zip or Postal Code of the address."
      example: "78726"
    countryString:
      type: string
      description: "Country of the address."
      example: "United States"
    countryObject:
      type: object
      properties:
        countryName:
          type: string
          example: "United States"
        countryCode:
          type: string
          example: "US"
      description: "Country of the address as an object with both the name and the two-character code."
    email_BASE:
      type: string
      format: email
      example: "user@example.com"
    companyEmail:
      allOf:
        - type: object
          properties:
            companyEmail:
              $ref: "#/components/schemas/email_BASE"
        - type: object
          properties:
            companyEmail:
              description: "The primary email address of the company."
              example: "admin@example.com"
    catalogId:
      type: string
      description: "The ID of the price list assigned to the Company account."
      example: "123456"
    countryWithState:
      allOf:
        - type: object
          properties:
            id:
              type: number
              example: 226
        - $ref: "#/components/schemas/countryObject"
        - type: object
          properties:
            states:
              type: array
              items:
                $ref: "#/components/schemas/stateObject"
    userListItems_BASE:
      allOf:
        - $ref: "#/components/schemas/user_BASE"
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/userId"
            role:
              $ref: "#/components/schemas/userRole"
            phoneNumber:
              $ref: "#/components/schemas/userPhone"
            createdAt:
              type: string
              description: "The [Unix timestamp](https://www.unixtimestamp.com/) for when the user's account was created."
              example: "1618794615"
            updatedAt:
              type: string
              description: "The [Unix timestamp](https://www.unixtimestamp.com/) for when the user's account was most recently updated."
              example: "1618794615"
    user_BASE:
      type: object
      properties:
        firstName:
          $ref: "#/components/schemas/userFirstName"
        lastName:
          $ref: "#/components/schemas/userLastName"
        email:
          $ref: "#/components/schemas/userEmail"
    userId:
      type: string
      description: "The unique ID for the customer account."
      example: "123"
    userFirstName:
          type: string
          description: "The user's first name."
          example: "Marie"
    userLastName:
          type: string
          description: "The user's last name."
          example: "Curie"
    userEmail:
          type: string
          format: email
          description: "The email address associated with the user's account."
          example: "m.curie@greatbuys.com"
    userPhone:
              type: string
              description: "The phone number associated with the user's account."
              example: "8001234567"
    userRole:
              type: string
              description: "The ID of the role assigned to the Company user account as defined at [Specifying User Role](/b2b-edition/apis/rest-storefront/company#specifying-user-role)."
              enum:
                - "0"
                - "1"
                - "2"
              example: "1"
    userRoleInt:
              type: number
              description: "The ID of the role assigned to the Company user account as defined at [Specifying User Role](/b2b-edition/apis/rest-storefront/company#specifying-user-role)."
              enum:
                - 0
                - 1
                - 2
              example: 1
    addressFilter:
      type: object
      properties:
        firstName:
          $ref: "#/components/schemas/addressFirstName"
        lastName:
          $ref: "#/components/schemas/addressLastName"
        city:
          $ref: "#/components/schemas/companyCity"
        phoneNumber:
          $ref: "#/components/schemas/addressPhone"
        zipCode:
          $ref: "#/components/schemas/zipCode"
        label:
          $ref: "#/components/schemas/addressLabel"
    extraFields:
      type: object
      properties:
        extraFields:
          type: array
          items:
            type: object
            properties:
              fieldName:
                type: string
                description: "The name of the extra field."
                example: "Company_Tax_Code"
              fieldValue:
                type: string
                description: "The value of the extra field as a string, dependent on the `fieldType`."
                example: "Code G"
    extraFields_FULL:
      type: array
      uniqueItems: true
      items:
        type: object
        properties:
          fieldName:
            type: string
            description: "The name of the Company extra field."
            example: "Company_Tax_Code"
          labelName:
            type: string
            description: "The display name of the Company extra field as visible to the customer."
            example: "Company Tax Code"
          dataType:
            type: string
            description: |-
              The type of data that can be added as the extra field’s value.
              
              | Value | Type |
              | --- | ---|
              | `0` | text |
              | `1` | multi-line text |
              | `2` | numbers |
              | `3` | dropdown |
            enum:
              - "0"
              - "1"
              - "2"
              - "3"
            example: "0"
          isRequired:
            type: string
            description: |-
              Indicates whether or not the extra field must be filled out in order to create a Company account.

              `0`=not required, `1`=required
            enum:
              - "0"
              - "1"
            example: "0"
    responseObject:
      type: object
      properties:
        message:
          type: string
    responsePagination:
      type: object
      properties:
        totalCount:
          type: number
          description: "The total number of items matching the query."
          example: 175
        offset:
          type: number
          description: "The starting offset for the current page of the response."
          example: 0
        limit:
          type: number
          description: "The maximum number of items allowed per page of the response."
          example: 10
  responses:
    genericResponse:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                default: 200
              message:
                type: string
              data:
                type: object
          examples:
            SUCCESS:
              value:
                code: 200
                message: SUCCESS
                data: {}
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: string
      description: "The unique ID for the customer account."
      example: "123"
    companyId:
      name: companyId
      in: path
      required: true
      schema:
        type: string
      description: "The unique numeric ID of the Company account."
      example: "123"
    addressId:
      name: addressId
      in: path
      required: true
      schema:
        type: string
      description: "The unique ID of the address."
      example: "123"
    storeHash:
      name: storeHash
      in: query
      required: true
      style: form
      schema:
        type: string
      description: "The unique alphanumeric store hash for the BigCommerce store."
      example: "abc123"
    paginationLimit:
      name: limit
      in: query
      schema:
        type: string
        default: "10"
      description: "The total number of items per page of the response."
      example: "10"
    paginationOffset:
      name: offset
      in: query
      schema:
        type: string
      description: "The number of items to skip before the current page of the response."
      example: "0"
    limitRequired:
      name: limit
      in: query
      required: true
      schema:
        type: string
      description: "The total number of items per page of the response."
      example: "10"
    offsetRequired:
      name: offset
      in: query
      required: true
      schema:
        type: string
      description: "The number of items to skip before the current page of the response."
      example: "0"
    shortRole:
      name: "role[]"
      in: query
      schema:
        type: string
        enum:
          - '0'
          - '1'
          - '2'
      description: |-
        The ID of the role assigned to the Company user account as defined at [Specifying User Role](/b2b-edition/apis/rest-storefront/company#specifying-user-role).
      example: '0'
    userRole:
      name: role
      in: query
      required: true
      schema:
        type: string
        enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
      description: |-
        The ID of the role assigned to the Company user account as given below.

        | Value | Code |
        | --- | --- |
        | 0 | Admin |
        | 1 | Senior Buyer |
        | 2 | Junior Buyer |
        | 3 | Super Admin |
        | 4 | Unknown |
      example: '0'
    queryString:
      name: q
      in: query
      schema:
        type: string
      description: "The search string for the request."
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      description: |-
        ### Authentication header
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        |`Authorization`|`Bearer {{B2B_JWT_TOKEN}}`| You can obtain this token using the steps described in the [REST Storefront API](/b2b-edition/docs/authentication#rest-storefront-api) section of the [Authentication for hosted storefront](https://developer.bigcommerce.com/b2b-edition/docs/authentication) article. |
