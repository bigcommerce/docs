openapi: '3.0.1'
info:
  version: Storefront
  title: Storefront Carts
  description: |-
    Manage cart operations and data on BigCommerce-hosted storefronts. To work with headless storefronts, use the [GraphQL Storefront API](/graphql-storefront/reference).
    
    The REST Storefront API uses [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers for authentication, and therefore has no required scopes. You do not need to send any BigCommerce-specific tokens with your requests to these endpoints.
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/docs/start/authentication#same-origin-cors-authentication).
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Cart
  - name: Cart Items
  - name: Cart Currency
paths:
  /carts:
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Include'
    get:
      tags:
        - Cart
      summary: Get a Cart
      description: |-
        Returns a *Cart*.
        
        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: getCart
      responses:
        '200':
          $ref: '#/components/responses/getCarts'
    post:
      tags:
        - Cart
      summary: Create a Cart
      description: |-
        Creates a *Cart*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: createCart
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestCart'
            examples:
              With Text Modifier:
                value:
                  lineItems:
                    - quantity: 2
                      productId: 230
                      optionSelections:
                        - optionId: 10
                          optionValue: Some Text Value
                  locale: en
              With Gift Wrapping:
                value:
                  lineItems:
                    - quantity: 2
                      productId: 230
                      optionSelections:
                        - optionId: 10
                          optionValue: Some Text Value
                      giftWrapping:
                          wrapTogether: true
                          wrapDetails:
                            - id: 1
                              message: "Happy Birthday" 
                  locale: en
        required: true
      responses:
        '200':
          $ref: '#/components/responses/postCarts'
      x-codegen-request-body-name: cartData
  '/carts/{cartId}':
    parameters:
      - $ref: '#/components/parameters/CartIdPath'
      - $ref: '#/components/parameters/Accept'
    delete:
      tags:
        - Cart
      summary: Delete a Cart
      description: |-
        Deletes a *Cart*. Once a *Cart* has been deleted it can not be recovered.

        
        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: deleteCart
      responses:
        '204':
          description: No Content
  '/carts/{cartId}/items':
    parameters:
      - $ref: '#/components/parameters/CartIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
      - $ref: '#/components/parameters/Include'
    post:
      tags:
        - Cart Items
      summary: Add Cart Line Items
      description: |-
        Adds a line items to the *Cart*.

        > #### Notes
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
        > * To prevent lost updates due to concurrent requests overriding changes made by others, it is recommended to enable optimistic concurrency control by including the `version` field in the request payload. If the provided version does not match the version on the server, a conflict error will be returned, which the client can handle accordingly.
      operationId: addCartLineItem
      responses:
        '200':
          $ref: '#/components/responses/postCartsItems'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineItemsRequest'
            examples:
              With Option Selections:
                value:
                  lineItems:
                    - quantity: 2
                      productId: 230
                      variantId: 124
                      optionSelections:
                        - optionId: 10
                          optionValue: 117
                        - optionId: 11
                          optionValue: 125
                  version: 1
              With Gift Wrapping:
                value:
                  lineItems:
                    - quantity: 2
                      productId: 230
                      variantId: 124
                      giftWrapping:
                          wrapTogether: true
                          wrapDetails:
                            - id: 1
                              message: "Happy Birthday"
                  version: 1
        description: ''
  '/carts/{cartId}/items/{itemId}':
    parameters:
      - $ref: '#/components/parameters/CartIdPath'
      - $ref: '#/components/parameters/ItemIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/Include'
    put:
      tags:
        - Cart Items
      summary: Update Cart Line Item
      description: |-
        Updates a *Cart* line item. Updates an existing, single line item quantity and the price of custom items in a cart.

        If a modified product or variant needs to be changed or updated, you can remove and re-add the product to the cart with the correct variants using the [Delete Cart Line Item](/docs/rest-storefront/carts/cart-items#delete-cart-line-item) and the [Add Cart Line Items](/docs/rest-storefront/carts/cart-items#add-cart-line-items) endpoints. You can also use carts mutations that are part of the [GraphQL Storefront API](/docs/storefront/cart-checkout/guide/graphql-storefront).


        > #### Notes
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint. 
        > * To prevent lost updates due to concurrent requests overriding changes made by others, it is recommended to enable optimistic concurrency control by including the `version` field in the request payload. If the provided version does not match the version on the server, a conflict error will be returned, which the client can handle accordingly.
      operationId: updateCartLineItem
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLineItemPut'
            examples:
              Variant Item:
                value:
                  lineItem:
                    productId: 229
                    variantId: 191
                    quantity: 10
                  locale: en
                  version: 1
              Custom Item:
                value:
                  lineItem:
                    productId: 118
                    variantId: 140
                    quantity: 10
                    optionSelections:
                      - optionId: 125
                        optionValue: 127
                  locale: en
                  version: 1
              With Gift Wrapping:
                value:
                  lineItem:
                    quantity: 2
                    productId: 230
                    variantId: 124
                    giftWrapping:
                        wrapTogether: true
                        wrapDetails:
                          - id: 1
                            message: "Happy Birthday"
                  version: 1
              With null Gift Wrapping (will delete current gift wrapping):
                value:
                  lineItem:
                    quantity: 2
                    productId: 230
                    variantId: 124
                    giftWrapping: null
                  version: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/putCartsItems'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
      x-codegen-request-body-name: lineItem
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLineItemDelete'
      tags:
        - Cart Items
      summary: Delete Cart Line Item
      description: |-
        Deletes a *Cart* line item.

        Removing the last `line_item` in the *Cart* deletes the *Cart*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
        > * To prevent lost updates due to concurrent requests overriding changes made by others, it is recommended to enable optimistic concurrency control by including the `version` field in the request payload. If the provided version does not match the version on the server, a conflict error will be returned, which the client can handle accordingly.
      operationId: deleteCartLineItem
      responses:
        '200':
          $ref: '#/components/responses/deleteCartsItems'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
  '/carts/{cartId}/currency':
    parameters:
      - $ref: '#/components/parameters/CartIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      tags:
        - Cart Currency
      summary: Update Cart Currency
      description: |-
        Update currency of the *Cart*. 
        Promotions and gift certificates that don't apply to the new currency will be removed from your cart.
        You cannot update the cart currency if the draft order cart or the cart contains a manual discount.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
      operationId: updateCartCurrency
      parameters:
        - $ref: '#/components/parameters/Include'
      responses:
        '200':
          $ref: '#/components/responses/getCarts'
        '400':
          description: Bad request. Authentication Required.
        '404':
          description: Currency not found
        '422':
          description: Missing or invalid data
      requestBody:
        content:
          application/json:
            schema:
              title: Cart Currency Request Data
              required:
                - currencyCode
              type: object
              properties:
                currencyCode:
                  type: string
                  description: currency code
              x-internal: false
        description: ''
components:
  schemas:
    responseCartCoupons:
      title: Response Cart Coupons
      type: array
      items:
        required:
          - code
        type: object
        properties:
          code:
            type: string
            description: The coupon code.
          couponType:
            type: integer
            description: |-
              |Type `int`|Type Name|
              |-|-|
              |`0`|`per_item_discount`|
              |`1`|`percentage_discount`|
              |`2`|`per_total_discount`|
              |`3`|`shipping_discount`|
              |`4`|`free_shipping`|
              |`5`|`promotion`|
          discountedAmount:
            type: number
            description: The discounted amount applied within a given context.
            format: float
          displayName:
            type: string
            description: The coupon name displayed on the storefront.
          id:
            type: string
            description: The coupon ID.
      x-internal: false
    responseCartDiscounts:
      title: responseCartDiscounts
      type: array
      items:
        type: object
        properties:
          discountedAmount:
            type: number
            description: The discounted amount applied within a given context.
            format: float
          id:
            type: string
            description: ID of the applied discount.
      x-internal: false
    responseCart:
      description: Cart object used in REST Storefront API cart responses.
      title: Cart Read
      type: object
      properties:
        id:
          type: string
          description: 'Cart ID, provided after creating a cart with a POST.'
          format: UUID
        customerId:
          type: integer
          description: ID of the customer to which the cart belongs.
        email:
          type: string
          description: The cart's email. This is the same email that is used in the billing address
        currency:
          $ref: '#/components/schemas/responseCartCurrency'
        isTaxIncluded:
          type: boolean
          description: Whether this item is taxable.
        baseAmount:
          type: number
          description: 'Cost of cart’s contents, before applying discounts.'
        discountAmount:
          type: number
          description: Order based discounted amount only - Coupon discounts and product based discounts are excluded.
          format: float
        cartAmount:
          type: number
          description: 'Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes (where applicable).'
        coupons:
          $ref: '#/components/schemas/responseCartCoupons'
        discounts:
          $ref: '#/components/schemas/responseCartDiscounts'
        lineItems:
          $ref: '#/components/schemas/responseCartLineItems'
        createdTime:
          type: string
          description: Time when the cart was created.
          format: ISO-8601
        updatedTime:
          type: string
          description: Time when the cart was last updated.
          format: ISO-8601
        locale:
          type: string
          description: Locale of the cart.
        version:
          type: integer
          description: The current version of the cart increments with each successful update. You can use it to enable optimistic concurrency control for subsequent updates.
          example: 1
      x-internal: false
    requestCart:
      title: Create Cart Request Object
      description: Cart object used in create cart requests.
      anyOf:
        - type: object
          properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
            locale:
              type: string
          required:
            - lineItems
        - type: object
          properties:
            giftCertificates:
              type: array
              items:
                $ref: '#/components/schemas/requestLineItemGiftCertificate'
            locale:
              type: string
          required:
            - giftCertificates
        - type: object
          properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
            giftCertificates:
              type: array
              items:
                $ref: '#/components/schemas/requestLineItemGiftCertificate'
            locale:
              type: string
          required:
            - lineItems
            - giftCertificates
    responseCartLineItemsPhysicalItemGiftWrapping:
      title: Gift Wrapping
      type: object
      properties:
        amount:
          type: number
          description: Gift-wrapping price per product.
          format: float
        message:
          type: string
        name:
          type: string
          description: Name of the gift-wrapping option.
      nullable: true
      x-internal: false
    requestLineItemGiftCertificate:
      title: Line Item Gift Certificate Request Data
      required:
        - amount
        - name
        - quantity
        - recipient
        - sender
        - theme
      type: object
      properties:
        amount:
          maximum: 1000
          minimum: 1
          type: number
          description: Gift-certificate amount.
        message:
          type: string
          description: 'Message shown to recipient, as provided by sender.'
        name:
          type: string
          description: Name assigned to this gift-certificate line item.
        quantity:
          minimum: 1
          type: integer
          description: Quantity of this item.
        recipient:
          $ref: '#/components/schemas/requestLineItemGiftCertificateRecipient'
        sender:
          $ref: '#/components/schemas/requestLineItemGiftCertificateSender'
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
      x-internal: false
    requestPostOrPutGiftWrapping:
      title: Gift Wrapping Request Data
      required:
            - wrapTogether
            - wrapDetails
      type: object
      nullable: true
      description: if passing null, it will remove the current gift wrapping for the item
      properties:
        wrapTogether:
          type: boolean
          description: Boolean value that specifies whether items whether items should be wrapped together or wrapped individually.
          example: true
        wrapDetails:
          type: array
          description: |-
            Details for the gift wrapping option selected. This can be specified for each line item or together based on wrapTogether value.
            If wrapTogether is false, each element in the wrapDetails array determines each item's specific wrapping. 
            (e.g if this line item has 6 quantity, you can pass at maximum 6 elements for the array to spefified each one's wrapping)  
            If wrapTogether is true, we will only use 1st element in the wrapDetails array to determine what to be wrapped
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: integer
                description: Identifier of the gift wrapping option selected.
                example: 0
              message:
                type: string
                description: Custom gift message.
                example: Happy Birthday
    LineItemsRequest:
      title: requestLineItems
      anyOf:
        - type: object
          properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
            version:
              type: integer
              description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
              example: 1
          required:
            - lineItems
        - type: object
          properties:
            giftCertificates:
              type: array
              items:
                $ref: '#/components/schemas/requestLineItemGiftCertificate'
            version:
              type: integer
              description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
              example: 1
          required:
            - giftCertificates
        - type: object
          properties:
            lineItems:
              type: array
              items:
                $ref: '#/components/schemas/requestCartPostLineItem'
            giftCertificates:
              type: array
              items:
                $ref: '#/components/schemas/requestLineItemGiftCertificate'
            version:
              type: integer
              description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
              example: 1
          required:
            - lineItems
            - giftCertificates
      description: Cart object used in add items requests.
      x-internal: false
    requestLineItemPut:
      title: requestLineItemPut
      anyOf:
        - type: object
          properties:
            lineItem:
              $ref: '#/components/schemas/requestCartPostLineItem'
            version:
              type: integer
              description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
              example: 1
          required:
            - lineItem
          title: Line item
        - type: object
          properties:
            giftCertificate:
              $ref: '#/components/schemas/requestLineItemGiftCertificate'
            version:
              type: integer
              description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
              example: 1
          required:
            - giftCertificates
          title: Gift certificate item
        - type: object
          properties:
            lineItem:
              $ref: '#/components/schemas/requestCartPostLineItem'
            giftCertificate:
              $ref: '#/components/schemas/requestLineItemGiftCertificate'
            version:
              type: integer
              description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
              example: 1
          required:
            - lineItem
            - giftCertificates
          title: line & gift certificate items
      description: ''
    requestLineItemDelete:
      type: object
      properties:
        version:
          type: integer
          description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
          example: 1
    responseCartCurrency:
      title: Currency
      type: object
      properties:
        code:
          type: string
          description: 'ISO-4217 currency code. (See: https://www.iso.org/iso-4217-currency-codes.html.)'
          format: ISO-4217
        decimalPlaces:
          type: integer
          description: The number of decimal places that prices have when you use the currency.
        name:
          type: string
          description: The name for the currency that the merchant entered in the control panel.
          example: US Dollar
        symbol:
          type: string
          description: The currency symbol displayed on the storefront.
          example: $
      description: This will always be the same between cart and checkout.
      x-go-gen-location: models
      x-internal: false
    responseCartLineItems:
      title: Response Line Items Object
      type: object
      properties:
        customItems:
          type: array
          items:
            $ref: '#/components/schemas/responseCartLineItemsCustomItems'
        digitalItems:
          type: array
          description: Array of `ItemDigital` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItems'
        giftCertificates:
          type: array
          description: Array of `ItemGiftCertificate` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsGiftCertificates'
        physicalItems:
          type: array
          description: Array of `ItemPhysical` objects.
          items:
            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItems'
      x-internal: false
    responseCartLineItemsCustomItems:
      title: Item Custom
      type: object
      properties:
        extendedListPrice:
          type: integer
          readOnly: true
        id:
          type: string
          description: ID of the custom item
          readOnly: true
          example: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
        listPrice:
          type: integer
          description: Price of the item. With or without tax depending on your stores set up.
          readOnly: true
          example: 10
        name:
          type: string
          description: Name of the custom item.
          readOnly: true
          example: Custom Item Name
        quantity:
          type: integer
          readOnly: true
          example: 1
        sku:
          type: string
          description: SKU of the custom item.
          readOnly: true
          example: SM-456
      description: |-
        **Read Only**

        This will return in the Cart Response if the Cart was created using the [REST Management API](/docs/rest-management/carts). A custom item can only be added to a cart using the REST Management API.
      x-internal: false
    responseCartLineItemsDigitalItems:
      title: Item Digital
      allOf:
        - $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0'
      x-internal: false
    responseCartLineItemsDigitalItemsAllOf0:
      title: Base Item
      required:
        - quantity
      type: object
      properties:
        options:
          type: array
          description: The list of selected options for this product.
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0OptionsItems'
        brand:
          type: string
          description: The products brand
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: float
        discounts:
          type: array
          description: 'List of discounts applied to this item, as an array of AppliedDiscount objects.'
          items:
            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0DiscountsItems'
        extendedListPrice:
          type: number
          description: Item's list price multiplied by the quantity.
        extendedSalePrice:
          type: number
          description: Item's sale price multiplied by the quantity.
        id:
          type: string
          description: The line-item ID.
          example: '4'
        imageUrl:
          type: string
          description: 'URL of an image of this item, accessible on the internet.'
          format: uri
        isMutable:
          type: boolean
          description: Whether or not you can change or remove the item from the cart. Items that are immutable include those added automatically by promotions.
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        listPrice:
          type: number
          description: 'The net item price before discounts and coupons. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
        originalPrice:
          type: number
          description: An item’s original price is the same as the product default price in the admin panel.
        name:
          type: string
          description: The item's product name.
        parentId:
          type: string
          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'
          example: '6'
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        salePrice:
          type: number
          description: Item's price after all discounts are applied. (The final price before tax calculation.)
        sku:
          type: string
          description: SKU of the variant.
        type:
          type: string
          description: The type of line item.
          enum:
            - digital
        url:
          type: string
          description: The product URL.
          format: uri
        variantId:
          type: number
          description: ID of the variant.
          example: 7
      x-internal: false
    responseCartLineItemsDigitalItemsAllOf0DiscountsItems:
      title: Applied Discount
      type: object
      properties:
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: float
        id:
          type: number
          description: ID of the applied discount.
      x-internal: false
    responseCartLineItemsDigitalItemsAllOf0OptionsItems:
      title: Product Option
      type: object
      properties:
        name:
          type: string
          description: 'The product option name. For example, Color or Size'
        nameId:
          type: number
          description: 'The product option identifier. It is the same as the `optionId` used in the request. '
          example: 125
        value:
          type: string
          description: 'The product option value. For example, Red or Medium'
        valueId:
          type: number
          description: The product option value identifier. It is the same as the `optionValue` used in the request.
          example: 127
      x-internal: false
    responseCartLineItemsGiftCertificates:
      title: Item Gift Certificate
      required:
        - amount
        - recipient
        - sender
        - theme
      type: object
      properties:
        amount:
          type: number
          description: 'Value must be between 1.00 and 1,000.00 in the storeʼs default currency.'
        id:
          type: string
          description: ID of this gift certificate.
        taxable:
          type: boolean
          description: Whether or not the gift certificate is taxable.
        message:
          type: string
          description: Message that will be sent to the gift certificate's recipient. Limited to 200 characters.
        name:
          type: string
          description: GiftCertificate-provided name that will appear in the control panel.
        recipient:
          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesRecipient'
        sender:
          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesSender'
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
        type:
          type: string
          description: The type of line item.
          enum:
            - giftCertificate
      x-internal: false
    responseCartLineItemsGiftCertificatesRecipient:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
    responseCartLineItemsGiftCertificatesSender:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
    responseCartLineItemsItemsPhysicalItemsItems:
      title: Item Physical
      allOf:
        - $ref: '#/components/schemas/responseCartBaseItem'
        - $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf1'
      x-internal: false
    responseCartBaseItem:
      title: Base Item
      type: object
      properties:
        options:
          type: array
          description: The list of selected options for this product.
          items:
            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems'
        brand:
          type: string
          description: The products brand
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: float
        discounts:
          $ref: '#/components/schemas/responseCartDiscounts'
        extendedListPrice:
          type: number
          description: Item's list price multiplied by the quantity.
        extendedSalePrice:
          type: number
          description: Item's sale price multiplied by the quantity.
        id:
          type: string
          description: The line-item ID.
          example: '4'
        imageUrl:
          type: string
          description: 'URL of an image of this item, accessible on the internet.'
          format: uri
        isMutable:
          type: boolean
          description: Whether or not you can change or remove the item from the cart. Items that are immutable include those added automatically by promotions.
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        listPrice:
          type: number
          description: 'The net item price before discounts and coupons. BigCommerce derives an item’s list price from the product default price or, if applicable, the sale price configured in the admin panel.'
        originalPrice:
          type: number
          description: An item’s original price is the same as the product default price in the admin panel.
        name:
          type: string
          description: The item's product name.
        parentId:
          type: number
          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'
          example: 6
        productId:
          type: number
          description: ID of the product.
        quantity:
          type: number
          description: Quantity of this item.
        salePrice:
          type: number
          description: Item's price after all discounts are applied. (The final price before tax calculation.)
        sku:
          type: string
          description: SKU of the variant.
        type:
          type: string
          description: The type of line item.
          enum:
            - physical
        url:
          type: string
          description: The product URL.
          format: uri
        variantId:
          type: number
          description: ID of the variant.
          example: 7
      required:
        - quantity
      x-internal: false
    responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems:
      title: Product Option
      type: object
      properties:
        name:
          type: string
          description: 'The product option name. For example, Color or Size'
        nameId:
          type: number
          description: The product option identifier. It is the same as the `optionId` used in the request.
          example: 125
        value:
          type: string
          description: 'The product option value. For example, Red or Medium'
        valueId:
          type: number
          description: The product option value identifier. It is the same as the `optionValue` used in the request.
          example: 127
      x-internal: false
    responseCartLineItemsItemsPhysicalItemsItemsAllOf1:
      type: object
      properties:
        giftWrapping:
          $ref: '#/components/schemas/responseCartLineItemsPhysicalItemGiftWrapping'
        isShippingRequired:
          type: boolean
          description: Whether this item requires shipping to a physical address.
      x-internal: false
    requestCartPostLineItem:
      title: Line Item Request Data
      anyOf:
        - type: object
          properties:
            productId:
              type: number
              description: ID of the product.
            optionSelections:
              type: array
              items:
                type: object
                properties:
                  optionId: 
                    type: integer
                    description: Modifier option ID.
                    example: 2
                  optionValue:
                    oneOf:
                      - type: string
                      - type: integer
                    description: Modifier option value.
            quantity:
              type: number
              description: Quantity of this item.
            giftWrapping:
              $ref: '#/components/schemas/requestPostOrPutGiftWrapping'
          required:
            - productId
            - quantity
          title: Simple product
        - type: object
          properties:
            productId:
              type: number
              description: ID of the product.
            quantity:
              type: number
              description: Quantity of this item.
            variantId:
              type: number
              description: ID of the variant.
            optionSelections:
              type: array
              items:
                type: object
                properties:
                  optionId: 
                    type: integer
                    description: Modifier option ID.
                    example: 2
                  optionValue:
                    oneOf:
                      - type: string
                      - type: integer
                    description: Modifier option value.
            giftWrapping:
              $ref: '#/components/schemas/requestPostOrPutGiftWrapping'
          required:
            - productId
            - quantity
          title: Product with a variant    
      x-examples:
        example-1:
          productId: 0
          quantity: 0
      x-internal: false
    requestLineItemGiftCertificateRecipient:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
    requestLineItemGiftCertificateSender:
      title: Contact Entity
      type: object
      properties:
        email:
          type: string
          description: Contact's email address.
          format: email
        name:
          type: string
          description: Contact's name.
      x-internal: false
  responses:
    postCarts:
      description: Post Carts Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                  decimalPlaces: 2
                  name: US Dollar
                  symbol: $
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    displayName: $1.00 off total order
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems: []
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: digital
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      taxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                      type: giftCertificate
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: physical
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping:
                        amount: 0
                        message: string
                        name: string
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    postCartsItems:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            example-1:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                  decimalPlaces: 2
                  name: US Dollar
                  symbol: $
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    displayName: $1.00 off the order total
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems: []
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: digital
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      taxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                      type: giftCertificate
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      listPrice: 0
                      originalPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: physical
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping:
                        amount: 0
                        message: string
                        name: string
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    putCartsItems:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                  decimalPlaces: 2
                  name: US Dollar
                  symbol: $
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    displayName: $1.00 off the order total
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems: []
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: digital
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      taxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                      type: giftCertificate
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: physical
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping:
                        amount: 0
                        message: string
                        name: string
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    getCarts:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                - id: 770ded29-da45-4ee0-abc6-883e83c0e5ed
                  customerId: 0
                  email: ''
                  currency:
                    name: US Dollars
                    code: USD
                    symbol: $
                    decimalPlaces: 2
                  isTaxIncluded: false
                  baseAmount: 246
                  discountAmount: 0
                  cartAmount: 221.4
                  coupons: []
                  discounts:
                    - id: a83dea21-d757-47a2-a06a-73cf6a983746
                      discountedAmount: 24.6
                  lineItems:
                    physicalItems:
                      - id: a83dea21-d757-47a2-a06a-73cf6a983746
                        parentId: 6
                        variantId: 193
                        productId: 230
                        sku: sku123-VA
                        name: options test
                        url: 'https://store.example.com/options-test/'
                        quantity: 2
                        brand: BigCommerce
                        isTaxable: true
                        imageUrl: 'https://cdn11.bigcommerce.com/r-3b68d717e18793df0b51c71e16bc24664ad18b7c/themes/ClassicNext/images/ProductDefault.gif'
                        discounts:
                          - id: string
                            discountedAmount: 24.6
                        discountAmount: 24.6
                        couponAmount: 0
                        originalPrice: 130
                        listPrice: 123
                        salePrice: 110.7
                        extendedListPrice: 246
                        extendedSalePrice: 221.4
                        isShippingRequired: true
                        type: physical
                        isMutable: true
                        giftWrapping: null
                    digitalItems: []
                    giftCertificates: []
                    customItems: []
                  createdTime: '2021-03-04T14:17:50+00:00'
                  updatedTime: '2021-03-04T14:17:50+00:00'
                  locale: en
                  version: 1
    deleteCartsItems:
      description: 'NOTE: Discounted line items are re-evaluated on cart actions and may be automatically added back to your cart with a new line item ID to satisfy promotional requirements.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseCart'
          examples:
            Example:
              value:
                id: string
                customerId: 0
                email: string
                currency:
                  code: string
                  decimalPlaces: 2
                  name: US Dollar
                  symbol: $
                isTaxIncluded: true
                baseAmount: 0
                discountAmount: 0
                cartAmount: 0
                coupons:
                  - code: string
                    couponType: 0
                    discountedAmount: 0
                    displayName: $1.00 off the order total
                    id: string
                discounts:
                  - discountedAmount: 0
                    id: string
                lineItems:
                  customItems: []
                  digitalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: 0
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: '6'
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: digital
                      url: 'http://example.com'
                      variantId: 7
                  giftCertificates:
                    - amount: 0
                      id: string
                      taxable: true
                      message: string
                      name: string
                      recipient:
                        email: user@example.com
                        name: string
                      sender:
                        email: user@example.com
                        name: string
                      theme: string
                      type: giftCertificate
                  physicalItems:
                    - options:
                        - name: string
                          nameId: 0
                          value: string
                          valueId: 0
                      brand: string
                      couponAmount: 0
                      discountAmount: 0
                      discounts:
                        - discountedAmount: 0
                          id: string
                      extendedListPrice: 0
                      extendedSalePrice: 0
                      id: '4'
                      imageUrl: 'http://example.com'
                      isMutable: true
                      isTaxable: true
                      originalPrice: 0
                      listPrice: 0
                      name: string
                      parentId: 6
                      productId: 0
                      quantity: 0
                      salePrice: 0
                      sku: string
                      type: physical
                      url: 'http://example.com'
                      variantId: 7
                      giftWrapping: null
                      isShippingRequired: true
                createdTime: string
                updatedTime: string
                locale: string
    CartConflictErrorResponse:
      description: 'Cart conflict'
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              title:
                type: string
              type:
                type: string
          example:
            status: 409
            title: The request cannot be processed due to a possible conflict. Please review the changes and try again.
            type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    CartIdPath:
      name: cartId
      in: path
      description: This cartʼs unique ID.
      required: true
      schema:
        type: string
        format: uuid
    ItemIdPath:
      name: itemId
      in: path
      description: The ID of the subject item.
      required: true
      schema:
        type: string
        format: number
    Include:
      name: include
      in: query
      description: |-
        To return product options add one of the following include:

        `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.

        `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.

        `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - lineItems.physicalItems.options
            - lineItems.digitalItems.options
  examples: {}

