openapi: 3.0.3
info:
  title: Carts
  version: ''
  description: |-
    Create a cart using BigCommerce cart logic.

    Manage settings related to carts.
servers:
  - url: 'https://api.bigcommerce.com'
security:
  - X-Auth-Token: []
tags:
  - name: Cart Items
  - name: Cart Redirect URLs
  - name: Carts Settings
paths:
  '/stores/{store_hash}/v3/carts':
    post:
      description: |-
        Creates a **Cart**. 

        **Required Fields**

        |Field|Details|
        |-|-|
        |`line_item`|| 
        |`custom_items`|Only required if adding a custom item to the cart.|
        |`gift_certificates`|Only required if adding a gift certificate to the cart.|

        **Usage Notes**

        * A **cart** `id` (UUID) is returned in the response.
        * A **cart** `id` is the same as a **checkout** `id`.
        * A cart can be created by adding an existing **catalog item** or a **custom item**.
        * Carts are valid for **30 days** from the **last modification** (this includes creating the cart or editing the cart).
        * If a product has modifiers, omit the `variant_id` and instead use the `option_selections` array to describe both the **variant** and the **modifier** selections.
        * The format and data type of a cart's `option_value` is defined by the `value_data` object of a product's [variant option value](/api-reference/store-management/catalog/product-variant-option-values/getoptionvaluebyid), [modifier value](/api-reference/store-management/catalog/product-modifier-values/getmodifiervaluebyid), or a combination of both.
        * Redirect URLs can only be generated from carts created using the **Server-to-Server Carts API**. 
        * To get cart `redirect_urls` in the response, append the following query parameter to the request URL: `include=redirect_urls`.
        * To restore a cart that was created by a shopper or via the Storefront Cart API, first recreate the cart using the Server to Server Cart API.
        * To get cart `promotions` in the response, append the following query parameter to the request URL: `include=promotions.banners`.
      parameters:
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a Cart. This can be used during the /POST request for Carts.
            * `line_items.physical_items.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.
            * `line_items.digital_items.options`: The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.
            * `promotions.banners`: Returns a list of eligible banners.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - redirect_urls
                - line_items.physical_items.options
                - line_items.digital_items.options
                - promotions.banners
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartCreatePostData'
        description: |-
          **Examples:**

          1. Creating a cart by adding a simple product (a product without option selections).
          2. Creating a cart with a variant. This works when a product can be specified purely by a variant, without any other required options.
          3. Creating a cart using a date option. The API supports timestamps, “option_value”: 1743570000, and dates as an object literal, “option_value”: {“day”:”01”, “month”:”02”, “year”:”2020”}.
          4. Creating a cart with a variant, a checkbox, and a picklist modifier added.
          5. Creating a cart using a custom item.
        required: true
        x-examples:
          Simple Product: |-
            {
              "line_items": [
                {
                  "quantity": 5,
                  "product_id": 191
                }
              ]
            }
          Create a Cart with a Variant: |-
            {
                "line_items":[
                    {
                        "quantity": 2,
                        "product_id": 107,
                        "variant_id": 185
                    }
                ]
            }
          Create a Cart using Date Option: |-
            {
              "line_items": [
                {
                  "quantity": 5,
                  "product_id": 191,
                  "variant_id": 185,
                  "option_selections": [
                    {
                      "option_id": 440,
                      "option_value": 1743570000
                    }
                  ]
                }
              ]
            } 
          With a Variant of Checkbox and Picklist: |-
            {
              "line_items": [
                {
                  "quantity": 1,
                  "product_id": 77,
                  "option_selections": [
                    {
                      "option_id": 120,
                      "option_value": 69
                    },
                    {
                      "option_id": 121,
                      "option_value": 10
                    },

                    {
                      "option_id": 124,
                      "option_value": 106
                    },
                    {
                      "option_id": 122,
                      "option_value": "Hello"
                    },
                    {
                      "option_id": 123, 
                      "option_value": 104
                    }
                  ]
                }
              ]
            } 
          Custom Item:
            custom_items:
              - sku: abc-123
                name: Custom Product
                quantity: 1
                list_price: 10
          Options Selections:
            line_items:
              - quantity: 5
                product_id: 118
                variant_id: 115
                option_selections:
                  - option_id: 121
                    option_value: 10
                    name: Size
                    name_id: 125
                    value: Small
                    value_id: 125
      tags:
        - Cart
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Create a Cart
      operationId: createACart
    parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
  '/stores/{store_hash}/v3/carts/{cartId}/items':
    post:
      description: |-
        Adds line item to the *Cart*.

        **Usage Notes**

        To add a custom item use `custom_items`. 

        If a product has modifiers, omit the `variant_id` and instead use the `option_selections` array to describe both the **variant** and the **modifier** selections.
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: UUID
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a Cart. This can be used during the /POST request for Carts.
            * `line_items.physical_items.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.
            * `line_items.digital_items.options`: The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.
            * `promotions.banners`: Returns a list of eligible banners.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - redirect_urls
                - line_items.physical_items.options
                - line_items.digital_items.options
                - promotions.banners
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart_Line_Item_Update_Post'
        required: true
        x-examples:
          application/json:
            line_items:
              - quantity: 2
                product_id: 77
                list_price: 12.5
                option_selections:
                  - option_id: 8
                    option_value: 'Yes'
            gift_certificates:
              - name: Happy Birthday
                theme: Birthday
                amount: 50
                quantity: 1
                sender:
                  name: Jane Does
                  email: janedoe@example.com
                recipient:
                  name: Jane Does
                  email: janedoe@example.com
                message: Happy Birthday Jane!
          Custom Item: |-
            {
              "custom_items": [
                {
                  "sku": "abc-123",
                  "name": "Custom Product",
                  "quantity": 1,
                  "list_price": 10
                }
              ]
            }
      tags:
        - Cart Items
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Add Cart Line Items
      operationId: addCartLineItem
    parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: cartId
        in: path
        required: true
        schema:
          type: string
  '/stores/{store_hash}/v3/carts/{cartId}/redirect_urls':
    post:
      description: |-
        Creates a **Cart** redirect URL for redirecting a shopper to an already created cart using the `cartId`.

        **Usage Notes**

        * Redirect URLs can also be created via **Create a Cart** requests by appending `include=redirect_urls`.
        * A **Carts** redirect URLs may only be used once. 
        * Once a redirect URL has been visited, it will be invalidated and cannot be used again. 
        * If your application requires URLs to be visited more than once, consider generating a fresh one each time you need to restore a cart, and redirecting to the URL from your own application.
        * Redirect URLs can be generated only from carts created using the Server to Server Cart API. 
        * To restore a cart that was created on the storefront, either by a shopper or the Storefront Cart API, first recreate the cart using the Server to Server Cart API.
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: UUID
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      tags:
        - Cart Redirect URLs
      responses:
        '201':
          $ref: '#/components/responses/CartRedirectResponse'
      summary: Create Cart Redirect URL
      operationId: createCartRedirectURL
    parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: cartId
        in: path
        required: true
        schema:
          type: string
  '/stores/{store_hash}/v3/carts/{cartId}/items/{itemId}':
    put:
      description: |-
        Updates an existing, single line item in the *Cart*. 

        **Notes**

        Currently, only updating `list_price` and `quantity` are supported. Updating a product's `list_price` will make that item ineligible for V3 product level promotions. 

        If the product has modifiers, omit the `variant_id` and instead use the `option_selections` array to describe both the **variant** and the **modifier** selections.

        If a variant needs to be changed or updated, the product will need to be removed and re-added to the cart with the correct variants using the Add Cart Line Items endpoint.

        `custom_items` cannot be updated via the API at this time. To update your cart, add a new updated custom item and delete the outdated one. If your cart contains only one line item, perform the add operation before the delete operation.

        Deleting all line items from the cart will invalidate the cart. 
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: UUID
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: number
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a Cart. This can be used during the /POST request for Carts.
            * `line_items.physical_items.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.
            * `line_items.digital_items.options`: The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.
            * `promotions.banners`: Returns a list of eligible banners.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - redirect_urls
                - line_items.physical_items.options
                - line_items.digital_items.options
                - promotions.banners
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart_Line_Item_Update_Put'
        required: true
        x-examples:
          application/json:
            line_item:
              quantity: 2
              product_id: 152
              list_price: 12.5
      tags:
        - Cart Items
      responses:
        '200':
          $ref: '#/components/responses/CartResponse'
      summary: Update Cart Line Item
      operationId: updateCartLineItem
    delete:
      description: |-
        Deletes a *Cart* line item. 

        **Notes**

        Removing the last `line_item` in the *Cart* deletes the *Cart*.
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: UUID
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: number
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a Cart. This can be used during the /POST request for Carts.
            * `line_items.physical_items.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.
            * `line_items.digital_items.options`: The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.
            * `promotions.banners`: Returns a list of eligible banners.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - redirect_urls
                - line_items.physical_items.options
                - line_items.digital_items.options
                - promotions.banners
      tags:
        - Cart Items
      responses:
        '200':
          description: 'NOTE: Discounted line items are re-evaluated on cart actions and may be automatically added back to your cart with a new line item ID to satisfy promotional requirements.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart_Full'
              examples:
                response:
                  value:
                    data:
                      id: bc218c65-7a32-4ab7-8082-68730c074d02
                      customer_id: 11
                      email: ''
                      currency:
                        code: USD
                      tax_included: false
                      base_amount: 189.75
                      discount_amount: 0
                      cart_amount: 212.81
                      coupons: []
                      line_items:
                        physical_items:
                          - id: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                            parent_id: {}
                            variant_id: 362
                            product_id: 191
                            sku: ''
                            name: Openhouse No. 3
                            url: 'http://id30h7ohwf.mybigcommerce.com/all/openhouse-no-3/'
                            quantity: 5
                            taxable: true
                            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2'
                            discounts: []
                            coupons: []
                            discount_amount: 0
                            coupon_amount: 0
                            list_price: 27.95
                            sale_price: 27.95
                            extended_list_price: 139.75
                            extended_sale_price: 139.75
                            is_require_shipping: true
                            options:
                              - name: Add a $5 Donation
                                nameId: 82
                                value: 'No'
                                valueId: 186
                        digital_items: []
                        custom_items:
                          - extended_list_price: 5.99
                            id: 78239b69-1952-4c35-9d58-ea30158b4e39
                            list_price: 5.99
                            name: Rope Toy
                            quantity: 1
                            sku: ROPE-TOY
                        gift_certificates:
                          - id: 6e38bbc2-8873-472c-a452-8bd4aaea5d3a
                            name: Happy Birthday
                            theme: Birthday
                            amount: 50
                            quantity: 1
                            taxable: false
                            sender:
                              name: Jane Does
                              email: janedoe@example.com
                            recipient:
                              name: Jane Does
                              email: janedoe@example.com
                            message: Happy Birthday Jane!
                      created_time: '2018-09-17T14:27:39.000Z'
                      updated_time: '2018-09-17T14:53:40.000Z'
                    meta: {}
        '204':
          description: 'If the action’s result is an empty cart, the cart gets automatically deleted.'
      summary: Delete Cart Line Item
      operationId: deleteCartLineItem
    parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: cartId
        in: path
        required: true
        schema:
          type: string
      - name: itemId
        in: path
        required: true
        schema:
          type: string
  '/stores/{store_hash}/v3/carts/{cartId}':
    get:
      description: Returns a stores *Cart*.
      parameters:
        - name: cartId
          in: path
          required: true
          description: The identifier of a specific cart.
          schema:
            type: string
            format: UUID
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a Cart. This can be used during the /POST request for Carts.
            * `line_items.physical_items.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.
            * `line_items.digital_items.options`: The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.
            * `promotions.banners`: Returns a list of eligible banners.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - redirect_urls
                - line_items.physical_items.options
                - line_items.digital_items.options
                - promotions.banners
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      tags:
        - Cart
      responses:
        '200':
          $ref: '#/components/responses/CartResponse'
        '404':
          description: Cart not found.
      summary: Get a Cart
      operationId: getACart
    put:
      description: |-
        Updates a *Carts* `customer_id`.

        **Notes**

        Changing the *Cart* `customer_id` will remove any promotions or shipping on the *Cart*. These are tied to the customer depending on cart conditions and any customer groups. 
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
            format: UUID
        - name: include
          in: query
          description: |-
            * `redirect_urls`: Create a direct link to a Cart. This can be used during the /POST request for Carts.
            * `line_items.physical_items.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.
            * `line_items.digital_items.options`: The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.
            * `promotions.banners`: Returns a list of eligible banners.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - redirect_urls
                - line_items.physical_items.options
                - line_items.digital_items.options
                - promotions.banners
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartUpdatePutRequestData'
        required: true
        x-examples:
          application/json:
            customer_id: 5
      tags:
        - Cart
      responses:
        '201':
          $ref: '#/components/responses/CartResponse'
      summary: Update Customer ID
      operationId: updateACart
    delete:
      description: Deletes a *Cart*. Once a *Cart* has been deleted it can not be recovered.
      parameters:
        - name: cartId
          in: path
          required: true
          description: This cart's unique ID.
          schema:
            type: string
            format: UUID
        - in: header
          name: Accept
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      tags:
        - Cart
      responses:
        '204':
          description: ''
      summary: Delete a Cart
      operationId: deleteACart
    parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: cartId
        in: path
        required: true
        schema:
          type: string
  '/stores/{store_hash}/v3/carts/settings':
    get:
      summary: Get Global Cart Settings
      description: Returns the global cart settings of a store.
      operationId: getGlobalCartSettings
      tags:
        - Carts Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update Global Cart Settings
      description: Update the global cart settings of a store.
      tags:
        - Carts Settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCartSettingsResponse'
        '400':
          description: Bad Request. Input is invalid.
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    status: 400
                    title: Input is invalid
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    detail: Syntax error
                properties:
                  status:
                    type: number
                  title:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: updateGlobalCartSettings
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
  '/stores/{store_hash}/v3/carts/settings/channels/{channel_id}':
    get:
      summary: Get Channel Cart Settings
      description: Returns the per-channel overrides for the cart settings of a store.
      tags:
        - Carts Settings
      parameters:
        - name: channel_id
          description: The channel ID of the settings overrides
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: getChannelCartSettings
    put:
      summary: Update Channel Cart Settings
      description: Update the per-channel overrides for the cart settings of a store
      tags:
        - Carts Settings
      parameters:
        - name: channel_id
          description: The channel ID of the settings overrides
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartSettingsResponse'
        '400':
          description: Bad Request. Input is invalid.
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    status: 400
                    title: Input is invalid
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    detail: Syntax error
                properties:
                  status:
                    type: number
                  title:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessible entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: updateChannelCartSettings
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
      - schema:
          type: string
        name: channel_id
        in: path
        required: true
components:
  schemas:
    CartUpdateRequest:
      type: object
      properties:
        line_item:
          type: object
          title: Line Item Request Data
          properties:
            quantity:
              type: number
            product_id:
              type: number
            variant_id:
              type: number
              description: Required if the product has variants
            list_price:
              type: number
            option_selections:
              type: array
              items:
                type: object
                properties:
                  option_id:
                    type: number
                  option_value:
                    type: string
                title: Product Option Selection
          required:
            - quantity
            - product_id
            - variant_id
        gift_certificate:
          type: object
          required:
            - sender
            - recipient
            - amount
            - theme
            - name
            - quantity
          properties:
            name:
              type: string
              description: Given name for gift certificate line item.
            theme:
              type: string
              description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
            amount:
              type: number
              minimum: 1
              maximum: 1000
            quantity:
              type: integer
              minimum: 1
            sender:
              title: Contact Entity
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            recipient:
              title: Contact Entity
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            message:
              type: string
              maximum: 200
              description: 'Message shown to recipient, as provided by sender.'
          title: Line Item Gift Certificate Request Data
      title: Cart Update Request
      x-internal: false
    CartCreatePostData:
      type: object
      title: Cart Create Post Data
      x-internal: false
      x-examples: {}
      properties:
        customer_id:
          type: integer
        line_item:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/cart_PostVariant'
              - $ref: '#/components/schemas/cart_PostModifier'
        custom_items:
          $ref: '#/components/schemas/cart_PostCustomItem'
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for gift certificate line item.
              theme:
                type: string
                description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maximum: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        channel_id:
          type: integer
          description: 'If no channel is specified, defaults to 1. '
        currency:
          type: object
          properties:
            code:
              type: string
              format: ISO-4217
              description: 'The [transactional currency](/api-docs/multi-currency/guide/introduction#multi-currency-definitions) code for the cart as a [ISO-4217](https://www.iso.org/iso-4217-currency-codes.html) formatted string; required when multi-currency is enabled. Passing in a non-transactional display currency will result in a `400` error.'
        locale:
          type: string
          description: Accepts string of format `xx` or `xx-YY`.
    CartRequestData:
      type: object
      title: Cart Request Data
      properties:
        line_items:
          type: array
          items:
            type: object
            title: Line Item Request Data
            properties:
              quantity:
                type: number
              product_id:
                type: number
              variant_id:
                type: number
                description: Required if the product has variants
              list_price:
                type: number
              option_selections:
                type: array
                items:
                  type: object
                  title: Product Option Selection
                  properties:
                    option_id:
                      type: number
                    option_value:
                      type: string
            required:
              - quantity
              - product_id
              - variant_id
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for gift certificate line item.
              theme:
                type: string
                description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maximum: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        channel_id:
          type: integer
          description: 'If no channel is specified, defaults to 1. '
      x-internal: false
    CartUpdatePutRequestData:
      type: object
      properties:
        customer_id:
          type: integer
      title: Cart Update Put Request Data
      x-internal: false
    LineItemRequestData:
      type: object
      title: Line Item Request Data
      properties:
        quantity:
          type: number
        product_id:
          type: number
        variant_id:
          type: number
          description: Required if the product has variants
        list_price:
          type: number
        option_selections:
          type: array
          items:
            type: object
            properties:
              option_id:
                type: number
              option_value:
                type: string
            title: Product Option Selection
      required:
        - quantity
        - product_id
        - variant_id
      x-internal: false
    ProductOptionSelection:
      type: object
      properties:
        option_id:
          type: number
        option_value:
          type: string
      title: Product Option Selection
      x-internal: false
    LineItemGiftCertificateRequestData:
      type: object
      required:
        - sender
        - recipient
        - amount
        - theme
        - name
        - quantity
      properties:
        name:
          type: string
          description: Given name for gift certificate line item.
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
        amount:
          type: number
          minimum: 1
          maximum: 1000
        quantity:
          type: integer
          minimum: 1
        sender:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        recipient:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        message:
          type: string
          maximum: 200
          description: 'Message shown to recipient, as provided by sender.'
      title: Line Item Gift Certificate Request Data
      x-internal: false
    Cart_Full:
      description: 'A cart contains a collection of items, prices, discounts, etc.. It does not contain customer-related data.'
      type: object
      title: Cart_Full
      x-internal: false
      properties:
        id:
          description: 'Cart ID, provided after creating a cart with a POST.'
          type: string
          format: UUID
        parent_id:
          type: string
          description: Bundled items will have their parent's item Id.
        customer_id:
          description: ID of the customer to which the cart belongs.
          type: integer
        email:
          description: The cart's email. This is the same email that is used in the billing address
          type: string
        currency:
          type: object
          description: This will always be the same between cart and checkout.
          title: Currency
          properties:
            code:
              type: string
              format: ISO-4217
              description: 'The [transactional currency](/api-docs/multi-currency/guide/introduction#multi-currency-definitions) code for the cart as a [ISO-4217](https://www.iso.org/iso-4217-currency-codes.html) formatted string.'
        tax_included:
          type: boolean
        base_amount:
          type: number
          description: 'Sum of cart line-item amounts before cart-level discounts, coupons, or taxes.'
        discount_amount:
          type: number
          description: Discounted amount.
        cart_amount:
          type: number
          description: Sum of cart line-item amounts minus cart-level discounts and coupons. This amount includes taxes (where applicable).
        coupons:
          type: array
          items:
            $ref: '#/components/schemas/AppliedCoupon'
        discounts:
          type: array
          items:
            type: object
            title: Applied Discount
            description: "Example as part of a Cart response:\n\n```\n\"discounts\": [\n\t\t{\n\t\t\t\t\"id\": 2,\n\t\t\t\t\"discounted_amount\": 2\n\t\t},\n\t\t{\n\t\t\t\t\"id\": \"coupon\",\n\t\t\t\t\"discounted_amount\": 0.42\n\t\t}\n]\n```"
            properties:
              id:
                type: string
                description: 'ID of the applied discount. '
                example: coupon
              discounted_amount:
                type: number
                description: The discounted amount.
        line_item:
          type: object
        created_time:
          type: string
          format: ISO-8601
          description: Time when the cart was created.
        updated_time:
          type: string
          format: ISO-8601
          description: Time when the cart was last updated.
        channel_id:
          type: integer
          description: 'If no channel is specified, defaults to 1. '
        locale:
          type: string
          description: Locale of the cart.
        promotions:
          type: object
          description: This is available only when "include=promotions.banners" is presented in the URL.
          properties:
            banners:
              title: Banner
              type: object
              properties:
                id:
                  description: Id of the promotion.
                  type: string
                type:
                  description: Type of the banner
                  type: string
                page:
                  description: An array of the locations where the banner will display
                  type: array
                  items:
                    type: string
                text:
                  description: Text of the banner
                  type: string
    Currency:
      type: object
      description: This will always be the same between cart and checkout.
      properties:
        code:
          type: string
          format: ISO-4217
          description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
      title: Currency
      x-internal: false
    LineItem:
      type: object
      title: Line Item
      properties:
        physical_items:
          type: array
          items:
            allOf:
              - type: object
                title: Base Item
                properties:
                  id:
                    type: string
                    description: The line-item ID.
                    example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                  variant_id:
                    type: number
                    description: The id of the variant. Required in the /PUT or /POST if the product has variants.
                    example: 358
                  product_id:
                    type: number
                    description: The id of the product. Required in a /POST request.
                    example: 12
                  sku:
                    type: string
                    example: SMGREEN
                    description: SKU of the variant.
                  name:
                    type: string
                    description: The item's product name.
                    example: T-Shirt
                  url:
                    description: The product URL.
                    type: string
                    format: uri
                    example: 'http://your-store-url.mybigcommerce.com/your-product/'
                  quantity:
                    type: number
                    example: 5
                    description: Quantity of this item in the cart.
                  is_taxable:
                    type: boolean
                    example: false
                    description: Whether the item is taxable.
                  image_url:
                    type: string
                    format: uri
                    example: 'https://pathtoproductimage/ProductDefault.png'
                    description: Image of the product or variant.
                  discounts:
                    type: array
                    items:
                      type: object
                      title: Applied Discount
                      description: "Example as part of a Cart response:\n\n```\n\"discounts\": [\n\t\t{\n\t\t\t\t\"id\": 2,\n\t\t\t\t\"discounted_amount\": 2\n\t\t},\n\t\t{\n\t\t\t\t\"id\": \"coupon\",\n\t\t\t\t\"discounted_amount\": 0.42\n\t\t}\n]\n```"
                      properties:
                        id:
                          description: ID of the applied discount. Will return
                          example: coupon
                          oneOf:
                            - type: string
                            - type: number
                        discounted_amount:
                          type: number
                          description: The discounted amount.
                  coupons:
                    type: array
                    items:
                      type: object
                      title: Applied Coupon
                      properties:
                        coupons:
                          type: object
                          description: Required in a /POST request.
                          properties:
                            coupon_code:
                              type: object
                              description: The coupon code
                              properties:
                                id:
                                  type: integer
                                  example: 6
                                  description: Coupon Id
                                code:
                                  type: string
                                  example: KV56053388J
                                  description: The coupon code. Required in a /POST request.
                                name:
                                  type: string
                                  example: Percentage off
                                  description: Name given to the coupon in the Control Panel
                                discountType:
                                  type: integer
                                  description: |-
                                    The discount type.

                                    - type 0: per_item_discount
                                    - type 1: percentage_discount
                                    - type 2: per_total_discount
                                    - type 3: shipping_discount
                                    - type 4: free_shipping
                                  enum:
                                    - 0
                                    - 1
                                    - 2
                                    - 3
                                    - 4
                                discountAmount:
                                  type: integer
                                  description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                                  example: 3
                                expiresDate:
                                  type: integer
                                  example: 0
                                  description: Returns 0 if a expiration date is not set
                                totalDiscount:
                                  type: number
                                  example: 4.19
                                  description: Total discount amount off cart
                          required:
                            - coupon_code
                  discount_amount:
                    type: number
                    description: The total value of all discounts applied to this item. This includes coupons and cart level discounts
                    example: 4
                  coupon_amount:
                    type: number
                    description: The total value of all coupons applied to this item.
                  list_price:
                    type: number
                    description: 'Item’s list price, as quoted by the manufacturer/distributor. Optional price override.'
                  sale_price:
                    type: number
                    description: Item's price after all discounts are applied. (The final price before tax calculation.)
                  extended_list_price:
                    type: number
                    description: Item's list price multiplied by the quantity.
                  extended_sale_price:
                    type: number
                    description: Item's sale price multiplied by the quantity.
                  options:
                    description: The list of selected options for this product.
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: 'The product option name. For example, Color or Size'
                        name_id:
                          type: number
                          description: The product option identifier.
                        value:
                          type: string
                          description: 'The product option value. For example, Red or Medium'
                        value_id:
                          type: number
                          description: The product option value identifier.
                      title: Product Option
                required:
                  - variant_id
                  - product_id
                  - quantity
              - type: object
                properties:
                  is_require_shipping:
                    type: boolean
                  gift_wrapping:
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      amount:
                        type: number
                        format: float
                    title: Gift Wrapping
            title: Item Physical
        digital_items:
          type: array
          items:
            allOf:
              - type: object
                title: Base Item
                properties:
                  id:
                    type: string
                    description: The line-item ID.
                    example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                  variant_id:
                    type: number
                    description: The id of the variant. Required in the /PUT or /POST if the product has variants.
                    example: 358
                  product_id:
                    type: number
                    description: The id of the product. Required in a /POST request.
                    example: 12
                  sku:
                    type: string
                    example: SMGREEN
                    description: SKU of the variant.
                  name:
                    type: string
                    description: The item's product name.
                    example: T-Shirt
                  url:
                    description: The product URL.
                    type: string
                    format: uri
                    example: 'http://your-store-url.mybigcommerce.com/your-product/'
                  quantity:
                    type: number
                    example: 5
                    description: Quantity of this item in the cart.
                  is_taxable:
                    type: boolean
                    example: false
                    description: Whether the item is taxable.
                  image_url:
                    type: string
                    format: uri
                    example: 'https://pathtoproductimage/ProductDefault.png'
                    description: Image of the product or variant.
                  discounts:
                    type: array
                    items:
                      type: object
                      title: Applied Discount
                      description: "Example as part of a Cart response:\n\n```\n\"discounts\": [\n\t\t{\n\t\t\t\t\"id\": 2,\n\t\t\t\t\"discounted_amount\": 2\n\t\t},\n\t\t{\n\t\t\t\t\"id\": \"coupon\",\n\t\t\t\t\"discounted_amount\": 0.42\n\t\t}\n]\n```"
                      properties:
                        id:
                          description: ID of the applied discount. Will return
                          example: coupon
                          oneOf:
                            - type: string
                            - type: number
                        discounted_amount:
                          type: number
                          description: The discounted amount.
                  coupons:
                    type: array
                    items:
                      type: object
                      title: Applied Coupon
                      properties:
                        coupons:
                          type: object
                          description: Required in a /POST request.
                          properties:
                            coupon_code:
                              type: object
                              description: The coupon code
                              properties:
                                id:
                                  type: integer
                                  example: 6
                                  description: Coupon Id
                                code:
                                  type: string
                                  example: KV56053388J
                                  description: The coupon code. Required in a /POST request.
                                name:
                                  type: string
                                  example: Percentage off
                                  description: Name given to the coupon in the Control Panel
                                discountType:
                                  type: integer
                                  description: |-
                                    The discount type.

                                    - type 0: per_item_discount
                                    - type 1: percentage_discount
                                    - type 2: per_total_discount
                                    - type 3: shipping_discount
                                    - type 4: free_shipping
                                  enum:
                                    - 0
                                    - 1
                                    - 2
                                    - 3
                                    - 4
                                discountAmount:
                                  type: integer
                                  description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                                  example: 3
                                expiresDate:
                                  type: integer
                                  example: 0
                                  description: Returns 0 if a expiration date is not set
                                totalDiscount:
                                  type: number
                                  example: 4.19
                                  description: Total discount amount off cart
                          required:
                            - coupon_code
                  discount_amount:
                    type: number
                    description: The total value of all discounts applied to this item. This includes coupons and cart level discounts
                    example: 4
                  coupon_amount:
                    type: number
                    description: The total value of all coupons applied to this item.
                  list_price:
                    type: number
                    description: 'Item’s list price, as quoted by the manufacturer/distributor. Optional price override.'
                  sale_price:
                    type: number
                    description: Item's price after all discounts are applied. (The final price before tax calculation.)
                  extended_list_price:
                    type: number
                    description: Item's list price multiplied by the quantity.
                  extended_sale_price:
                    type: number
                    description: Item's sale price multiplied by the quantity.
                  options:
                    description: The list of selected options for this product.
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: 'The product option name. For example, Color or Size'
                        name_id:
                          type: number
                          description: The product option identifier.
                        value:
                          type: string
                          description: 'The product option value. For example, Red or Medium'
                        value_id:
                          type: number
                          description: The product option value identifier.
                      title: Product Option
                required:
                  - variant_id
                  - product_id
                  - quantity
              - type: object
                properties:
                  download_file_urls:
                    description: URLs to download all product files.
                    type: array
                    items:
                      type: string
                      format: url
                  download_page_url:
                    description: The URL for the combined downloads page.
                    type: string
                    format: url
                  download_size:
                    description: 'Combined download size, in human-readable style. E.g.: `30MB`.'
                    type: string
            title: Item Digital
        gift_certificates:
          type: array
          items:
            type: object
            required:
              - sender
              - recipient
              - amount
              - theme
            properties:
              id:
                type: string
              name:
                type: string
                description: GiftCertificate-provided name that will appear in the control panel.
              theme:
                type: string
                description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
              amount:
                type: number
                description: 'Value must be between 1.00 and 1,000.00 in the stores default currency.'
              is_taxable:
                type: boolean
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                description: Limited to 200 characters.
            title: Item Gift Certificate
        virtual_items:
          type: array
          items:
            type: object
            title: Item Custom
            description: |-
              Add a custom item to the shoppers cart.

              * Custom items are not added to the catalog.
              * The price should be set to match the store settings for taxes.
            properties:
              id:
                type: string
                description: Id of the custom item
              sku:
                type: string
                description: Custom item sku
              name:
                type: string
                description: Item name
              quantity:
                type: string
              list_price:
                type: string
                description: 'Price of the item. With or without tax, depending on your store’s setup. Optional price override.'
      required:
        - physical_items
        - digital_items
      x-internal: false
    ItemGiftCertificate:
      type: object
      required:
        - sender
        - recipient
        - amount
        - theme
      properties:
        id:
          type: string
        name:
          type: string
          description: Provided name that will appear in the control panel.
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
        amount:
          type: number
          description: 'Value must be between 1.00 and 1,000.00 in the store’s default currency.'
        is_taxable:
          type: boolean
        sender:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        recipient:
          title: Contact Entity
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        message:
          type: string
          description: Limited to 200 characters.
      title: Item Gift Certificate
      x-internal: false
    ContactEntity:
      title: Contact Entity
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      x-internal: false
    ItemDigital:
      allOf:
        - type: object
          title: Base Item
          properties:
            id:
              type: string
              description: The line-item ID.
              example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
            variant_id:
              type: number
              description: The id of the variant. Required in the /PUT or /POST if the product has variants.
              example: 358
            product_id:
              type: number
              description: The id of the product. Required in a /POST request.
              example: 12
            sku:
              type: string
              example: SMGREEN
              description: SKU of the variant.
            name:
              type: string
              description: The item's product name.
              example: T-Shirt
            url:
              description: The product URL.
              type: string
              format: uri
              example: 'http://your-store-url.mybigcommerce.com/your-product/'
            quantity:
              type: number
              example: 5
              description: Quantity of this item in the cart.
            is_taxable:
              type: boolean
              example: false
              description: Whether the item is taxable.
            image_url:
              type: string
              format: uri
              example: 'https://pathtoproductimage/ProductDefault.png'
              description: Image of the product or variant.
            discounts:
              type: array
              items:
                type: object
                title: Applied Discount
                description: "Example as part of a Cart response:\n\n```\n\"discounts\": [\n\t\t{\n\t\t\t\t\"id\": 2,\n\t\t\t\t\"discounted_amount\": 2\n\t\t},\n\t\t{\n\t\t\t\t\"id\": \"coupon\",\n\t\t\t\t\"discounted_amount\": 0.42\n\t\t}\n]\n```"
                properties:
                  id:
                    description: ID of the applied discount. Will return
                    example: coupon
                    oneOf:
                      - type: string
                      - type: number
                  discounted_amount:
                    type: number
                    description: The discounted amount.
            coupons:
              type: array
              items:
                type: object
                title: Applied Coupon
                properties:
                  coupons:
                    type: object
                    description: Required in a /POST request.
                    properties:
                      coupon_code:
                        type: object
                        description: The coupon code
                        properties:
                          id:
                            type: integer
                            example: 6
                            description: Coupon Id
                          code:
                            type: string
                            example: KV56053388J
                            description: The coupon code. Required in a /POST request.
                          name:
                            type: string
                            example: Percentage off
                            description: Name given to the coupon in the Control Panel
                          discountType:
                            type: integer
                            description: |-
                              The discount type.

                              - type 0: per_item_discount
                              - type 1: percentage_discount
                              - type 2: per_total_discount
                              - type 3: shipping_discount
                              - type 4: free_shipping
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                          discountAmount:
                            type: integer
                            description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                            example: 3
                          expiresDate:
                            type: integer
                            example: 0
                            description: Returns 0 if a expiration date is not set
                          totalDiscount:
                            type: number
                            example: 4.19
                            description: Total discount amount off cart
                    required:
                      - coupon_code
            discount_amount:
              type: number
              description: The total value of all discounts applied to this item. This includes coupons and cart level discounts
              example: 4
            coupon_amount:
              type: number
              description: The total value of all coupons applied to this item.
            list_price:
              type: number
              description: 'Item’s list price, as quoted by the manufacturer/distributor. Optional price override.'
            sale_price:
              type: number
              description: Item's price after all discounts are applied. (The final price before tax calculation.)
            extended_list_price:
              type: number
              description: Item's list price multiplied by the quantity.
            extended_sale_price:
              type: number
              description: Item's sale price multiplied by the quantity.
            options:
              description: The list of selected options for this product.
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: 'The product option name. For example, Color or Size'
                  name_id:
                    type: number
                    description: The product option identifier.
                  value:
                    type: string
                    description: 'The product option value. For example, Red or Medium'
                  value_id:
                    type: number
                    description: The product option value identifier.
                title: Product Option
          required:
            - variant_id
            - product_id
            - quantity
        - type: object
          properties:
            download_file_urls:
              description: URLs to download all product files.
              type: array
              items:
                type: string
                format: url
            download_page_url:
              description: The URL for the combined downloads page.
              type: string
              format: url
            download_size:
              description: 'Combined download size, in human-readable style. E.g.: `30MB`.'
              type: string
      title: Item Digital
      x-internal: false
    ItemPhysical:
      allOf:
        - type: object
          title: Base Item
          properties:
            id:
              type: string
              description: The line-item ID.
              example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
            variant_id:
              type: number
              description: The id of the variant. Required in the /PUT or /POST if the product has variants.
              example: 358
            product_id:
              type: number
              description: The id of the product. Required in a /POST request.
              example: 12
            sku:
              type: string
              example: SMGREEN
              description: SKU of the variant.
            name:
              type: string
              description: The item's product name.
              example: T-Shirt
            url:
              description: The product URL.
              type: string
              format: uri
              example: 'http://your-store-url.mybigcommerce.com/your-product/'
            quantity:
              type: number
              example: 5
              description: Quantity of this item in the cart.
            is_taxable:
              type: boolean
              example: false
              description: Whether the item is taxable.
            image_url:
              type: string
              format: uri
              example: 'https://pathtoproductimage/ProductDefault.png'
              description: Image of the product or variant.
            discounts:
              type: array
              items:
                type: object
                title: Applied Discount
                description: "Example as part of a Cart response:\n\n```\n\"discounts\": [\n\t\t{\n\t\t\t\t\"id\": 2,\n\t\t\t\t\"discounted_amount\": 2\n\t\t},\n\t\t{\n\t\t\t\t\"id\": \"coupon\",\n\t\t\t\t\"discounted_amount\": 0.42\n\t\t}\n]\n```"
                properties:
                  id:
                    description: ID of the applied discount. Will return
                    example: coupon
                    oneOf:
                      - type: string
                      - type: number
                  discounted_amount:
                    type: number
                    description: The discounted amount.
            coupons:
              type: array
              items:
                type: object
                title: Applied Coupon
                properties:
                  coupons:
                    type: object
                    description: Required in a /POST request.
                    properties:
                      coupon_code:
                        type: object
                        description: The coupon code
                        properties:
                          id:
                            type: integer
                            example: 6
                            description: Coupon Id
                          code:
                            type: string
                            example: KV56053388J
                            description: The coupon code. Required in a /POST request.
                          name:
                            type: string
                            example: Percentage off
                            description: Name given to the coupon in the Control Panel
                          discountType:
                            type: integer
                            description: |-
                              The discount type.

                              - type 0: per_item_discount
                              - type 1: percentage_discount
                              - type 2: per_total_discount
                              - type 3: shipping_discount
                              - type 4: free_shipping
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                          discountAmount:
                            type: integer
                            description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                            example: 3
                          expiresDate:
                            type: integer
                            example: 0
                            description: Returns 0 if a expiration date is not set
                          totalDiscount:
                            type: number
                            example: 4.19
                            description: Total discount amount off cart
                    required:
                      - coupon_code
            discount_amount:
              type: number
              description: The total value of all discounts applied to this item. This includes coupons and cart level discounts
              example: 4
            coupon_amount:
              type: number
              description: The total value of all coupons applied to this item.
            list_price:
              type: number
              description: 'Item’s list price, as quoted by the manufacturer/distributor. Optional price override.'
            sale_price:
              type: number
              description: Item's price after all discounts are applied. (The final price before tax calculation.)
            extended_list_price:
              type: number
              description: Item's list price multiplied by the quantity.
            extended_sale_price:
              type: number
              description: Item's sale price multiplied by the quantity.
            options:
              description: The list of selected options for this product.
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: 'The product option name. For example, Color or Size'
                  name_id:
                    type: number
                    description: The product option identifier.
                  value:
                    type: string
                    description: 'The product option value. For example, Red or Medium'
                  value_id:
                    type: number
                    description: The product option value identifier.
                title: Product Option
          required:
            - variant_id
            - product_id
            - quantity
        - type: object
          properties:
            is_require_shipping:
              type: boolean
            gift_wrapping:
              properties:
                name:
                  type: string
                message:
                  type: string
                amount:
                  type: number
                  format: float
              title: Gift Wrapping
      title: Item Physical
      x-internal: false
    BaseItem:
      type: object
      title: Base Item
      properties:
        id:
          type: string
          description: The line-item ID.
          example: 6e193ce6-f327-4dcc-b75e-72cf6738525e
        variant_id:
          type: number
          description: The id of the variant. Required in the /PUT or /POST if the product has variants.
          example: 358
        product_id:
          type: number
          description: The id of the product. Required in a /POST request.
          example: 12
        sku:
          type: string
          example: SMGREEN
          description: SKU of the variant.
        name:
          type: string
          description: The item's product name.
          example: T-Shirt
        url:
          description: The product URL.
          type: string
          format: uri
          example: 'http://your-store-url.mybigcommerce.com/your-product/'
        quantity:
          type: number
          example: 5
          description: Quantity of this item in the cart.
        is_taxable:
          type: boolean
          example: false
          description: Whether the item is taxable.
        image_url:
          type: string
          format: uri
          example: 'https://pathtoproductimage/ProductDefault.png'
          description: Image of the product or variant.
        discounts:
          type: array
          items:
            type: object
            title: Applied Discount
            description: "Example as part of a Cart response:\n\n```\n\"discounts\": [\n\t\t{\n\t\t\t\t\"id\": 2,\n\t\t\t\t\"discounted_amount\": 2\n\t\t},\n\t\t{\n\t\t\t\t\"id\": \"coupon\",\n\t\t\t\t\"discounted_amount\": 0.42\n\t\t}\n]\n```"
            properties:
              id:
                description: ID of the applied discount. Will return
                example: coupon
                oneOf:
                  - type: string
                  - type: number
              discounted_amount:
                type: number
                description: The discounted amount.
        coupons:
          type: array
          items:
            type: object
            title: Applied Coupon
            properties:
              coupons:
                type: object
                description: Required in a /POST request.
                properties:
                  coupon_code:
                    type: object
                    description: The coupon code
                    properties:
                      id:
                        type: integer
                        example: 6
                        description: Coupon Id
                      code:
                        type: string
                        example: KV56053388J
                        description: The coupon code. Required in a /POST request.
                      name:
                        type: string
                        example: Percentage off
                        description: Name given to the coupon in the Control Panel
                      discountType:
                        type: integer
                        description: |-
                          The discount type.

                          - type 0: per_item_discount
                          - type 1: percentage_discount
                          - type 2: per_total_discount
                          - type 3: shipping_discount
                          - type 4: free_shipping
                        enum:
                          - 0
                          - 1
                          - 2
                          - 3
                          - 4
                      discountAmount:
                        type: integer
                        description: 'The amount of the discount based on the coupon. For example, 3 percent off will show a 3.'
                        example: 3
                      expiresDate:
                        type: integer
                        example: 0
                        description: Returns 0 if a expiration date is not set
                      totalDiscount:
                        type: number
                        example: 4.19
                        description: Total discount amount off cart
                required:
                  - coupon_code
        discount_amount:
          type: number
          description: The total value of all discounts applied to this item. This includes coupons and cart level discounts
          example: 4
        coupon_amount:
          type: number
          description: The total value of all coupons applied to this item.
        list_price:
          type: number
          description: 'Item’s list price, as quoted by the manufacturer/distributor.'
        sale_price:
          type: number
          description: Item's price after all discounts are applied. (The final price before tax calculation.)
        extended_list_price:
          type: number
          description: Item's list price multiplied by the quantity.
        extended_sale_price:
          type: number
          description: Item's sale price multiplied by the quantity.
        options:
          description: The list of selected options for this product.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: 'The product option name. For example, Color or Size'
              name_id:
                type: number
                description: The product option identifier.
              value:
                type: string
                description: 'The product option value. For example, Red or Medium'
              value_id:
                type: number
                description: The product option value identifier.
            title: Product Option
      required:
        - variant_id
        - product_id
        - quantity
      x-internal: false
    ProductOption:
      type: object
      properties:
        name:
          type: string
          description: 'The product option name. For example, Color or Size'
        name_id:
          type: number
          description: The product option identifier.
        value:
          type: string
          description: 'The product option value. For example, Red or Medium'
        value_id:
          type: number
          description: The product option value identifier.
      title: Product Option
      x-internal: false
    AppliedCoupon:
      title: Applied Coupon
      type: object
      description: |-
        |Type `int`|Type Name|
        |-|-|
        |`0`|`per_item_discount`|
        |`1`|`percentage_discount`|
        |`2`|`per_total_discount`|
        |`3`|`shipping_discount`|
        |`4`|`free_shipping`|
        |`5`|`promotion`|
      properties:
        code:
          description: the coupon code
          type: string
        id:
          description: The coupon ID. Read Only
          type: string
          readOnly: true
        coupon_type:
          description: |-
            Key name to identify the type of coupon.

            type 0: per_item_discount
            type 1: percentage_discount
            type 2: per_total_discount
            type 3: shipping_discount
            type 4: free_shipping
            type 5: promotion
          type: string
          readOnly: true
        discounted_amount:
          description: The discounted amount applied within a given context.
          type: number
          format: double
          readOnly: true
      required:
        - code
      x-internal: false
    AppliedDiscount:
      type: object
      title: Applied Discount
      properties:
        id:
          description: ID of the applied discount. Will return
          example: coupon
          oneOf:
            - type: string
            - type: number
        discounted_amount:
          type: number
          description: The discounted amount.
      x-internal: false
    GiftWrapping:
      properties:
        name:
          type: string
        message:
          type: string
        amount:
          type: number
          format: float
      title: Gift Wrapping
      x-internal: false
    ItemCustom:
      type: object
      title: Item Custom
      description: |-
        Add a custom item to the shoppers cart.

        * Custom items are not added to the catalog.
        * The price should be set to match the store settings for taxes.
      properties:
        id:
          type: string
          description: Id of the custom item
        sku:
          type: string
          description: Custom item sku
        name:
          type: string
          description: Item name
        quantity:
          type: string
        list_price:
          type: string
          description: 'Price of the item. With or without tax, depending on your store’s setup.'
      x-internal: false
    cart_PostVariant:
      type: object
      title: cart_PostVariant
      x-internal: false
      properties:
        quantity:
          type: number
        product_id:
          type: number
        list_price:
          type: number
          description: Optional price override
        variant_id:
          type: number
          description: Exists only in Catalog V3
        name:
          type: string
          description: 'Optionally, provide a value to override the product name'
        gift_wrapping:
          type: object
          properties:
            wrap_together:
              type: boolean
              description: Indicates whether we want to wrap items together or separately
              example: true
            wrap_details:
              type: array
              description: Details of the Gift Wrapping option selected. This can be specified for each line items.
              items:
                type: object
                properties:
                  id:
                    type: number
                    description: Identifier of the Gift Wrapping Option selected
                    example: 0
                  message:
                    type: string
                    description: Custom gift message
                    example: Happy Birthday
          required:
            - quantity
            - product_id
    cart_PostModifier:
      type: array
      title: cart_PostModifier
      items:
        type: object
        properties:
          quantity:
            type: number
          product_id:
            type: number
          list_price:
            type: number
            description: Optional price override
          name:
            type: string
            description: 'Optionally, provide a value to override the product name'
          option_selections:
            type: array
            description: Needed for Catalog V2
            items:
              type: object
              properties:
                option_id:
                  type: number
                option_value:
                  type: integer
                name:
                  type: string
                  description: Override selected Option or Modifier Name
                value:
                  type: string
                  description: Override selected Option Value
                name_id:
                  type: integer
                value_id:
                  type: integer
        required:
          - quantity
          - product_id
      description: ''
      x-internal: false
    Cart_Line_Item_Update_Put:
      type: object
      title: Cart_Line_Item_Update_Put
      x-internal: false
      properties:
        line_item:
          oneOf:
            - $ref: '#/components/schemas/cart_PostVariant'
            - $ref: '#/components/schemas/cart_PostModifier'
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for gift certificate line item.
              theme:
                type: string
                description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maximum: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        custom_items:
          $ref: '#/components/schemas/cart_PostCustomItem'
    Cart_Line_Item_Update_Post:
      type: object
      title: Cart_Line_Item_Update_Post
      x-internal: false
      properties:
        line_items:
          oneOf:
            - items:
                $ref: '#/components/schemas/cart_PostVariant'
            - items:
                $ref: '#/components/schemas/cart_PostModifier'
          type: array
        gift_certificates:
          type: array
          items:
            type: object
            title: Line Item Gift Certificate Request Data
            properties:
              name:
                type: string
                description: Given name for gift certificate line item.
              theme:
                type: string
                description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
              amount:
                type: number
                minimum: 1
                maximum: 1000
              quantity:
                type: integer
                minimum: 1
              sender:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              recipient:
                title: Contact Entity
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              message:
                type: string
                maximum: 200
                description: 'Message shown to recipient, as provided by sender.'
            required:
              - name
              - theme
              - amount
              - quantity
              - sender
              - recipient
        custom_items:
          $ref: '#/components/schemas/cart_PostCustomItem'
    cart_PostCustomItem:
      type: array
      title: cart_PostCustomItem
      items:
        type: object
        properties:
          sku:
            type: string
          name:
            type: string
          quantity:
            type: number
          list_price:
            type: number
      x-internal: false
    CartSettings:
      description: Represents all settings related to the shopping cart functionality of a store
      type: object
      properties:
        allow_purchasing:
          type: boolean
      x-tags:
        - Models
    ChannelCartSettings:
      description: Represents all settings overrides related to the shopping cart functionality of a store for a channel
      type: object
      properties:
        allow_purchasing:
          type: boolean
          nullable: true
      x-tags:
        - Models
    ChannelCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/ChannelCartSettings'
        - description: The request object for updating the cart settings overrides of a store for a channel
      x-tags:
        - Models
    ChannelCartSettingsResponse:
      description: The response object of cart settings overrides for a channel
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ChannelCartSettings'
        meta:
          type: object
      x-tags:
        - Models
    GlobalCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/CartSettings'
        - description: The request object for updating the cart settings of a store at the global level
          required:
            - allow_purchasing
      x-tags:
        - Models
    GlobalCartSettingsResponse:
      description: The response object of cart settings at the global level
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CartSettings'
        meta:
          type: object
      x-tags:
        - Models
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
      x-tags:
        - Models
  responses:
    CartResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cart_Full'
    CartRedirectResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  cart_url:
                    type: string
                    format: url
                    example: 'https://store.mybigcommerce.com/cart.php?action=load&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                  checkout_url:
                    type: string
                    example: 'https://store.mybigcommerce.com/cart.php?action=loadInCheckout&id=1ea11efe-b111-11d1-11ee-cd1110f111b1&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                    format: Url
                  embedded_checkout_url:
                    type: string
                    example: 'https://store.mybigcommerce.com/cart.php?embedded=1&action=loadInCheckout&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                    format: url
              meta:
                type: object
          examples:
            example-1:
              value:
                data:
                  cart_url: 'https://store.mybigcommerce.com/cart.php?action=load&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                  checkout_url: 'https://store.mybigcommerce.com/cart.php?action=loadInCheckout&id=1ea11efe-b111-11d1-11ee-cd1110f111b1&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                  embedded_checkout_url: 'https://store.mybigcommerce.com/cart.php?embedded=1&action=loadInCheckout&id=0aa00afa-a000-00a0-00aae-aa0000f000a0&token=00aaaaa0aa0000000000a000a000f0aa0000afa00aa00afa0a000000000aa0a0'
                meta: {}
  parameters:
    Accept:
      in: header
      name: Accept
      required: true
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
    line_items:
      name: include
      in: query
      description: |-
        * `redirect_urls`: Create a direct link to a Cart. This can be used during the /POST request for Carts.
        * `line_items.physical_items.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.
        * `line_items.digital_items.options`: The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - redirect_urls
            - line_items.physical_items.options
            - line_items.digital_items.options
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
      description: |-
        ### OAuth Scopes
        |UI Name |Permission |Parameter |
        |-|-|-|
        |Carts|modify|`store_cart`|
        |Carts |read-only|`store_cart_read_only`|

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).
