openapi: '3.0.3'
info:
  title: Catalog
  description: |-
    The Catalog API allows you to manage products, categories, bulk pricing rules, and more. To learn more about catalog resources see [Catalog Overview](/api-docs/store-management/catalog/catalog-overview).

    - [Authentication](#authentication)
    - [Resources](#resources)

    ## Resources

    ### Webhooks
    * [Category](/api-docs/store-management/webhooks/events#category)

    ### Related Endpoints
    * [Catalog API](/docs/rest-management/catalog)

    Manage channel-specific categories.

    Create and manage category trees for BigCommerce stores.

    Create and manage products assignments.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Brands
  - name: Brand Images
  - name: Brand Metafields
  - name: Category
  - name: Categories
  - name: Categories Batch
  - name: Category Metafields
  - name: Category Images
  - name: Product Sort Order
  - name: Products
  - name: Product Bulk Pricing Rules
  - name: Product Complex Rules
  - name: Product Custom Fields
  - name: Product Images
  - name: Product Metafields
  - name: Product Modifiers
  - name: Product Modifier Values
  - name: Product Modifier Images
  - name: Product Options
  - name: Product Option Values
  - name: Product Reviews
  - name: Product Variants
  - name: Product Variants Metafields
  - name: Product Variant Options
  - name: Product Variant Option Values
  - name: Product Videos
  - name: Products Channel Assignments
  - name: Products Category Assignments
  - name: Summary
  - name: Variants
  - name: Category Trees
paths:
  '/catalog/products':
    get:
      tags:
        - Products
      summary: Get All Products
      description: Returns a list of **Products**. Optional filter parameters can be passed in.
      operationId: getProducts
      parameters:
        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: upc
          in: query
          description: |
            Filter items by upc.
          schema:
            type: string
        - name: price
          in: query
          description: |
            Filter items by price.
          schema:
            type: number
        - name: weight
          in: query
          description: |
            Filter items by weight.
          schema:
            type: number
        - name: condition
          in: query
          description: |
            Filter items by condition.
          schema:
            type: string
            enum:
              - new
              - used
              - refurbished
        - name: brand_id
          in: query
          description: |
            Filter items by brand_id.
          schema:
            type: integer
        - name: date_modified
          in: query
          description: 'Filter items by `date_modified`. '
          schema:
            type: string
            format: date-time
        - name: 'date_modified:max'
          in: query
          description: 'Filter items by `date_modified`. For example, `date_modified:max=2020-06-15`.'
          schema:
            type: string
        - name: 'date_modified:min'
          in: query
          description: 'Filter items by `date_modified`. For example, `date_modified:min=2018-06-15`.'
          schema:
            type: string
        - name: date_last_imported
          in: query
          description: Filter items by date_last_imported.
          schema:
            type: string
            format: date-time
        - name: 'date_last_imported:max'
          in: query
          description: 'Filter items by date_last_imported. For example, `date_last_imported:max=2020-06-15`.'
          schema:
            type: string
        - name: 'date_last_imported:min'
          in: query
          description: 'Filter items by date_last_imported. For example, `date_last_imported:min=2018-06-15`.'
          schema:
            type: string
        - name: is_visible
          in: query
          description: Filter items based on whether the product is currently visible on the storefront.
          schema:
            type: boolean
        - name: is_featured
          in: query
          description: 'Filter items by is_featured. `1` for true, `0` for false.'
          schema:
            type: integer
            enum:
              - 1
              - 0
        - name: is_free_shipping
          in: query
          description: 'Filter items by is_free_shipping. `1` for true, `0` for false.'
          schema:
            type: integer
        - name: inventory_level
          in: query
          description: |
            Filter items by inventory_level.
          schema:
            type: integer
        - name: 'inventory_level:in'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:not_in'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:min'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:max'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:greater'
          in: query
          schema:
            type: integer
        - name: 'inventory_level:less'
          in: query
          schema:
            type: integer
        - name: inventory_low
          in: query
          description: |
            Filter items by inventory_low. Values: 1, 0.
          schema:
            type: integer
        - name: out_of_stock
          in: query
          description: |
            Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.
          schema:
            type: integer
        - name: total_sold
          in: query
          description: |
            Filter items by total_sold.
          schema:
            type: integer
        - name: type
          in: query
          description: Filter items by type.
          schema:
            type: string
            enum:
              - digital
              - physical
        - name: categories
          in: query
          description: |-
            Filter items by categories.
             If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
          schema:
            type: integer
        - name: keyword
          in: query
          description: Filter items by keywords found in the `name` or `sku` fields
          schema:
            type: string
        - name: keyword_context
          in: query
          description: Set context used by the search algorithm to return results targeted towards the specified group. Use `merchant` to help merchants search their own catalog. Use `shopper` to return shopper-facing search results.
          schema:
            type: string
            enum:
              - shopper
              - merchant
        - name: status
          in: query
          description: |
            Filter items by status.
          schema:
            type: integer
        - name: include
          in: query
          description: 'Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.'
          schema:
            type: string
            enum:
              - variants
              - images
              - custom_fields
              - bulk_pricing_rules
              - primary_image
              - modifiers
              - options
              - videos
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: availability
          in: query
          description: |
            Filter items by availability. Values are: available, disabled, preorder.
          schema:
            type: string
            enum:
              - available
              - disabled
              - preorder
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: direction
          in: query
          description: |
            Sort direction. Acceptable values are: `asc`, `desc`.
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: sort
          in: query
          description: |
            Field name to sort by. Note: Since `id` increments when new products are added, you can use that field to sort by product create date.
          schema:
            type: string
            enum:
              - id
              - name
              - sku
              - price
              - date_modified
              - date_last_imported
              - inventory_level
              - is_visible
              - total_sold
        - name: 'categories:in'
          in: query
          description: 'Filter items by categories. Use for products in multiple categories. For example, `categories:in=12`.'
          schema:
            type: integer
        - name: sku
          in: query
          description: 'Filter items by main SKU. To filter by variant SKU, see [Get All Variants](/docs/rest-management/catalog/product-variants#get-all-product-variants). '
          schema:
            type: string
        - name: 'sku:in'
          in: query
          description: Filter items by SKU.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
    put:
      tags:
        - Products
      summary: Update Products (Batch)
      description: |-
        Updates products in batches. Batches are limited to 10 products.

        **Required Fields**
        * `id` - product `id` is required for batch updates to products.

        **Read-Only Fields**
        - `id`
        - `date_created`
        - `date_modified`
        - `calculated_price`
        - `base_variant_id`
      operationId: updateProducts
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Put_Collection'
            examples:
              example-1:
                value:
                  - name: Smith Journal 13
                    type: physical
                    sku: SM-13
                    description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                    weight: 0
                    width: 0
                    depth: 0
                    height: 0
                    price: 0
                    cost_price: 0
                    retail_price: 0
                    sale_price: 0
                    map_price: 0
                    tax_class_id: 0
                    product_tax_code: string
                    categories:
                      - 0
                    channels:
                      - 1
                    brand_id: 0
                    inventory_level: 0
                    inventory_warning_level: 0
                    inventory_tracking: none
                    fixed_cost_shipping_price: 0
                    is_free_shipping: true
                    is_visible: true
                    is_featured: true
                    related_products:
                      - 0
                    warranty: string
                    bin_picking_number: string
                    layout_file: string
                    upc: string
                    search_keywords: string
                    availability: available
                    availability_description: string
                    gift_wrapping_options_type: any
                    gift_wrapping_options_list:
                      - 0
                    sort_order: -2147483648
                    condition: New
                    is_condition_shown: true
                    order_quantity_minimum: 0
                    order_quantity_maximum: 0
                    page_title: string
                    meta_keywords:
                      - string
                    meta_description: string
                    view_count: 0
                    preorder_release_date: '2019-08-24T14:15:22Z'
                    preorder_message: string
                    is_preorder_only: true
                    is_price_hidden: true
                    price_hidden_label: string
                    custom_url:
                      url: string
                      is_customized: true
                    open_graph_type: product
                    open_graph_title: string
                    open_graph_description: string
                    open_graph_use_meta_description: true
                    open_graph_use_product_name: true
                    open_graph_use_image: true
                    brand_name or brand_id: Common Good
                    gtin: string
                    mpn: string
                    reviews_rating_sum: 3
                    reviews_count: 4
                    total_sold: 80
                    custom_fields:
                      - id: 6
                        name: ISBN
                        value: '1234567890123'
                    bulk_pricing_rules:
                      - id: 0
                        quantity_min: 10
                        quantity_max: 50
                        type: price
                        amount: 10
                    images:
                      - image_file: string
                        is_thumbnail: true
                        sort_order: -2147483648
                        description: string
                        image_url: string
                        id: 0
                        product_id: 0
                        url_zoom: string
                        url_standard: string
                        url_thumbnail: string
                        url_tiny: string
                        date_modified: '2019-08-24T14:15:22Z'
                    videos:
                      - title: Writing Great Documentation
                        description: A video about documenation
                        sort_order: 1
                        type: youtube
                        video_id: z3fRu9pkuXE
                        id: 0
                        product_id: 0
                        length: string
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              examples:
                example-1:
                  value:
                    data:
                      - id: 1
                        name: Smith Journal 13
                        type: physical
                        sku: SM-13
                        description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                        weight: 0
                        width: 0
                        depth: 0
                        height: 0
                        price: 0
                        cost_price: 0
                        retail_price: 0
                        sale_price: 0
                        map_price: 0
                        tax_class_id: 0
                        product_tax_code: string
                        categories:
                          - 0
                        channels:
                          - 1
                        brand_id: 0
                        inventory_level: 0
                        inventory_warning_level: 0
                        inventory_tracking: none
                        fixed_cost_shipping_price: 0
                        is_free_shipping: true
                        is_visible: true
                        is_featured: true
                        related_products:
                          - 0
                        warranty: string
                        bin_picking_number: string
                        layout_file: string
                        upc: string
                        search_keywords: string
                        availability: available
                        availability_description: string
                        gift_wrapping_options_type: any
                        gift_wrapping_options_list:
                          - 0
                        sort_order: -2147483648
                        condition: New
                        is_condition_shown: true
                        order_quantity_minimum: 0
                        order_quantity_maximum: 0
                        page_title: string
                        meta_keywords:
                          - string
                        meta_description: string
                        view_count: 0
                        preorder_release_date: '2019-08-24T14:15:22Z'
                        preorder_message: string
                        is_preorder_only: true
                        is_price_hidden: true
                        price_hidden_label: string
                        custom_url:
                          url: string
                          is_customized: true
                        open_graph_type: product
                        open_graph_title: string
                        open_graph_description: string
                        open_graph_use_meta_description: true
                        open_graph_use_product_name: true
                        open_graph_use_image: true
                        brand_name or brand_id: Common Good
                        gtin: string
                        mpn: string
                        reviews_rating_sum: 3
                        reviews_count: 4
                        total_sold: 80
                        custom_fields:
                          - id: 6
                            name: ISBN
                            value: '1234567890123'
                        bulk_pricing_rules:
                          - id: 0
                            quantity_min: 10
                            quantity_max: 50
                            type: price
                            amount: 10
                        images:
                          - image_file: string
                            is_thumbnail: true
                            sort_order: -2147483648
                            description: string
                            image_url: string
                            id: 0
                            product_id: 0
                            url_zoom: string
                            url_standard: string
                            url_thumbnail: string
                            url_tiny: string
                            date_modified: '2019-08-24T14:15:22Z'
                        videos:
                          - title: Writing Great Documentation
                            description: A video about documenation
                            sort_order: 1
                            type: youtube
                            video_id: z3fRu9pkuXE
                            id: 0
                            product_id: 0
                            length: string
                        date_created: '2018-08-15T14:49:05+00:00'
                        date_modified: '2018-08-24T14:41:00+00:00'
                        base_variant_id: 0
                        calculated_price: 0
                        options:
                          - id: 55
                            product_id: 4
                            display_name: Add-a-$5-Donation1535042499-187
                            type: radio_buttons
                            config:
                              default_value: string
                              checked_by_default: true
                              checkbox_label: string
                              date_limited: true
                              date_limit_mode: range
                              date_earliest_value: '2019-08-24'
                              date_latest_value: '2019-08-24'
                              file_types_mode: specific
                              file_types_supported:
                                - 'images, documents, other'
                              file_types_other:
                                - pdf
                              file_max_size: 5
                              text_characters_limited: true
                              text_min_length: 1
                              text_max_length: 55
                              text_lines_limited: true
                              text_max_lines: 4
                              number_limited: true
                              number_limit_mode: lowest
                              number_lowest_value: 100
                              number_highest_value: 0
                              number_integers_only: false
                              product_list_adjusts_inventory: true
                              product_list_adjusts_pricing: true
                              product_list_shipping_calc: weight
                            sort_order: 1
                            option_values:
                              is_default: false
                              label: Green
                              sort_order: 0
                              value_data: {}
                              id: 0
                        modifiers:
                          - type: date
                            required: true
                            sort_order: 0
                            config:
                              default_value: string
                              checked_by_default: true
                              checkbox_label: string
                              date_limited: true
                              date_limit_mode: range
                              date_earliest_value: '2019-08-24'
                              date_latest_value: '2019-08-24'
                              file_types_mode: specific
                              file_types_supported:
                                - 'images, documents, other'
                              file_types_other:
                                - pdf
                              file_max_size: 5
                              text_characters_limited: true
                              text_min_length: 1
                              text_max_length: 55
                              text_lines_limited: true
                              text_max_lines: 4
                              number_limited: true
                              number_limit_mode: lowest
                              number_lowest_value: 100
                              number_highest_value: 0
                              number_integers_only: false
                              product_list_adjusts_inventory: true
                              product_list_adjusts_pricing: true
                              product_list_shipping_calc: weight
                            display_name: string
                            id: 12
                            product_id: 77
                            name: Add-a-$5-Donation1535039590-191
                            option_values:
                              - is_default: false
                                label: Green
                                sort_order: 0
                                value_data: {}
                                adjusters:
                                  price:
                                    adjuster: relative
                                    adjuster_value: 5
                                  weight:
                                    adjuster: relative
                                    adjuster_value: 5
                                  image_url: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                  purchasing_disabled:
                                    status: true
                                    message: string
                                id: 0
                                option_id: 0
                        option_set_id: 0
                        option_set_display: string
                        variants:
                          - cost_price: 0
                            price: 0
                            sale_price: 0
                            retail_price: 0
                            weight: 0
                            width: 0
                            height: 0
                            depth: 0
                            is_free_shipping: true
                            fixed_cost_shipping_price: 0
                            purchasing_disabled: true
                            purchasing_disabled_message: string
                            upc: string
                            inventory_level: 0
                            inventory_warning_level: 0
                            bin_picking_number: string
                            mpn: string
                            gtin: '012345678905'
                            id: 0
                            product_id: 0
                            sku: string
                            sku_id: 0
                            option_values:
                              - option_display_name: Color
                                label: Beige
                                id: 146
                                option_id: 151
                            calculated_price: 0
                            calculated_weight: 0
                    meta:
                      pagination:
                        total: 36
                        count: 36
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          previous: string
                          current: '?page=1&limit=50'
                          next: string
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: '`Product` was in conflict with another product. This is the result of duplicate unique values such as name or SKU; a missing or invalid `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse_409'
        '413':
          description: 413 Request Entity Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
              example:
                errors: {}
                status: 413
                title: The request payload is too large. The maximum items allowed in the array is 50
                type: /api-docs/getting-started/api-status-codes
        '422':
          description: '`Product` was not valid. This is the result of missing required fields or invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse_422'
      x-codegen-request-body-name: products
    post:
      tags:
        - Products
      summary: Create a Product
      description: |-
        Creates a *Product*. Only one product can be created at a time.

        **Required Fields:**
        - `name`
        - `type`
        - `weight`
        - `price`

        **Read-Only Fields**
        - `id`
        - `date_created`
        - `date_modified`
        - `calculated_price`
        - `base_variant_id`

        **Limits**
        - 250 characters product name length.

        **Usage Notes**
        * `POST` requests to `/products` accept a `video` array. 
        * `POST` requests to `/products/{product_id}/videos` accept a `video` object.
      operationId: createProduct
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
            example-1:
              example:
                name: Smith Journal 13
                type: physical
                sku: SM-13
                description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                weight: 0
                width: 0
                depth: 0
                height: 0
                price: 0
                cost_price: 0
                retail_price: 0
                sale_price: 0
                map_price: 0
                tax_class_id: 0
                product_tax_code: string
                categories:
                  - 0
                brand_id: 0
                inventory_level: 0
                inventory_warning_level: 0
                inventory_tracking: none
                fixed_cost_shipping_price: 0
                is_free_shipping: true
                is_visible: true
                is_featured: true
                related_products:
                  - 0
                warranty: string
                bin_picking_number: string
                layout_file: string
                upc: string
                search_keywords: string
                availability: available
                availability_description: string
                gift_wrapping_options_type: any
                gift_wrapping_options_list:
                  - 0
                sort_order: -2147483648
                condition: New
                is_condition_shown: true
                order_quantity_minimum: 0
                order_quantity_maximum: 0
                page_title: string
                meta_keywords:
                  - string
                meta_description: string
                view_count: 0
                preorder_release_date: '2019-08-24T14:15:22+00:00'
                preorder_message: string
                is_preorder_only: true
                is_price_hidden: true
                price_hidden_label: string
                custom_url:
                  url: string
                  is_customized: true
                open_graph_type: product
                open_graph_title: string
                open_graph_description: string
                open_graph_use_meta_description: true
                open_graph_use_product_name: true
                open_graph_use_image: true
                brand_name or brand_id: Common Good
                gtin: string
                mpn: string
                reviews_rating_sum: 3.2
                reviews_count: 4
                total_sold: 80
                custom_fields:
                  - id: 6
                    name: ISBN
                    value: '1234567890123'
                bulk_pricing_rules:
                  - id: 0
                    quantity_min: 10
                    quantity_max: 50
                    type: price
                    amount: 10
                images:
                  - image_file: string
                    is_thumbnail: true
                    sort_order: -2147483648
                    description: string
                    image_url: string
                    id: 0
                    product_id: 0
                    url_zoom: string
                    url_standard: string
                    url_thumbnail: string
                    url_tiny: string
                    date_modified: '2019-08-24T14:15:22+00:00'
                videos:
                  - title: string
                    description: string
                    sort_order: -2147483648
                    type: youtube
                    video_id: string
                    id: 0
                    product_id: 0
                    length: string
                date_created: '2018-08-15T14:49:05+00:00'
                date_modified: '2018-08-24T14:41:00+00:00'
                id: 1
                base_variant_id: 0
                calculated_price: 0
                options:
                  - id: 55
                    product_id: 4
                    display_name: Add-a-$5-Donation1535042499-187
                    type: radio_buttons
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    sort_order: 1
                    option_values:
                      is_default: false
                      label: Green
                      sort_order: 0
                      value_data: {}
                      id: 0
                modifiers:
                  - type: date
                    required: true
                    sort_order: 0
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    display_name: string
                    id: 12
                    product_id: 77
                    name: Add-a-$5-Donation1535039590-191
                    option_values:
                      - is_default: false
                        label: Green
                        sort_order: 0
                        value_data: {}
                        adjusters:
                          price:
                            adjuster: relative
                            adjuster_value: 5
                          weight:
                            adjuster: relative
                            adjuster_value: 5
                          image_url: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                          purchasing_disabled:
                            status: true
                            message: string
                        id: 0
                        option_id: 0
                option_set_id: 0
                option_set_display: string
                variants:
                  - cost_price: 0
                    price: 0
                    sale_price: 0
                    retail_price: 0
                    weight: 0
                    width: 0
                    height: 0
                    depth: 0
                    is_free_shipping: true
                    fixed_cost_shipping_price: 0
                    purchasing_disabled: true
                    purchasing_disabled_message: string
                    upc: string
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: string
                    mpn: string
                    gtin: '012345678905'
                    id: 0
                    product_id: 0
                    sku: string
                    sku_id: 0
                    option_values:
                      - option_display_name: Color
                        label: Beige
                        id: 146
                        option_id: 151
                    calculated_price: 0
                    calculated_weight: 0
                meta: {}
                '207':
        '207': 
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'

        '409':
          description: |
            `Product` was in conflict with another product. This is the result of duplicate unique values, such as name or SKU; a missing or invalid `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            `Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: product
    delete:
      tags:
        - Products
      summary: Delete Products
      description: |-
        To delete *Product* objects, you must include a filter. This prevents inadvertently deleting all *Product* objects in a store.

        > #### Note
        > The maximum number of products you can delete at one time is 250.

        **Example**:
        To delete products with the id's of 1,2 and 3, use `DELETE /v3/catalog/products?id:in=1,2,3`.
      operationId: deleteProducts
      parameters:
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: sku
          in: query
          description: |
            Filter items by sku.
          schema:
            type: string
        - name: price
          in: query
          description: |
            Filter items by price.
          schema:
            type: number
        - name: weight
          in: query
          description: |
            Filter items by weight.
          schema:
            type: number
        - name: condition
          in: query
          description: |
            Filter items by condition.
          schema:
            type: string
            enum:
              - new
              - used
              - refurbished
        - name: brand_id
          in: query
          description: |
            Filter items by brand_id.
          schema:
            type: integer
        - name: date_modified
          in: query
          description: 'Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`'
          schema:
            type: string
            format: date-time
        - name: date_last_imported
          in: query
          description: 'Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`'
          schema:
            type: string
            format: date-time
        - name: is_visible
          in: query
          description: 'Filter items by if visible on the storefront. '
          schema:
            type: boolean
        - name: is_featured
          in: query
          description: |
            Filter items by is_featured.
          schema:
            type: integer
        - name: inventory_level
          in: query
          description: |
            Filter items by inventory_level.
          schema:
            type: integer
        - name: total_sold
          in: query
          description: |
            Filter items by total_sold.
          schema:
            type: integer
        - name: type
          in: query
          description: 'Filter items by type: `physical` or `digital`.'
          schema:
            type: string
            enum:
              - digital
              - physical
        - name: categories
          in: query
          description: |-
            Filter items by categories.
             If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
          schema:
            type: integer
        - name: keyword
          in: query
          description: |
            Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/products/{product_id}':
    get:
      tags:
        - Products
      summary: Get a Product
      description: Returns a single *Product*. Optional parameters can be passed in.
      operationId: getProductById
      parameters:
        - name: include
          in: query
          description: 'Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.'
          schema:
            type: string
            enum:
              - variants
              - images
              - custom_fields
              - bulk_pricing_rules
              - primary_image
              - modifiers
              - options
              - videos
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 174
                  name: 1L Le Parfait Jar
                  type: physical
                  sku: ''
                  description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                  weight: 1
                  width: 0
                  depth: 0
                  height: 0
                  price: 7.95
                  cost_price: 0
                  retail_price: 10
                  sale_price: 0
                  map_price: 0
                  tax_class_id: 0
                  product_tax_code: ''
                  calculated_price: 7.95
                  categories:
                    - 23
                    - 21
                  channels:
                    - 1
                  brand_id: 36
                  option_set_id: 55
                  option_set_display: right
                  inventory_level: 0
                  inventory_warning_level: 0
                  inventory_tracking: none
                  reviews_rating_sum: 0
                  reviews_count: 0
                  total_sold: 7
                  fixed_cost_shipping_price: 0
                  is_free_shipping: false
                  is_visible: true
                  is_featured: false
                  related_products:
                    - -1
                  warranty: ''
                  bin_picking_number: ''
                  layout_file: product.html
                  upc: ''
                  mpn: ''
                  gtin: ''
                  search_keywords: 'jar, glass'
                  availability: available
                  availability_description: ''
                  gift_wrapping_options_type: any
                  gift_wrapping_options_list: []
                  sort_order: 0
                  condition: New
                  is_condition_shown: false
                  order_quantity_minimum: 0
                  order_quantity_maximum: 0
                  page_title: ''
                  meta_keywords: []
                  meta_description: ''
                  date_created: '2018-08-15T14:48:46+00:00'
                  date_modified: '2018-09-05T20:42:07+00:00'
                  view_count: 10
                  preorder_release_date: '2018-09-05T20:42:07+00:00'
                  preorder_message: ''
                  is_preorder_only: false
                  is_price_hidden: false
                  price_hidden_label: ''
                  custom_url:
                    url: /all/1l-le-parfait-jar/
                    is_customized: true
                  base_variant_id: 345
                  open_graph_type: product
                  open_graph_title: ''
                  open_graph_description: ''
                  open_graph_use_meta_description: true
                  open_graph_use_product_name: true
                  open_graph_use_image: true
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Products
      summary: Update a Product
      description: |
        Updates a *Product*.

        **Read-Only Fields**
        - id
        - date_created
        - date_modified
        - calculated_price
        - base_variant_id
      operationId: updateProduct
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
            example-1:
              example:
                name: Smith Journal 13
                type: physical
                sku: SM-13
                description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
                weight: 0
                width: 0
                depth: 0
                height: 0
                price: 0
                cost_price: 0
                retail_price: 0
                sale_price: 0
                map_price: 0
                tax_class_id: 0
                product_tax_code: string
                categories:
                  - 0
                brand_id: 0
                inventory_level: 0
                inventory_warning_level: 0
                inventory_tracking: none
                fixed_cost_shipping_price: 0
                is_free_shipping: true
                is_visible: true
                is_featured: true
                related_products:
                  - 0
                warranty: string
                bin_picking_number: string
                layout_file: string
                upc: string
                search_keywords: string
                availability: available
                availability_description: string
                gift_wrapping_options_type: any
                gift_wrapping_options_list:
                  - 0
                sort_order: -2147483648
                condition: New
                is_condition_shown: true
                order_quantity_minimum: 0
                order_quantity_maximum: 0
                page_title: string
                meta_keywords:
                  - string
                meta_description: string
                view_count: 0
                preorder_release_date: '2019-08-24T14:15:22+00:00'
                preorder_message: string
                is_preorder_only: true
                is_price_hidden: true
                price_hidden_label: string
                custom_url:
                  url: string
                  is_customized: true
                open_graph_type: product
                open_graph_title: string
                open_graph_description: string
                open_graph_use_meta_description: true
                open_graph_use_product_name: true
                open_graph_use_image: true
                brand_name or brand_id: Common Good
                gtin: string
                mpn: string
                reviews_rating_sum: 3.2
                reviews_count: 4
                total_sold: 80
                custom_fields:
                  - id: 6
                    name: ISBN
                    value: '1234567890123'
                bulk_pricing_rules:
                  - id: 0
                    quantity_min: 10
                    quantity_max: 50
                    type: price
                    amount: 10
                images:
                  - image_file: string
                    is_thumbnail: true
                    sort_order: -2147483648
                    description: string
                    image_url: string
                    id: 0
                    product_id: 0
                    url_zoom: string
                    url_standard: string
                    url_thumbnail: string
                    url_tiny: string
                    date_modified: '2019-08-24T14:15:22+00:00'
                videos:
                  - title: string
                    description: string
                    sort_order: -2147483648
                    type: youtube
                    video_id: string
                    id: 0
                    product_id: 0
                    length: string
                date_created: '2018-08-15T14:49:05+00:00'
                date_modified: '2018-08-24T14:41:00+00:00'
                id: 1
                base_variant_id: 0
                calculated_price: 0
                options:
                  - id: 55
                    product_id: 4
                    display_name: Add-a-$5-Donation1535042499-187
                    type: radio_buttons
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    sort_order: 1
                    option_values:
                      is_default: false
                      label: Green
                      sort_order: 0
                      value_data: {}
                      id: 0
                modifiers:
                  - type: date
                    required: true
                    sort_order: 0
                    config:
                      default_value: string
                      checked_by_default: true
                      checkbox_label: string
                      date_limited: true
                      date_limit_mode: range
                      date_earliest_value: '2019-08-24T00:00:00+00:00'
                      date_latest_value: '2019-08-24T00:00:00+00:00'
                      file_types_mode: specific
                      file_types_supported:
                        - 'images, documents, other'
                      file_types_other:
                        - pdf
                      file_max_size: 5
                      text_characters_limited: true
                      text_min_length: 1
                      text_max_length: 55
                      text_lines_limited: true
                      text_max_lines: 4
                      number_limited: true
                      number_limit_mode: lowest
                      number_lowest_value: 100
                      number_highest_value: 0
                      number_integers_only: false
                      product_list_adjusts_inventory: true
                      product_list_adjusts_pricing: true
                      product_list_shipping_calc: weight
                    display_name: string
                    id: 12
                    product_id: 77
                    name: Add-a-$5-Donation1535039590-191
                    option_values:
                      - is_default: false
                        label: Green
                        sort_order: 0
                        value_data: {}
                        adjusters:
                          price:
                            adjuster: relative
                            adjuster_value: 5
                          weight:
                            adjuster: relative
                            adjuster_value: 5
                          image_url: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                          purchasing_disabled:
                            status: true
                            message: string
                        id: 0
                        option_id: 0
                option_set_id: 0
                option_set_display: string
                variants:
                  - cost_price: 0
                    price: 0
                    sale_price: 0
                    retail_price: 0
                    weight: 0
                    width: 0
                    height: 0
                    depth: 0
                    is_free_shipping: true
                    fixed_cost_shipping_price: 0
                    purchasing_disabled: true
                    purchasing_disabled_message: string
                    upc: string
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: string
                    mpn: string
                    gtin: 12345678905
                    id: 0
                    product_id: 0
                    sku: string
                    sku_id: 0
                    option_values:
                      - option_display_name: Color
                        label: Beige
                        id: 146
                        option_id: 151
                    calculated_price: 0
                    calculated_weight: 0
                meta: {}
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/product_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            `Product` was in conflict with another product. This is caused by: duplicate unique values, such as name or SKU; a missing category, brand, or tax_class with which the product is being associated; or a conflicting bulk pricing rule.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            `Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: product
    delete:
      tags:
        - Products
      summary: Delete a Product
      description: Deletes a *Product*.
      operationId: deleteProductById
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/images':
    get:
      tags:
        - Product Images
      summary: Get All Product Images
      description: Returns a list of *Product Images*. Optional parameters can be passed in.
      operationId: getProductImages
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Image Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Product Image
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/productImage_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  - id: 382
                    product_id: 158
                    is_thumbnail: true
                    sort_order: 0
                    description: ''
                    image_file: a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg
                    url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2'
                    url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2'
                    url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
                    url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2'
                    date_modified: '2018-08-15T14:48:31+00:00'
                  - id: 383
                    product_id: 158
                    is_thumbnail: false
                    sort_order: 0
                    description: ''
                    image_file: k/050/foglinenbeigestripetowel2b_1024x1024__16082__46564.jpg
                    url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.1280.1280.jpg?c=2'
                    url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.560.850.jpg?c=2'
                    url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.330.500.jpg?c=2'
                    url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.66.100.jpg?c=2'
                    date_modified: '2018-08-15T14:48:31+00:00'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '204':
          description: |
            There are not any images on this product.
          content: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Images
      summary: Create a Product Image
      description: |-
        Creates a *Product Image*.

         **Required Fields**
        - `image_file`, or
        - `image_url`

        **Usage Notes**
        - `image_url` - `255` character limit
        - For file uploads, use the `multipart/form-data` media type
        - Only one image at a time can be created
        - Supported image file types are BMP, GIF, JPEG, PNG, WBMP, XBM, and WEBP.
      operationId: createProductImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Product Image Post
              description: The model for a POST to create an image on a product.
              allOf:
                - title: Product Image Base
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: |
                        The unique numeric identifier for the product with which the image is associated.
                    image_file:
                      type: string
                      description: |-
                        The local path to the original image file uploaded to BigCommerce.
                        A `multipart/form-data` media type.
                    url_zoom:
                      type: string
                      description: |
                        The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                    url_standard:
                      type: string
                      description: |
                        The standard URL for this image. By default, this is used for product-page images.
                    url_thumbnail:
                      type: string
                      description: |
                        The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                    url_tiny:
                      type: string
                      description: |
                        The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                    date_modified:
                      type: string
                      description: |
                        The date on which the product image was modified.
                      format: date-time
                    is_thumbnail:
                      type: boolean
                      description: |
                        Flag for identifying whether the image is used as the product's thumbnail.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                    description:
                      type: string
                      description: |
                        The description for the image.
                  description: Common ProductImage properties.
                - type: object
                  properties:
                    image_url:
                      type: string
                      description: |
                        Must be a fully qualified URL path, including protocol. Limit of 8MB per file.
                    image_file:
                      type: string
                      description: |
                        Must be sent as a multipart/form-data field in the request body. Limit of 1MB per file.
          multipart/form-data:
            schema:
              title: Product Image Post
              description: The model for a POST to create an image on a product.
              allOf:
                - title: Product Image Base
                  type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the image; increments sequentially.
                    product_id:
                      type: integer
                      description: |
                        The unique numeric identifier for the product with which the image is associated.
                    image_file:
                      type: string
                      description: |-
                        The local path to the original image file uploaded to BigCommerce.
                        A `multipart/form-data` media type.
                    url_zoom:
                      type: string
                      description: |
                        The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                    url_standard:
                      type: string
                      description: |
                        The standard URL for this image. By default, this is used for product-page images.
                    url_thumbnail:
                      type: string
                      description: |
                        The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                    url_tiny:
                      type: string
                      description: |
                        The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                    date_modified:
                      type: string
                      description: |
                        The date on which the product image was modified.
                      format: date-time
                    is_thumbnail:
                      type: boolean
                      description: |
                        Flag for identifying whether the image is used as the product's thumbnail.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                    description:
                      type: string
                      description: |
                        The description for the image.
                  description: Common ProductImage properties.
                - type: object
                  properties:
                    image_url:
                      type: string
                      description: |
                        Must be a fully qualified URL path, including protocol. Limit of 8MB per file.
                    image_file:
                      type: string
                      description: |
                        Must be sent as a multipart/form-data field in the request body. Limit of 1MB per file.
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Product Image Response
                type: object
                properties:
                  data:
                    title: Product Image
                    type: object
                    allOf:
                      - title: Product Image Base
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |-
                              The local path to the original image file uploaded to BigCommerce.

                              A `multipart/form-data` media type.
                          url_zoom:
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          is_thumbnail:
                            type: boolean
                            description: |
                              Flag for identifying whether the image is used as the product's thumbnail.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                          description:
                            type: string
                            description: |
                              The description for the image.
                        description: Common ProductImage properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |-
                              The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.
                              A `multipart/form-data` media type.
                          url_zoom:
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          image_url:
                            type: string
                            description: |-
                              Publically available URL.
                              Use the image_url when creating a product.
                            example: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  id: 485
                  product_id: 158
                  is_thumbnail: false
                  sort_order: 1
                  description: ''
                  image_file: o/381/product-image__98178.png
                  url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
                  url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
                  url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
                  url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
                  date_modified: '2018-09-13T15:57:07+00:00'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |-
            Unprocessable Entity. 

            May occur if the `Content-Type` header is set to `multipart/form-data` rather than `application/json` when creating a product image using `image_url`.
          content:
            application/json:
              schema:
                required:
                  - status
                  - title
                  - type
                type: object
                properties:
                  status:
                    type: number
                  title:
                    minLength: 1
                    type: string
                  type:
                    minLength: 1
                    type: string
                description: ''
              example:
                status: 422
                title: image_url must be present if uploading by url
                type: /api-docs/getting-started/api-status-codes
      x-codegen-request-body-name: productImage
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/images/{image_id}':
    get:
      tags:
        - Product Images
      summary: Get a Product Image
      description: Returns a single *Product Image*. Optional parameters can be passed in.
      operationId: getProductImageById
      parameters:
        - name: image_id
          in: path
          description: |
            The ID of the `Image` that is being operated on.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Image Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productImage_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  id: 485
                  product_id: 158
                  is_thumbnail: false
                  sort_order: 1
                  description: ''
                  image_file: o/381/product-image__98178.png
                  url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
                  url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
                  url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
                  url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
                  date_modified: '2018-09-13T15:57:07+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Images
      summary: Update a Product Image
      description: |-
        Updates a *Product Image*.

        **Usage Notes**
        - `image_url` - `255` character limit
        - For file uploads, send a POST request using the `multipart/form-data` media type
      operationId: updateProductImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: image_id
          in: path
          description: |
            The ID of the `Image` that is being operated on.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productImage_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Image Response
                type: object
                properties:
                  data:
                    title: Product Image
                    type: object
                    allOf:
                      - title: Product Image Base
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |
                              The local path to the original image file uploaded to BigCommerce.
                          url_zoom:
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          is_thumbnail:
                            type: boolean
                            description: |
                              Flag for identifying whether the image is used as the product's thumbnail.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                          description:
                            type: string
                            description: |
                              The description for the image.
                        description: Common ProductImage properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the image; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          image_file:
                            type: string
                            description: |
                              The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.
                          url_zoom:
                            type: string
                            description: |
                              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                          url_standard:
                            type: string
                            description: |
                              The standard URL for this image. By default, this is used for product-page images.
                          url_thumbnail:
                            type: string
                            description: |
                              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                          url_tiny:
                            type: string
                            description: |
                              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                          date_modified:
                            type: string
                            description: |
                              The date on which the product image was modified.
                            format: date-time
                          image_url:
                            type: string
                            description: |-
                              Publically available URL.
                              Use the image_url when creating a product.
                            example: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  id: 485
                  product_id: 158
                  is_thumbnail: false
                  sort_order: 1
                  description: ''
                  image_file: o/381/product-image__98178.png
                  url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
                  url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
                  url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
                  url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
                  date_modified: '2018-09-13T15:57:07+00:00'
                meta: {}
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productImage
    delete:
      tags:
        - Product Images
      summary: Delete a Product Image
      description: Deletes a *Product Image*.
      operationId: deleteProductImage
      parameters:
        - name: image_id
          in: path
          description: |
            The ID of the `Image` that is being operated on.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ImageIdParam'
  '/catalog/products/{product_id}/videos':
    get:
      tags:
        - Product Videos
      summary: Get All Product Videos
      description: Returns a list of *Product Videos*. Optional parameters can be passed in.
      operationId: getProductVideos
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productVideo_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    type: youtube
                    video_id: PqBTp23RLhI
                    product_id: 192
                    sort_order: 1
                    title: Creating and Editing Banners | BigCommerce Tutorials
                    description: 'Learn how to create and edit marketing banners. Marketing banners are a great way to advertise sales, display coupon codes, and add design elements. Let’s take a look at how you can leverage banners to convert your store’s visitors into paying customers.'
                    length: '01:54'
                  - id: 7
                    type: youtube
                    video_id: EhYBjzqd-nI
                    product_id: 192
                    sort_order: 2
                    title: BigCommerce Company Values
                    description: |-
                      These are the core principles upon which BigCommerce was built, guiding what we do and how we do it. Each employee learns them, loves them and lives them. Our merchants benefit from them every time they use our product or get help from our support team.

                      Join the BigCommerce team and help us build software that changes lives!

                      https://www.bigcommerce.com/careers/
                    length: '03:30'
                  - id: 8
                    type: youtube
                    video_id: vAUdo4kRjrU
                    product_id: 192
                    sort_order: 3
                    title: TOP WORKPLACES 2016 - Austin American Statesman + BigCommerce
                    description: |-
                      We've been named one of Austin American-Statesman's Top WorkPlaces for the 5th year in a row! Here's what some employees have to say:

                      “I am given the freedom and trust to make a difference.”

                      “Everyone believes in the product and growing the company.”

                      “I'm appreciated for the work I do and there is room to grown within the company.”

                      Work With Us!
                      http://www.bigcommerce.com/careers.php
                    length: '01:37'
                meta:
                  pagination:
                    total: 3
                    count: 3
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Product Videos
      summary: Create a Product Video
      description: |-
        Creates a *Product Video*.

        **Required Fields**
        * video_id

        **Read-Only Fields**
        * id

        Publicly accessible URLs are valid parameters.
        Videos must be loaded through YouTube at this time.
      operationId: createProductVideo
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Product Video Post
              description: |
                The model for a POST to create a video on a product.
              allOf:
                - title: Product Video Base
                  description: Common Product Video properties.
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      example: Writing Great Documentation
                      description: |
                        The title for the video. If left blank, this will be filled in according to data on a host site.
                    description:
                      type: string
                      example: A video about documenation
                      description: |
                        The description for the video. If left blank, this will be filled in according to data on a host site.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      example: 1
                      type: integer
                      description: |
                        The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                    type:
                      type: string
                      description: |
                        The video type (a short name of a host site).
                      enum:
                        - youtube
                - properties:
                    video_id:
                      type: string
                      maxLength: 25
                      minLength: 0
                      description: |
                        The ID of the video on a host site.
                      x-required:
                        - post
                      example: z3fRu9pkuXE
              type: object
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Response
                type: object
                properties:
                  data:
                    title: Product Video
                    type: object
                    description: |
                      A product video model.
                    allOf:
                      - title: Product Video Base
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |
                              The title for the video. If left blank, this will be filled in according to data on a host site.
                          description:
                            type: string
                            description: |
                              The description for the video. If left blank, this will be filled in according to data on a host site.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                          type:
                            type: string
                            description: |
                              The video type (a short name of a host site).
                            enum:
                              - youtube
                        description: Common Product Video properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product video; increments sequentially.
                          video_id:
                            type: string
                            description: |
                              The ID of the video on a host site.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          length:
                            type: string
                            description: |
                              Length of the video. This will be filled in according to data on a host site.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                title: Your Video
                description: Company Values
                sort_order: 1
                type: youtube
                video_id: 123345AA
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productVideo
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/videos/{id}':
    get:
      tags:
        - Product Videos
      summary: Get a Product Video
      description: Returns a single *Product Video*. Optional parameters can be passed in.
      operationId: getProductVideoById
      parameters:
        - name: id
          in: path
          description: The BigCommerce ID of the `Video`
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVideo_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                title: Your Video
                description: Company Values
                sort_order: 1
                type: youtube
                video_id: 123345AA
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Videos
      summary: Update a Product Video
      description: |-
        Updates a *Product Video.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateProductVideo
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: id
          in: path
          description: The BigCommerce ID of the `Video`
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Product Video Put
              description: |
                The model for a PUT to update a video on a product.
              allOf:
                - title: Product Video Base
                  type: object
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        The title for the video. If left blank, this will be filled in according to data on a host site.
                    description:
                      type: string
                      description: |
                        The description for the video. If left blank, this will be filled in according to data on a host site.
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                    type:
                      type: string
                      description: |
                        The video type (a short name of a host site).
                      enum:
                        - youtube
                  description: Common Product Video properties.
                - type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the product video; increments sequentially.
                      x-required:
                        - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Video Response
                type: object
                properties:
                  data:
                    title: Product Video
                    type: object
                    description: |
                      A product video model.
                    allOf:
                      - title: Product Video Base
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |
                              The title for the video. If left blank, this will be filled in according to data on a host site.
                          description:
                            type: string
                            description: |
                              The description for the video. If left blank, this will be filled in according to data on a host site.
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                          type:
                            type: string
                            description: |
                              The video type (a short name of a host site).
                            enum:
                              - youtube
                        description: Common Product Video properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product video; increments sequentially.
                          video_id:
                            type: string
                            description: |
                              The ID of the video on a host site.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the image is associated.
                          length:
                            type: string
                            description: |
                              Length of the video. This will be filled in according to data on a host site.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                title: Your Video
                description: Company Values
                sort_order: 1
                type: youtube
                video_id: 123345AA
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productVideo
    delete:
      tags:
        - Product Videos
      summary: Delete a Product Video
      description: Deletes a *Product Video*.
      operationId: deleteProductVideo
      parameters:
        - name: id
          in: path
          description: The BigCommerce ID of the `Video`
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VideoIdParam'
  '/catalog/products/{product_id}/variants':
    get:
      tags:
        - Product Variants
      summary: Get All Product Variants
      description: Returns a list of product *Variants*. Optional parameters can be passed in.
      operationId: getVariantsByProductId
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 382
                    product_id: 192
                    sku: SMIT
                    sku_id: 348
                    price: 10
                    calculated_price: 10
                    sale_price: 8
                    retail_price: 10
                    map_price: {}
                    weight: 4
                    calculated_weight: 2
                    width: 5
                    height: 5
                    depth: 5
                    is_free_shipping: false
                    fixed_cost_shipping_price: 10
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    image_url: ''
                    cost_price: 0
                    upc: ''
                    mpn: ''
                    gtin: ''
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: ''
                    option_values:
                      - id: 174
                        label: Beige
                        option_id: 220
                        option_display_name: Color
                  - id: 383
                    product_id: 192
                    sku: SMIT-1
                    sku_id: 349
                    price: 25
                    calculated_price: 25
                    sale_price: 20
                    retail_price: 25
                    map_price: {}
                    weight: 2
                    calculated_weight: 1
                    width: 5
                    height: 5
                    depth: 5
                    is_free_shipping: false
                    fixed_cost_shipping_price: 10
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    image_url: ''
                    cost_price: 25
                    upc: ''
                    mpn: ''
                    gtin: ''
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: ''
                    option_values:
                      - id: 175
                        label: Grey
                        option_id: 220
                        option_display_name: Color
                  - id: 384
                    product_id: 192
                    sku: SMIT-2
                    sku_id: 350
                    price: 25
                    calculated_price: 25
                    sale_price: 20
                    retail_price: 25
                    map_price: {}
                    weight: 2
                    calculated_weight: 1
                    width: 5
                    height: 5
                    depth: 5
                    is_free_shipping: false
                    fixed_cost_shipping_price: 10
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    image_url: ''
                    cost_price: 25
                    upc: ''
                    mpn: ''
                    gtin: ''
                    inventory_level: 0
                    inventory_warning_level: 0
                    bin_picking_number: ''
                    option_values:
                      - id: 176
                        label: Black
                        option_id: 220
                        option_display_name: Color
                meta:
                  pagination:
                    total: 3
                    count: 3
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Variants
      summary: Create a Product Variant
      description: |-
        Creates a *Product Variant*.

        **Required Fields**
        * sku
        * option_values

        **Read-Only Fields**
        * id

        **Limits**
        * 600 SKUs per product limit.
        * 255 characters SKU length limit.

        Variants need to be created one at a time using this endpoint. To use a variant array and create products and variants in the same call use the [Create Products](/docs/rest-management/catalog/products#create-a-product) during the initial product creation.
      operationId: createVariant
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productVariant_Post'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              examples:
                example-1:
                  value:
                    data:
                      cost_price: 0
                      price: 0
                      sale_price: 0
                      retail_price: 0
                      weight: 0
                      width: 0
                      height: 0
                      depth: 0
                      is_free_shipping: true
                      fixed_cost_shipping_price: 0
                      purchasing_disabled: true
                      purchasing_disabled_message: string
                      upc: string
                      inventory_level: 0
                      inventory_warning_level: 0
                      bin_picking_number: string
                      mpn: string
                      gtin: '012345678905'
                      id: 0
                      product_id: 0
                      sku: string
                      sku_id: 0
                      option_values:
                        - option_display_name: Color
                          label: Beige
                          id: 146
                          option_id: 151
                      calculated_price: 0
                      calculated_weight: 0
                    meta: {}
                example-2:
                  value:
                    data:
                      id: 384
                      product_id: 192
                      sku: SMIT-2
                      sku_id: 350
                      price: 25
                      calculated_price: 25
                      sale_price: 20
                      retail_price: 25
                      map_price: {}
                      weight: 2
                      calculated_weight: 1
                      width: 5
                      height: 5
                      depth: 5
                      is_free_shipping: false
                      fixed_cost_shipping_price: 10
                      purchasing_disabled: false
                      purchasing_disabled_message: ''
                      image_url: ''
                      cost_price: 25
                      upc: ''
                      mpn: ''
                      gtin: ''
                      inventory_level: 0
                      inventory_warning_level: 0
                      bin_picking_number: ''
                      option_values:
                        - id: 176
                          label: Black
                          option_id: 220
                          option_display_name: Color
                    meta: {}
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Variant
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}':
    get:
      tags:
        - Product Variants
      summary: Get a Product Variant
      description: Returns a single product *Variant*. Optional parameters can be passed in.
      operationId: getVariantById
      parameters:
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 384
                  product_id: 192
                  sku: SMIT-2
                  sku_id: 350
                  price: 25
                  calculated_price: 25
                  sale_price: 20
                  retail_price: 25
                  map_price: {}
                  weight: 2
                  calculated_weight: 1
                  width: 5
                  height: 5
                  depth: 5
                  is_free_shipping: false
                  fixed_cost_shipping_price: 10
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  image_url: ''
                  cost_price: 25
                  upc: ''
                  mpn: ''
                  gtin: ''
                  inventory_level: 0
                  inventory_warning_level: 0
                  bin_picking_number: ''
                  option_values:
                    - id: 176
                      label: Black
                      option_id: 220
                      option_display_name: Color
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Variants
      summary: Update a Product Variant
      description: Updates a product *Variant*.
      operationId: updateVariant
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productVariant_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  bin_picking_number: '0'
                  calculated_price: 85
                  calculated_weight: 1
                  cost_price: 0
                  depth: 22
                  fixed_cost_shipping_price: 0
                  gtin: ''
                  height: 14.6
                  id: 65
                  inventory_level: 0
                  inventory_warning_level: 0
                  is_free_shipping: false
                  map_price: 0
                  mpn: TR-SML02
                  option_values: []
                  price: 89
                  product_id: 81
                  purchasing_disabled: true
                  purchasing_disabled_message: This item is not available.
                  retail_price: 89
                  sale_price: 85
                  sku: OTS
                  sku_id: 10
                  upc: ''
                  weight: 1
                  width: 2
                meta: {}
        '207':
          description: |-
            Multi-status. The product information was updated successfully, but the inventory data failed to update. 
            
            Verify that the inventory-related updates are well-formed and correct; for example, that they donʼt result in negative stock levels. Then consider updating the inventory data again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productVariant_Full'
                  errors: 
                    $ref: '#/components/schemas/errorMultiStatus'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Variant
    delete:
      tags:
        - Product Variants
      summary: Delete a Product Variant
      description: Deletes a product *Variant*.
      operationId: deleteVariantById
      parameters:
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}/metafields':
    get:
      tags:
        - Product Variants Metafields
      summary: Get All Product Variant Metafields
      description: Returns a list of product variant *Metafields*. Optional parameters can be passed in.
      operationId: getVariantMetafieldsByProductIdAndVariantId
      parameters:
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer

        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/categoriesTree_Resp'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Variants Metafields
      summary: Create a Product Variant Metafield
      description: |-
        Creates a product variant *Metafield*.

        **Required Fields:**
        * permission_set
        * namespace
        * key
        * value

        **Read-Only Fields**
        * id

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createVariantMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: variant
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique-key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Metafield
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}/metafields/{metafield_id}':
    get:
      tags:
        - Product Variants Metafields
      summary: Get a Product Variant Metafields
      description: Returns a single product variant *Metafield*. Optional parameters can be passed in.
      operationId: getVariantMetafieldByProductIdAndVariantId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 8
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_type: variant
                  resource_id: 158
                  description: Where products are located
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Variants Metafields
      summary: Update Product Variant Metafields
      description: "Updates a product variant *Metafield*.\n\n**Required Fields:**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
      operationId: updateVariantMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 8
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_type: variant
                  resource_id: 158
                  description: Where products are located
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Product Variants Metafields
      summary: Delete a Variant Metafield
      description: Deletes a product variant *Metafield*.
      operationId: deleteVariantMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/products/{product_id}/variants/{variant_id}/image':
    post:
      tags:
        - Product Variants
      summary: Create a Variant Image
      description: |-
        Creates a *Variant Image*.

        The image will show on the storefront when the value is selected.

         **Required Fields**
        - image_file: Form posts. Files larger than 1 MB are not accepted
        - image_url: Any publicly available URL
      operationId: createVariantImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: variant_id
          in: path
          description: |
            ID of the variant on a product, or on an associated Price List Record.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                image_url:
                  type: string
                  description: |
                    A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
              description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
          multipart/form-data:
            schema:
              type: object
              properties:
                image_url:
                  type: string
                  description: |
                    A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
              description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
        required: false
      responses:
        '200':
          description: '`image_url` is returned for both `image_file` and `image_url`.'
          content:
            application/json:
              schema:
                title: Image Response
                type: object
                properties:
                  data:
                    title: Resource Image
                    type: object
                    properties:
                      image_url:
                        type: string
                        description: |
                          A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
                    description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Image Response returns for:
                  * Create Variant Image
                  * Create Modifier Image
                  * Create Category Image
                  * Create Brand Image
              example:
                data:
                  image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            Image was not valid. This is the result of a missing `image_file` field or of an incorrect file type. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '500':
          description: Returns for an `image_file` larger than 1 MB.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: body
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/VariantIdParam'
  '/catalog/products/{product_id}/options':
    get:
      tags:
        - Product Variant Options
      summary: Get All Product Variant Options
      description: 'Returns a list of product *Variant Options*. Optional parameters can be passed in. '
      operationId: getOptions
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productOption_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Get all product options
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Variant Options
      summary: Create a Product Variant Option
      description: |-
        Creates a *Variant Option*.

        **Required Fields**
        * display_name
        * type
        * option_values

        **Read-Only Fields**
        * id

        **Limits**
        * 255 characters option name length.

        **Notes**

        * Only one variant option at a time can be created; individual variant options will contain an array of multiple values.
        * There are several examples listed below that create options, but the SKU’s are not updated and they are not a variant on the product. Variant SKUs must be created with a separate request.
        * Variant options will show on the storefront as an option that can be selected by the customer. A request like this could be used to add new choices to a variant that has already been created.
        * If more than one variant needs to be created use the [Create a Product](/docs/rest-management/catalog/products#create-a-product) endpoint.
      operationId: createOption
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Option Post
              description: The model for a POST to create options on a product.
              allOf:
                - title: Option Base
                  description: Common Option properties.
                  properties:
                    product_id:
                      type: integer
                      description: |
                        The unique numerical ID of the product to which the option belongs.
                      example: 4
                      x-required:
                        - post
                        - put
                    display_name:
                      maxLength: 255
                      minLength: 1
                      type: string
                      description: |
                        The name of the option shown on the storefront.
                      example: Add-a-$5-Donation1535042499-187
                      x-required:
                        - post
                        - put
                    type:
                      type: string
                      description: |
                        The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                      enum:
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                        - put
                    config:
                      title: Option Config
                      type: object
                      description: The values for option config can vary based on the Modifier created.
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2018-08-31T00:00:00+00:00'
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2019-01-01T00:00:00+00:00'
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          example:
                            - images
                            - documents
                            - other
                          items:
                            type: string
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          example:
                            - pdf
                            - txt
                          items:
                            type: string
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                    sort_order:
                      type: integer
                      description: 'Order in which the option is displayed on the storefront. '
                      example: 1
                    option_values:
                      minItems: 1
                      type: array
                      x-required:
                        - post
                        - put
                      items:
                        title: Option Value
                        allOf:
                          - title: Option Value Base
                            description: Common Option Value properties.
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            required:
                              - label
                              - sort_order
                          - properties:
                              id:
                                type: integer
                                description: |
                                  The unique numeric ID of the value; increments sequentially.
                        type: object
                    image_url:
                      type: string
                      description: Publicly available image url
              type: object
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Response
                type: object
                properties:
                  data:
                    title: Option
                    type: object
                    allOf:
                      - title: Option Base
                        description: Common Option properties.
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numerical ID of the option, increments sequentially.
                            example: 55
                            x-nullable: true
                          product_id:
                            type: integer
                            description: |
                              The unique numerical ID of the product to which the option belongs.
                            example: 4
                            x-required:
                              - post
                              - put
                          display_name:
                            maxLength: 255
                            minLength: 1
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Add-a-$5-Donation1535042499-187
                            x-required:
                              - post
                              - put
                          type:
                            type: string
                            description: |
                              The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                            enum:
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                              - put
                          config:
                            title: Option Config
                            type: object
                            description: The values for option config can vary based on the Modifier created.
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date-time
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date-time
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                          sort_order:
                            type: integer
                            description: 'Order in which the option is displayed on the storefront. '
                            example: 1
                          option_values:
                            minItems: 1
                            type: array
                            x-required:
                              - post
                              - put
                            items:
                              title: Option Value
                              allOf:
                                - title: Option Value Base
                                  description: Common Option Value properties.
                                  properties:
                                    is_default:
                                      type: boolean
                                      description: |
                                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                      example: false
                                    label:
                                      type: string
                                      description: |
                                        The text display identifying the value on the storefront. Required in a /POST.
                                      example: Green
                                      x-required:
                                        - post
                                    sort_order:
                                      maximum: 2147483647
                                      minimum: -2147483648
                                      type: integer
                                      description: |
                                        The order in which the value will be displayed on the product page. Required in a /POST.
                                      example: 0
                                      x-required:
                                        - post
                                    value_data:
                                      type: object
                                      properties: {}
                                      description: |
                                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                  required:
                                    - label
                                    - sort_order
                                - properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                              type: object
                          image_url:
                            type: string
                            description: Publicly available image url
                      - type: object
                        properties:
                          name:
                            type: string
                            description: |
                              The unique option name, auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535042499-187
                  meta:
                    title: Meta
                    type: object
                    properties: {}
                    description: Empty meta object; may be used later.
              examples:
                example-1:
                  value:
                    data:
                      id: 55
                      product_id: 4
                      display_name: Add-a-$5-Donation1535042499-187
                      type: radio_buttons
                      config:
                        default_value: string
                        checked_by_default: true
                        checkbox_label: string
                        date_limited: true
                        date_limit_mode: earliest
                        date_earliest_value: '2022-08-24T00:00:00+00:00'
                        date_latest_value: '2022-08-27T00:00:00+00:00'
                        file_types_mode: specific
                        file_types_supported:
                          - 'images, documents, other'
                        file_types_other:
                          - pdf
                        file_max_size: 5
                        text_characters_limited: true
                        text_min_length: 1
                        text_max_length: 55
                        text_lines_limited: true
                        text_max_lines: 4
                        number_limited: true
                        number_limit_mode: lowest
                        number_lowest_value: 100
                        number_highest_value: 0
                        number_integers_only: false
                        product_list_adjusts_inventory: true
                        product_list_adjusts_pricing: true
                        product_list_shipping_calc: none
                      sort_order: 1
                      option_values:
                        - is_default: false
                          label: Green
                          sort_order: 0
                          value_data: {}
                          id: 0
                      image_url: string
                      name: Add-a-$5-Donation1535042499-187
                    meta: {}
                example-2:
                  value:
                    data:
                      id: 220
                      product_id: 192
                      name: Color (Colors only)
                      display_name: Color
                      type: swatch
                      sort_order: 0
                      option_values:
                        - id: 174
                          label: Beige
                          sort_order: 1
                          value_data:
                            colors:
                              - '#FAFAEB'
                          is_default: false
                        - id: 175
                          label: Grey
                          sort_order: 2
                          value_data:
                            colors:
                              - '#BDBDBD'
                          is_default: false
                        - id: 176
                          label: Black
                          sort_order: 3
                          value_data:
                            colors:
                              - '#000000'
                          is_default: false
                        - id: 189
                          label: Black-Walnut
                          sort_order: 4
                          value_data:
                            colors:
                              - '#e80ee8'
                          is_default: false
                      config: {}
                    meta: {}
        '409':
          description: |
            Option was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            Option was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Option
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/options/{option_id}':
    get:
      tags:
        - Product Variant Options
      summary: Get a Product Variant Option
      description: Returns a single *Variant Option*. Optional parameters can be passed in.
      operationId: getOptionById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productOption_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Variant Options
      summary: Update a Product Variant Option
      description: |-
        Updates a *Variant Option*.

        **Read-Only Fields**
        * id
      operationId: updateOption
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Option Put
              description: The model for a PUT to update options on a product.
              allOf:
                - title: Option Base
                  type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numerical ID of the option, increments sequentially.
                      nullable: true
                      example: 55
                    product_id:
                      type: integer
                      description: |
                        The unique numerical ID of the product to which the option belongs.
                      example: 4
                      x-required:
                        - post
                        - put
                    display_name:
                      maxLength: 255
                      minLength: 1
                      type: string
                      description: |
                        The name of the option shown on the storefront.
                      example: Add-a-$5-Donation1535042499-187
                      x-required:
                        - post
                        - put
                    type:
                      type: string
                      description: |
                        The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                      enum:
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                        - put
                    config:
                      title: Option Config
                      type: object
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2018-08-31T00:00:00+00:00'
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2019-01-01T00:00:00+00:00'
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          example:
                            - images
                            - documents
                            - other
                          items:
                            type: string
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          example:
                            - pdf
                            - txt
                          items:
                            type: string
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                      description: The values for option config can vary based on the Modifier created.
                    sort_order:
                      type: integer
                      description: 'Order in which the option is displayed on the storefront. '
                      example: 1
                    option_values:
                      minItems: 1
                      type: array
                      items:
                        title: Option Value
                        type: object
                        allOf:
                          - title: Option Value Base
                            required:
                              - label
                              - sort_order
                            type: object
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            description: Common Option Value properties.
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: |
                                  The unique numeric ID of the value; increments sequentially.
                      x-required:
                        - post
                        - put
                    image_url:
                      type: string
                      description: Publicly available image url
                  description: Common Option properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Response
                type: object
                properties:
                  data:
                    title: Option
                    type: object
                    allOf:
                      - title: Option Base
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numerical ID of the option, increments sequentially.
                            example: 55
                            x-nullable: true
                          product_id:
                            type: integer
                            description: |
                              The unique numerical ID of the product to which the option belongs.
                            example: 4
                            x-required:
                              - post
                              - put
                          display_name:
                            maxLength: 255
                            minLength: 1
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Add-a-$5-Donation1535042499-187
                            x-required:
                              - post
                              - put
                          type:
                            type: string
                            description: |
                              The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                            enum:
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                              - put
                          config:
                            title: Option Config
                            type: object
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.                            
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.                            
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                            description: The values for option config can vary based on the Modifier created.
                          sort_order:
                            type: integer
                            description: 'Order in which the option is displayed on the storefront. '
                            example: 1
                          option_values:
                            minItems: 1
                            type: array
                            items:
                              title: Option Value
                              type: object
                              allOf:
                                - title: Option Value Base
                                  required:
                                    - label
                                    - sort_order
                                  type: object
                                  properties:
                                    is_default:
                                      type: boolean
                                      description: |
                                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                      example: false
                                    label:
                                      type: string
                                      description: |
                                        The text display identifying the value on the storefront. Required in a /POST.
                                      example: Green
                                      x-required:
                                        - post
                                    sort_order:
                                      maximum: 2147483647
                                      minimum: -2147483648
                                      type: integer
                                      description: |
                                        The order in which the value will be displayed on the product page. Required in a /POST.
                                      example: 0
                                      x-required:
                                        - post
                                    value_data:
                                      type: object
                                      properties: {}
                                      description: |
                                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                      x-nullable: true
                                  description: Common Option Value properties.
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                            x-required:
                              - post
                              - put
                          image_url:
                            type: string
                            description: Publicly available image url
                        description: Common Option properties.
                      - type: object
                        properties:
                          name:
                            type: string
                            description: |
                              The unique option name, auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535042499-187
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 220
                  product_id: 192
                  name: Color (Colors only)
                  display_name: Color
                  type: swatch
                  sort_order: 0
                  option_values:
                    - id: 174
                      label: Beige
                      sort_order: 1
                      value_data:
                        colors:
                          - '#FAFAEB'
                      is_default: false
                    - id: 175
                      label: Grey
                      sort_order: 2
                      value_data:
                        colors:
                          - '#BDBDBD'
                      is_default: false
                    - id: 176
                      label: Black
                      sort_order: 3
                      value_data:
                        colors:
                          - '#000000'
                      is_default: false
                    - id: 189
                      label: Black-Walnut
                      sort_order: 4
                      value_data:
                        colors:
                          - '#e80ee8'
                      is_default: false
                  config: {}
                meta: {}
        '409':
          description: |
            The `Option` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Option` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: option
    delete:
      tags:
        - Product Variant Options
      summary: Delete a Product Variant Option
      description: Deletes a *Variant Option*.
      operationId: deleteOptionById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/OptionIdParam'
  '/catalog/products/{product_id}/options/{option_id}/values':
    get:
      tags:
        - Product Variant Option Values
      summary: Get All Product Variant Option Values
      description: Returns a list of all *Variant Option Values*. Optional parameters can be passed in.
      operationId: getOptionValues
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Option Value
                      type: object
                      allOf:
                        - title: Option Value Base
                          required:
                            - label
                            - sort_order
                          type: object
                          properties:
                            is_default:
                              type: boolean
                              description: |
                                The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                              example: false
                            label:
                              type: string
                              description: |
                                The text display identifying the value on the storefront. Required in a /POST.
                              example: Green
                              x-required:
                                - post
                            sort_order:
                              maximum: 2147483647
                              minimum: -2147483648
                              type: integer
                              description: |
                                The order in which the value will be displayed on the product page. Required in a /POST.
                              example: 0
                              x-required:
                                - post
                            value_data:
                              type: object
                              properties: {}
                              description: |
                                Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                              x-nullable: true
                          description: Common Option Value properties.
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Get Option Values response.
              example:
                data:
                  - id: 174
                    label: Beige
                    sort_order: 1
                    value_data:
                      colors:
                        - '#FAFAEB'
                    is_default: false
                  - id: 175
                    label: Grey
                    sort_order: 2
                    value_data:
                      colors:
                        - '#BDBDBD'
                    is_default: false
                  - id: 176
                    label: Black
                    sort_order: 3
                    value_data:
                      colors:
                        - '#000000'
                    is_default: false
                  - id: 189
                    label: Black-Walnut
                    sort_order: 4
                    value_data:
                      colors:
                        - '#e80ee8'
                    is_default: false
                meta:
                  pagination:
                    total: 4
                    count: 4
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Product Variant Option Values
      summary: Create a Product Variant Option Value
      description: |-
        Creates a *Variant Option Value*.

        **Required Fields**
        * label
        * sort_order

        **Read-Only Fields**
        * id

        **Limits**
        * 250 option values per option limit.
      operationId: createOptionValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Option Value Post
              description: The model for a POST to create option values on a product.
              allOf:
                - title: Option Value Base
                  required:
                    - label
                    - sort_order
                  type: object
                  properties:
                    is_default:
                      type: boolean
                      description: |
                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                      example: false
                    label:
                      type: string
                      description: |
                        The text display identifying the value on the storefront. Required in a /POST.
                      example: Green
                      x-required:
                        - post
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the value will be displayed on the product page. Required in a /POST.
                      example: 0
                      x-required:
                        - post
                    value_data:
                      type: object
                      properties: {}
                      description: |
                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                  description: Common Option Value properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Response
                type: object
                properties:
                  data:
                    title: Option Value
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            x-nullable: true
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 44
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  is_default: false
        '422':
          description: |
            The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: OptionValue
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/OptionIdParam'
  '/catalog/products/{product_id}/options/{option_id}/values/{value_id}':
    get:
      tags:
        - Product Variant Option Values
      summary: Get a Product Variant Option Value
      description: Returns a single *Variant Option Value*. Optional parameters can be passed in.
      operationId: getOptionValueById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Response
                type: object
                properties:
                  data:
                    title: Option Value
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            x-nullable: true
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 44
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  is_default: false
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Variant Option Values
      summary: Update a Product Variant Option Value
      description: |-
        Updates a *Variant Option Value*.

        **Read-Only Fields**
        * id
      operationId: updateOptionValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          A BigCommerce `OptionValue` object.
        content:
          application/json:
            schema:
              title: Option Value Put
              description: The model for a PUT to update option values on a product.
              allOf:
                - title: Option Value Base
                  required:
                    - label
                    - sort_order
                  type: object
                  properties:
                    is_default:
                      type: boolean
                      description: |
                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                      example: false
                    label:
                      type: string
                      description: |
                        The text display identifying the value on the storefront. Required in a /POST.
                      example: Green
                      x-required:
                        - post
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The order in which the value will be displayed on the product page. Required in a /POST.
                      example: 0
                      x-required:
                        - post
                    value_data:
                      type: object
                      properties: {}
                      description: |
                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                  description: Common Option Value properties.
                - type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the value; increments sequentially.
                      x-required:
                        - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Option Value Response
                type: object
                properties:
                  data:
                    title: Option Value
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            x-nullable: true
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 44
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  is_default: false
        '404':
          description: No option(s) were found with this query.
          content: {}
        '422':
          description: |
            The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: OptionValue
    delete:
      tags:
        - Product Variant Option Values
      summary: Delete a Product Variant Option Value
      description: Deletes a *Variant Option Value*.
      operationId: deleteOptionValueById
      parameters:
        - name: option_id
          in: path
          description: |
            The ID of the `Option`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/OptionIdParam'
      - $ref: '#/components/parameters/ValueIdParam'
  '/catalog/products/{product_id}/modifiers':
    get:
      tags:
        - Product Modifiers
      summary: Get All Product Modifiers
      description: Returns a list of all *Product Modifiers*. Optional parameters can be passed in.
      operationId: getModifiers
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productModifier_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Modifier Collection Response return for /GET All Modifiers.
              example:
                data:
                  - id: 206
                    product_id: 158
                    name: Insurance
                    display_name: Insurace
                    type: checkbox
                    required: true
                    config:
                      checkbox_label: $5 for insurance
                      checked_by_default: false
                    option_values:
                      - id: 183
                        option_id: 206
                        label: 'Yes'
                        sort_order: 0
                        value_data:
                          checked_value: true
                        is_default: false
                        adjusters:
                          price: {}
                          weight: {}
                          image_url: ''
                          purchasing_disabled:
                            status: false
                            message: ''
                      - id: 184
                        option_id: 206
                        label: 'No'
                        sort_order: 1
                        value_data:
                          checked_value: false
                        is_default: true
                        adjusters:
                          price: {}
                          weight: {}
                          image_url: ''
                          purchasing_disabled:
                            status: false
                            message: ''
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Product Modifiers
      summary: Create a Product Modifier
      description: |-
        Creates a *Product Modifier*.

        **Required Fields**
        * `required`
        * `display_name`
        * `type`

        **Read-Only Fields**
        * `id`

        **Notes**
        It takes two separate requests to create a new checkbox modifier with option values. Perform a request to create a modifier, then perform a second request to update option values.
      operationId: createModifier
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Post
              description: The model for a POST to create a modifier on a product.
              allOf:
                - title: Modifier Base
                  required:
                    - required
                    - type
                  type: object
                  properties:
                    type:
                      type: string
                      description: |
                        BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                      enum:
                        - date
                        - checkbox
                        - file
                        - text
                        - multi_line_text
                        - numbers_only_text
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                    required:
                      type: boolean
                      description: |
                        Whether or not this modifer is required or not at checkout. Required in a /POST.
                      x-required:
                        - post
                    sort_order:
                      type: integer
                      description: The order the modifiers display on the product detail page.
                    config:
                      title: Option Config
                      type: object
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2018-08-31T00:00:00+00:00'
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date-time
                          example: '2019-01-01T00:00:00+00:00'
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          example:
                            - images
                            - documents
                            - other
                          items:
                            type: string
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          example:
                            - pdf
                            - txt
                          items:
                            type: string
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                      description: The values for option config can vary based on the Modifier created.
                    option_values:
                      type: array
                      items:
                        title: Modifier Value
                        type: object
                        description: 'Part of Modifier Value Response '
                        allOf:
                          - title: Modifier Value Base
                            type: object
                            allOf:
                              - title: Option Value Base
                                required:
                                  - label
                                  - sort_order
                                type: object
                                properties:
                                  is_default:
                                    type: boolean
                                    description: |
                                      The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                    example: false
                                  label:
                                    type: string
                                    description: |
                                      The text display identifying the value on the storefront. Required in a /POST.
                                    example: Green
                                    x-required:
                                      - post
                                  sort_order:
                                    maximum: 2147483647
                                    minimum: -2147483648
                                    type: integer
                                    description: |
                                      The order in which the value will be displayed on the product page. Required in a /POST.
                                    example: 0
                                    x-required:
                                      - post
                                  value_data:
                                    type: object
                                    properties: {}
                                    description: |
                                      Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                description: Common Option Value properties.
                              - type: object
                                properties:
                                  adjusters:
                                    type: object
                                    properties:
                                      price:
                                        title: Adjuster
                                        type: object
                                        properties:
                                          adjuster:
                                            type: string
                                            description: |
                                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            enum:
                                              - relative
                                              - percentage
                                            x-nullable: true
                                          adjuster_value:
                                            type: number
                                            description: |
                                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            example: 5
                                        description: Adjuster for Complex Rules.
                                      weight:
                                        title: Adjuster
                                        type: object
                                        properties:
                                          adjuster:
                                            type: string
                                            description: |
                                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            enum:
                                              - relative
                                              - percentage
                                            x-nullable: true
                                          adjuster_value:
                                            type: number
                                            description: |
                                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                            example: 5
                                        description: Adjuster for Complex Rules.
                                      image_url:
                                        type: string
                                        description: |
                                          The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                        example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                      purchasing_disabled:
                                        type: object
                                        properties:
                                          status:
                                            type: boolean
                                            description: |
                                              Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                          message:
                                            type: string
                                            description: |
                                              The message displayed on the storefront when the purchasing disabled status is `true`.
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: |
                                  The unique numeric ID of the value; increments sequentially.
                  description: Common Modifier properties.
                - required:
                    - display_name
                  type: object
                  properties:
                    display_name:
                      type: string
                      description: |
                        The name of the option shown on the storefront.
                      example: Donation
                      x-required:
                        - post
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Response
                type: object
                properties:
                  data:
                    title: Modifer
                    type: object
                    description: Product Modifier
                    allOf:
                      - title: Modifier Base
                        required:
                          - required
                          - type
                        type: object
                        properties:
                          type:
                            type: string
                            description: |
                              BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                            enum:
                              - date
                              - checkbox
                              - file
                              - text
                              - multi_line_text
                              - numbers_only_text
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                          required:
                            type: boolean
                            description: |
                              Whether or not this modifer is required or not at checkout. Required in a /POST.
                            x-required:
                              - post
                          sort_order:
                            type: integer
                            description: The order the modifiers display on the product detail page.
                          config:
                            title: Option Config
                            type: object
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                            description: The values for option config can vary based on the Modifier created.
                          option_values:
                            type: array
                            items:
                              title: Modifier Value
                              type: object
                              description: 'Part of Modifier Value Response '
                              allOf:
                                - title: Modifier Value Base
                                  type: object
                                  allOf:
                                    - title: Option Value Base
                                      required:
                                        - label
                                        - sort_order
                                      type: object
                                      properties:
                                        is_default:
                                          type: boolean
                                          description: |
                                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                          example: false
                                        label:
                                          type: string
                                          description: |
                                            The text display identifying the value on the storefront. Required in a /POST.
                                          example: Green
                                          x-required:
                                            - post
                                        sort_order:
                                          maximum: 2147483647
                                          minimum: -2147483648
                                          type: integer
                                          description: |
                                            The order in which the value will be displayed on the product page. Required in a /POST.
                                          example: 0
                                          x-required:
                                            - post
                                        value_data:
                                          type: object
                                          properties: {}
                                          description: |
                                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                      description: Common Option Value properties.
                                    - type: object
                                      properties:
                                        adjusters:
                                          type: object
                                          properties:
                                            price:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            weight:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            image_url:
                                              type: string
                                              description: |
                                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                            purchasing_disabled:
                                              type: object
                                              properties:
                                                status:
                                                  type: boolean
                                                  description: |
                                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                                message:
                                                  type: string
                                                  description: |
                                                    The message displayed on the storefront when the purchasing disabled status is `true`.
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                        description: Common Modifier properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the modifier; increments sequentially.
                            example: 12
                          product_id:
                            type: integer
                            description: |
                              The unique numeric ID of the product to which the option belongs.
                            example: 77
                          name:
                            type: string
                            description: |
                              The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535039590-191
                          display_name:
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Donation
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `Modifier` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Modifier
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}':
    get:
      tags:
        - Product Modifiers
      summary: Get a Modifier
      description: Returns a single *Product Modifier*. Optional parameters can be passed in.
      operationId: getModifierById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productModifier_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Modifiers
      summary: Update a Modifier
      description: Updates a *Product Modifier*.
      operationId: updateModifier
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Put
              description: The model for a PUT to update a modifier on a product.
              allOf:
                - title: Modifier Base
                  required:
                    - required
                    - type
                  type: object
                  properties:
                    type:
                      type: string
                      description: |
                        BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                      enum:
                        - date
                        - checkbox
                        - file
                        - text
                        - multi_line_text
                        - numbers_only_text
                        - radio_buttons
                        - rectangles
                        - dropdown
                        - product_list
                        - product_list_with_images
                        - swatch
                      x-required:
                        - post
                    required:
                      type: boolean
                      description: |
                        Whether or not this modifer is required or not at checkout. Required in a /POST.
                      x-required:
                        - post
                    sort_order:
                      type: integer
                      description: The order the modifiers display on the product detail page.
                    config:
                      title: Option Config
                      type: object
                      properties:
                        default_value:
                          type: string
                          description: |
                            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                        checked_by_default:
                          type: boolean
                          description: |
                            (checkbox) Flag for setting the checkbox to be checked by default.
                        checkbox_label:
                          type: string
                          description: |
                            (checkbox) Label displayed for the checkbox option.
                        date_limited:
                          type: boolean
                          description: |
                            (date) Flag to limit the dates allowed to be entered on a date option.
                        date_limit_mode:
                          type: string
                          description: |
                            (date) The type of limit that is allowed to be entered on a date option.
                          example: range
                          enum:
                            - earliest
                            - range
                            - latest
                        date_earliest_value:
                          type: string
                          description: |
                            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date
                        date_latest_value:
                          type: string
                          description: |
                            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                          format: date
                        file_types_mode:
                          type: string
                          description: |
                            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                          example: specific
                          enum:
                            - specific
                            - all
                        file_types_supported:
                          type: array
                          description: |
                            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                              `other` - Allows file types defined in the `file_types_other` array.
                          items:
                            type: string
                            example: 'images, documents, other'
                        file_types_other:
                          type: array
                          description: |
                            (file) A list of other file types allowed with the file upload option.
                          items:
                            type: string
                            example: pdf
                        file_max_size:
                          type: integer
                          description: |
                            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                          example: 5
                        text_characters_limited:
                          type: boolean
                          description: |
                            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                        text_min_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                          example: 1
                        text_max_length:
                          type: integer
                          description: |
                            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                          example: 55
                        text_lines_limited:
                          type: boolean
                          description: |
                            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                          example: true
                        text_max_lines:
                          type: integer
                          description: |
                            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                          example: 4
                        number_limited:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the value of a number option.
                          example: true
                        number_limit_mode:
                          type: string
                          description: |
                            (numbers_only_text) The type of limit on values entered for a number option.
                          example: lowest
                          enum:
                            - lowest
                            - highest
                            - range
                        number_lowest_value:
                          type: number
                          description: |
                            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                          example: 100
                        number_highest_value:
                          type: number
                          description: |
                            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                        number_integers_only:
                          type: boolean
                          description: |
                            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                          example: false
                        product_list_adjusts_inventory:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                        product_list_adjusts_pricing:
                          type: boolean
                          description: |
                            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                        product_list_shipping_calc:
                          type: string
                          description: |
                            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                          example: weight
                          enum:
                            - none
                            - weight
                            - package
                      description: The values for option config can vary based on the Modifier created.
                    option_values:
                      type: array
                      items:
                        title: Modifier Value
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                        description: 'Part of Modifier Value Response '
                  description: Common Modifier properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Response
                type: object
                properties:
                  data:
                    title: Modifer
                    type: object
                    description: Product Modifier
                    allOf:
                      - title: Modifier Base
                        required:
                          - required
                          - type
                        type: object
                        properties:
                          type:
                            type: string
                            description: |
                              BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                            enum:
                              - date
                              - checkbox
                              - file
                              - text
                              - multi_line_text
                              - numbers_only_text
                              - radio_buttons
                              - rectangles
                              - dropdown
                              - product_list
                              - product_list_with_images
                              - swatch
                            x-required:
                              - post
                          required:
                            type: boolean
                            description: |
                              Whether or not this modifer is required or not at checkout. Required in a /POST.
                            x-required:
                              - post
                          sort_order:
                            type: integer
                            description: The order the modifiers display on the product detail page.
                          config:
                            title: Option Config
                            type: object
                            properties:
                              default_value:
                                type: string
                                description: |
                                  (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                              checked_by_default:
                                type: boolean
                                description: |
                                  (checkbox) Flag for setting the checkbox to be checked by default.
                              checkbox_label:
                                type: string
                                description: |
                                  (checkbox) Label displayed for the checkbox option.
                              date_limited:
                                type: boolean
                                description: |
                                  (date) Flag to limit the dates allowed to be entered on a date option.
                              date_limit_mode:
                                type: string
                                description: |
                                  (date) The type of limit that is allowed to be entered on a date option.
                                example: range
                                enum:
                                  - earliest
                                  - range
                                  - latest
                              date_earliest_value:
                                type: string
                                description: |
                                  (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              date_latest_value:
                                type: string
                                description: |
                                  (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                                format: date
                              file_types_mode:
                                type: string
                                description: |
                                  (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                                example: specific
                                enum:
                                  - specific
                                  - all
                              file_types_supported:
                                type: array
                                description: |
                                  (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                    `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                    `other` - Allows file types defined in the `file_types_other` array.
                                items:
                                  type: string
                                  example: 'images, documents, other'
                              file_types_other:
                                type: array
                                description: |
                                  (file) A list of other file types allowed with the file upload option.
                                items:
                                  type: string
                                  example: pdf
                              file_max_size:
                                type: integer
                                description: |
                                  (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                                example: 5
                              text_characters_limited:
                                type: boolean
                                description: |
                                  (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                              text_min_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                                example: 1
                              text_max_length:
                                type: integer
                                description: |
                                  (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                                example: 55
                              text_lines_limited:
                                type: boolean
                                description: |
                                  (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                                example: true
                              text_max_lines:
                                type: integer
                                description: |
                                  (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                                example: 4
                              number_limited:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the value of a number option.
                                example: true
                              number_limit_mode:
                                type: string
                                description: |
                                  (numbers_only_text) The type of limit on values entered for a number option.
                                example: lowest
                                enum:
                                  - lowest
                                  - highest
                                  - range
                              number_lowest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                                example: 100
                              number_highest_value:
                                type: number
                                description: |
                                  (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                              number_integers_only:
                                type: boolean
                                description: |
                                  (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                                example: false
                              product_list_adjusts_inventory:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                              product_list_adjusts_pricing:
                                type: boolean
                                description: |
                                  (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                              product_list_shipping_calc:
                                type: string
                                description: |
                                  (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                                example: weight
                                enum:
                                  - none
                                  - weight
                                  - package
                            description: The values for option config can vary based on the Modifier created.
                          option_values:
                            type: array
                            items:
                              title: Modifier Value
                              type: object
                              description: 'Part of Modifier Value Response '
                              allOf:
                                - title: Modifier Value Base
                                  type: object
                                  allOf:
                                    - title: Option Value Base
                                      required:
                                        - label
                                        - sort_order
                                      type: object
                                      properties:
                                        is_default:
                                          type: boolean
                                          description: |
                                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                          example: false
                                        label:
                                          type: string
                                          description: |
                                            The text display identifying the value on the storefront. Required in a /POST.
                                          example: Green
                                          x-required:
                                            - post
                                        sort_order:
                                          maximum: 2147483647
                                          minimum: -2147483648
                                          type: integer
                                          description: |
                                            The order in which the value will be displayed on the product page. Required in a /POST.
                                          example: 0
                                          x-required:
                                            - post
                                        value_data:
                                          type: object
                                          properties: {}
                                          description: |
                                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                      description: Common Option Value properties.
                                    - type: object
                                      properties:
                                        adjusters:
                                          type: object
                                          properties:
                                            price:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            weight:
                                              title: Adjuster
                                              type: object
                                              properties:
                                                adjuster:
                                                  type: string
                                                  description: |
                                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  enum:
                                                    - relative
                                                    - percentage
                                                  x-nullable: true
                                                adjuster_value:
                                                  type: number
                                                  description: |
                                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                  example: 5
                                              description: Adjuster for Complex Rules.
                                            image_url:
                                              type: string
                                              description: |
                                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                            purchasing_disabled:
                                              type: object
                                              properties:
                                                status:
                                                  type: boolean
                                                  description: |
                                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                                message:
                                                  type: string
                                                  description: |
                                                    The message displayed on the storefront when the purchasing disabled status is `true`.
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: |
                                        The unique numeric ID of the value; increments sequentially.
                        description: Common Modifier properties.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the modifier; increments sequentially.
                            example: 12
                          product_id:
                            type: integer
                            description: |
                              The unique numeric ID of the product to which the option belongs.
                            example: 77
                          name:
                            type: string
                            description: |
                              The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
                            example: Add-a-$5-Donation1535039590-191
                          display_name:
                            type: string
                            description: |
                              The name of the option shown on the storefront.
                            example: Donation
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `Modifier` was in conflict with another modifier or option. This is the result of duplicate unique fields, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Modifier
    delete:
      tags:
        - Product Modifiers
      summary: Delete a Modifier
      description: Deletes a *Product Modifier*.
      operationId: deleteModifierById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values':
    get:
      tags:
        - Product Modifier Values
      summary: Get All Modifier Values
      description: Returns a list of all product *Modifier Values*. Optional parameters can be passed in.
      operationId: getModifierValues
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/productModifierOptionValue_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Returns for GET All Modifier Values on a Product
              example:
                data:
                  - id: 190
                    option_id: 222
                    label: 'Yes'
                    sort_order: 0
                    value_data:
                      checked_value: true
                    is_default: false
                    adjusters:
                      price:
                        adjuster: relative
                        adjuster_value: 5
                      weight: {}
                      image_url: ''
                      purchasing_disabled:
                        status: false
                        message: ''
                  - id: 191
                    option_id: 222
                    label: 'No'
                    sort_order: 1
                    value_data:
                      checked_value: false
                    is_default: true
                    adjusters:
                      price: {}
                      weight: {}
                      image_url: ''
                      purchasing_disabled:
                        status: false
                        message: ''
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Product Modifier Values
      summary: Create Modifier Value
      description: |-
        Creates a *Modifier Value*.

        **Required Fields**
        * label
        * sort_order

        **Read-Only Fields**
        * id
      operationId: createModifierValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Value Post
              description: The model for a POST to create a modifier value on a product.
              allOf:
                - title: Modifier Value Base
                  allOf:
                    - title: Option Value Base
                      required:
                        - label
                        - sort_order
                      type: object
                      properties:
                        is_default:
                          type: boolean
                          description: |
                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                          example: false
                        label:
                          type: string
                          description: |
                            The text display identifying the value on the storefront. Required in a /POST.
                          example: Green
                          x-required:
                            - post
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: |
                            The order in which the value will be displayed on the product page. Required in a /POST.
                          example: 0
                          x-required:
                            - post
                        value_data:
                          type: object
                          properties: {}
                          description: |
                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                      description: Common Option Value properties.
                    - type: object
                      properties:
                        adjusters:
                          type: object
                          properties:
                            price:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            weight:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            image_url:
                              type: string
                              description: |
                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                            purchasing_disabled:
                              type: object
                              properties:
                                status:
                                  type: boolean
                                  description: |
                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                message:
                                  type: string
                                  description: |
                                    The message displayed on the storefront when the purchasing disabled status is `true`.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Response
                type: object
                properties:
                  data:
                    title: Modifier Value
                    type: object
                    description: 'Part of Modifier Value Response '
                    allOf:
                      - title: Modifier Value Base
                        type: object
                        allOf:
                          - title: Option Value Base
                            required:
                              - label
                              - sort_order
                            type: object
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            description: Common Option Value properties.
                          - type: object
                            properties:
                              adjusters:
                                type: object
                                properties:
                                  price:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  weight:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  image_url:
                                    type: string
                                    description: |
                                      The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                    example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                  purchasing_disabled:
                                    type: object
                                    properties:
                                      status:
                                        type: boolean
                                        description: |
                                          Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                      message:
                                        type: string
                                        description: |
                                          The message displayed on the storefront when the purchasing disabled status is `true`.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 190
                  option_id: 222
                  label: 'Yes'
                  sort_order: 0
                  value_data: {}
                  is_default: false
                  adjusters:
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    weight: {}
                    image_url: ''
                    purchasing_disabled:
                      status: false
                      message: ''
                meta: {}
        '422':
          description: |
            The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ModifierValue
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}':
    get:
      tags:
        - Product Modifier Values
      summary: Get a Modifier Value
      description: Returns a single *Modifier Value*. Optional parameters can be passed in.
      operationId: getModifierValueById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productModifierOptionValue_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 190
                  option_id: 222
                  label: 'Yes'
                  sort_order: 0
                  value_data: {}
                  is_default: false
                  adjusters:
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    weight: {}
                    image_url: ''
                    purchasing_disabled:
                      status: false
                      message: ''
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      security:
        - X-Auth-Token: []
    put:
      tags:
        - Product Modifier Values
      summary: Update a Modifier Value
      description: |-
        Updates a *Modifier Value*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateModifierValue
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Modifier Value Put
              description: The model for a PUT to update a modifier value on a product.
              allOf:
                - title: Modifier Value Base
                  allOf:
                    - title: Option Value Base
                      required:
                        - label
                        - sort_order
                      type: object
                      properties:
                        is_default:
                          type: boolean
                          description: |
                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                          example: false
                        label:
                          type: string
                          description: |
                            The text display identifying the value on the storefront. Required in a /POST.
                          example: Green
                          x-required:
                            - post
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: |
                            The order in which the value will be displayed on the product page. Required in a /POST.
                          example: 0
                          x-required:
                            - post
                        value_data:
                          type: object
                          properties: {}
                          description: |
                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                      description: Common Option Value properties.
                    - type: object
                      properties:
                        adjusters:
                          type: object
                          properties:
                            price:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            weight:
                              title: Adjuster
                              type: object
                              properties:
                                adjuster:
                                  type: string
                                  description: |
                                    The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  nullable: true
                                  enum:
                                    - relative
                                    - percentage
                                adjuster_value:
                                  type: number
                                  description: |
                                    The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                  example: 5
                              description: Adjuster for Complex Rules.
                            image_url:
                              type: string
                              description: |
                                The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                              example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                            purchasing_disabled:
                              type: object
                              properties:
                                status:
                                  type: boolean
                                  description: |
                                    Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                message:
                                  type: string
                                  description: |
                                    The message displayed on the storefront when the purchasing disabled status is `true`.
                - type: object
                  properties:
                    id:
                      type: integer
                      description: |
                        The unique numeric ID of the value; increments sequentially.
                      x-required:
                        - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Modifier Value Response
                type: object
                properties:
                  data:
                    title: Modifier Value
                    type: object
                    description: 'Part of Modifier Value Response '
                    allOf:
                      - title: Modifier Value Base
                        type: object
                        allOf:
                          - title: Option Value Base
                            required:
                              - label
                              - sort_order
                            type: object
                            properties:
                              is_default:
                                type: boolean
                                description: |
                                  The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                example: false
                              label:
                                type: string
                                description: |
                                  The text display identifying the value on the storefront. Required in a /POST.
                                example: Green
                                x-required:
                                  - post
                              sort_order:
                                maximum: 2147483647
                                minimum: -2147483648
                                type: integer
                                description: |
                                  The order in which the value will be displayed on the product page. Required in a /POST.
                                example: 0
                                x-required:
                                  - post
                              value_data:
                                type: object
                                properties: {}
                                description: |
                                  Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                            description: Common Option Value properties.
                          - type: object
                            properties:
                              adjusters:
                                type: object
                                properties:
                                  price:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  weight:
                                    title: Adjuster
                                    type: object
                                    properties:
                                      adjuster:
                                        type: string
                                        description: |
                                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        enum:
                                          - relative
                                          - percentage
                                        x-nullable: true
                                      adjuster_value:
                                        type: number
                                        description: |
                                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                        example: 5
                                    description: Adjuster for Complex Rules.
                                  image_url:
                                    type: string
                                    description: |
                                      The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                    example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                  purchasing_disabled:
                                    type: object
                                    properties:
                                      status:
                                        type: boolean
                                        description: |
                                          Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                      message:
                                        type: string
                                        description: |
                                          The message displayed on the storefront when the purchasing disabled status is `true`.
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the value; increments sequentially.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 190
                  option_id: 222
                  label: 'Yes'
                  sort_order: 0
                  value_data: {}
                  is_default: false
                  adjusters:
                    price:
                      adjuster: relative
                      adjuster_value: 5
                    weight: {}
                    image_url: ''
                    purchasing_disabled:
                      status: false
                      message: ''
                meta: {}
        '422':
          description: |
            The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ModifierValue
    delete:
      tags:
        - Product Modifier Values
      summary: Delete Modifier Value
      description: Deletes a *Modifier Value*.
      operationId: deleteModifierValueById
      parameters:
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier/Option Value`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
      - $ref: '#/components/parameters/ValueIdParam'
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}/image':
    post:
      tags:
        - Product Modifier Images
      summary: Create Modifier Image
      description: |-
        Creates a *Modifier Image*.

        The image will show on the storefront when the value is selected.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.
      operationId: createModifierImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: modifier_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
        - name: value_id
          in: path
          description: |
            The ID of the `Modifier`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Image Response
                type: object
                properties:
                  data:
                    title: Resource Image
                    type: object
                    properties:
                      image_url:
                        type: string
                        description: |
                          A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
                    description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Image Response returns for:
                  * Create Variant Image
                  * Create Modifier Image
                  * Create Category Image
                  * Create Brand Image
              example:
                data:
                  image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            Modifier image was not valid. This is the result of missing `image_file` fields, or of a non-URL value for the `image_file` field. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ModifierIdParam'
      - $ref: '#/components/parameters/ValueIdParam'
  '/catalog/products/{product_id}/complex-rules':
    get:
      tags:
        - Product Complex Rules
      summary: Get Complex Rules
      description: Returns a list of all product *Complex Rules*. Optional parameters may be passed in.
      operationId: getComplexRules
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Complex Rule Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/complexRule_Base'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
                description: Complex Rule Response
              example:
                data:
                  - id: 82
                    product_id: 195
                    sort_order: 0
                    enabled: true
                    stop: false
                    price_adjuster:
                      adjuster: relative
                      adjuster_value: 8
                    weight_adjuster: {}
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    purchasing_hidden: false
                    image_url: ''
                    conditions:
                      - rule_id: 82
                        modifier_id: 221
                        modifier_value_id: 175
                        variant_id: 1
                        combination_id: 0
                  - id: 83
                    product_id: 195
                    sort_order: 1
                    enabled: true
                    stop: false
                    price_adjuster: {}
                    weight_adjuster:
                      adjuster: relative
                      adjuster_value: 3
                    purchasing_disabled: false
                    purchasing_disabled_message: ''
                    purchasing_hidden: false
                    image_url: ''
                    conditions:
                      - rule_id: 83
                        modifier_id: 221
                        modifier_value_id: 174
                        variant_id: 1
                        combination_id: 0
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Product Complex Rules
      summary: Create a Complex Rule
      description: |-
        Creates a product *Complex Rule*.

        **Required Fields**
        - modifier_id
        - modifier_value_id
        - modifier_value_id
        - variant_id

        **Read-Only Fields**
        - complex_rule_id
        - conditions_id
        - rule_id
        - combination_id
        - id
      operationId: createComplexRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Complex Rule
              type: object
              properties:
                product_id:
                  type: integer
                  description: |
                    The unique numeric ID of the product with which the rule is associated; increments sequentially.
                  nullable: true
                  example: 67
                  x-required:
                    - post
                    - put
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    The priority to give this rule when making adjustments to the product properties.
                  example: 0
                enabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                  example: true
                stop:
                  type: boolean
                  description: |
                    Flag for determining whether other rules should not be applied after this rule has been applied.
                purchasing_disabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                purchasing_disabled_message:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Message displayed on the storefront when a rule disables the purchasing of a product.
                  example: This product is not available at this time.
                purchasing_hidden:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                image_url:
                  type: string
                  description: |
                    The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                price_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                weight_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                conditions:
                  type: array
                  items:
                    title: Complex Rule Condition
                    required:
                      - modifier_id
                      - modifier_value_id
                      - variant_id
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the rule condition; increments sequentially. Read-Only
                        nullable: true
                        example: 3
                      rule_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule with which the condition is associated.
                          Read-Only
                        nullable: true
                        example: 4
                      modifier_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 55
                      modifier_value_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier value with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 256
                      variant_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the variant with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 1
                      combination_id:
                        type: integer
                        description: |
                          (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                    description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
              description: Common ComplexRule properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Complex Rule
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule; increments sequentially.
                          Read-Only
                        example: 5
                      product_id:
                        type: integer
                        description: |
                          The unique numeric ID of the product with which the rule is associated; increments sequentially.
                        nullable: true
                        example: 67
                        x-required:
                          - post
                          - put
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The priority to give this rule when making adjustments to the product properties.
                        example: 0
                      enabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                        example: true
                      stop:
                        type: boolean
                        description: |
                          Flag for determining whether other rules should not be applied after this rule has been applied.
                      purchasing_disabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Message displayed on the storefront when a rule disables the purchasing of a product.
                        example: This product is not available at this time.
                      purchasing_hidden:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                      image_url:
                        type: string
                        description: |
                          The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                      price_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            nullable: true
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      weight_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            nullable: true
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      conditions:
                        type: array
                        items:
                          title: Complex Rule Condition
                          required:
                            - modifier_id
                            - modifier_value_id
                            - variant_id
                          type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the rule condition; increments sequentially. Read-Only
                              nullable: true
                              example: 3
                            rule_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the rule with which the condition is associated.
                                Read-Only
                              nullable: true
                              example: 4
                            modifier_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier with which the rule condition is associated.
                                Required in /POST.
                              nullable: true
                              example: 55
                            modifier_value_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier value with which the rule condition is associated.
                                Required in /POST.
                              nullable: true
                              example: 256
                            variant_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the variant with which the rule condition is associated.
                                Required in /POST.
                              nullable: true
                              example: 1
                            combination_id:
                              type: integer
                              description: |
                                (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                          description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                    description: Common ComplexRule properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ComplexRule
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/complex-rules/{complex_rule_id}':
    get:
      tags:
        - Product Complex Rules
      summary: Get a Complex Rule
      description: Returns a single *Complex Rule*. Optional parameters can be passed in.
      operationId: getComplexRuleById
      parameters:
        - name: complex_rule_id
          in: path
          description: |
            The ID of the `ComplexRule`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Complex Rule
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule; increments sequentially.
                          Read-Only
                        example: 5
                      product_id:
                        type: integer
                        description: |
                          The unique numeric ID of the product with which the rule is associated; increments sequentially.
                        example: 67
                        x-required:
                          - post
                          - put
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The priority to give this rule when making adjustments to the product properties.
                        example: 0
                      enabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                        example: true
                      stop:
                        type: boolean
                        description: |
                          Flag for determining whether other rules should not be applied after this rule has been applied.
                      purchasing_disabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Message displayed on the storefront when a rule disables the purchasing of a product.
                        example: This product is not available at this time.
                      purchasing_hidden:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                      image_url:
                        type: string
                        description: |
                          The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                      price_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      weight_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      conditions:
                        type: array
                        items:
                          title: Complex Rule Condition
                          required:
                            - modifier_id
                            - modifier_value_id
                            - variant_id
                          type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the rule condition; increments sequentially. Read-Only
                              example: 3
                            rule_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the rule with which the condition is associated.
                                Read-Only
                              example: 4
                            modifier_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier with which the rule condition is associated.
                                Required in /POST.
                              example: 55
                            modifier_value_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier value with which the rule condition is associated.
                                Required in /POST.
                              example: 256
                            variant_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the variant with which the rule condition is associated.
                                Required in /POST.
                              example: 1
                            combination_id:
                              type: integer
                              description: |
                                (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                          description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                    description: Common ComplexRule properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Complex Rules
      summary: Update a Complex Rule
      description: |-
        Updates a *Complex Rule*.

        **Required Fields**:
        - none

        **Read-Only Fields**:
        - complex_rule_id
        - conditions_id
        - rule_id
        - combination_id
        - id
      operationId: updateComplexRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: complex_rule_id
          in: path
          description: |
            The ID of the `ComplexRule`.
          required: true
          schema:
            type: integer

      requestBody:
        content:
          application/json:
            schema:
              title: Complex Rule
              type: object
              properties:
                id:
                  type: integer
                  description: |-
                    The unique numeric ID of the rule; increments sequentially.
                    Read-Only
                  example: 5
                product_id:
                  type: integer
                  description: |
                    The unique numeric ID of the product with which the rule is associated; increments sequentially.
                  nullable: true
                  example: 67
                  x-required:
                    - post
                    - put
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    The priority to give this rule when making adjustments to the product properties.
                  example: 0
                enabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                  example: true
                stop:
                  type: boolean
                  description: |
                    Flag for determining whether other rules should not be applied after this rule has been applied.
                purchasing_disabled:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                purchasing_disabled_message:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Message displayed on the storefront when a rule disables the purchasing of a product.
                  example: This product is not available at this time.
                purchasing_hidden:
                  type: boolean
                  description: |
                    Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                image_url:
                  type: string
                  description: |
                    The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                price_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                weight_adjuster:
                  title: Adjuster
                  type: object
                  properties:
                    adjuster:
                      type: string
                      description: |
                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      nullable: true
                      enum:
                        - relative
                        - percentage
                    adjuster_value:
                      type: number
                      description: |
                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                      example: 5
                  description: Adjuster for Complex Rules.
                conditions:
                  type: array
                  items:
                    title: Complex Rule Condition
                    required:
                      - modifier_id
                      - modifier_value_id
                      - variant_id
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the rule condition; increments sequentially. Read-Only
                        nullable: true
                        example: 3
                      rule_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule with which the condition is associated.
                          Read-Only
                        nullable: true
                        example: 4
                      modifier_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 55
                      modifier_value_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the modifier value with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 256
                      variant_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the variant with which the rule condition is associated.
                          Required in /POST.
                        nullable: true
                        example: 1
                      combination_id:
                        type: integer
                        description: |
                          (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                    description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
              description: Common ComplexRule properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Complex Rule
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |-
                          The unique numeric ID of the rule; increments sequentially.
                          Read-Only
                        example: 5
                      product_id:
                        type: integer
                        description: |
                          The unique numeric ID of the product with which the rule is associated; increments sequentially.
                        example: 67
                        x-required:
                          - post
                          - put
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The priority to give this rule when making adjustments to the product properties.
                        example: 0
                      enabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                        example: true
                      stop:
                        type: boolean
                        description: |
                          Flag for determining whether other rules should not be applied after this rule has been applied.
                      purchasing_disabled:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Message displayed on the storefront when a rule disables the purchasing of a product.
                        example: This product is not available at this time.
                      purchasing_hidden:
                        type: boolean
                        description: |
                          Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                      image_url:
                        type: string
                        description: |
                          The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                      price_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      weight_adjuster:
                        title: Adjuster
                        type: object
                        properties:
                          adjuster:
                            type: string
                            description: |
                              The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            enum:
                              - relative
                              - percentage
                          adjuster_value:
                            type: number
                            description: |
                              The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                            example: 5
                        description: Adjuster for Complex Rules.
                      conditions:
                        type: array
                        items:
                          title: Complex Rule Condition
                          required:
                            - modifier_id
                            - modifier_value_id
                            - variant_id
                          type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the rule condition; increments sequentially. Read-Only
                              example: 3
                            rule_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the rule with which the condition is associated.
                                Read-Only
                              example: 4
                            modifier_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier with which the rule condition is associated.
                                Required in /POST.
                              example: 55
                            modifier_value_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the modifier value with which the rule condition is associated.
                                Required in /POST.
                              example: 256
                            variant_id:
                              type: integer
                              description: |-
                                The unique numeric ID of the variant with which the rule condition is associated.
                                Required in /POST.
                              example: 1
                            combination_id:
                              type: integer
                              description: |
                                (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                          description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                    description: Common ComplexRule properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '409':
          description: |
            The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: ComplexRule
    delete:
      tags:
        - Product Complex Rules
      summary: Delete a Complex Rule
      description: Deletes a product *Complex Rule*.
      operationId: deleteComplexRuleById
      parameters:
        - name: complex_rule_id
          in: path
          description: |
            The ID of the `ComplexRule`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ComplexRuleIdParam'
  '/catalog/products/{product_id}/custom-fields':
    get:
      tags:
        - Product Custom Fields
      summary: Get Custom Fields
      description: Returns a list of product *Custom Fields*. Optional parameters can be passed in.
      operationId: getCustomFields
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Custom Field
                      required:
                        - name
                        - value
                      type: object
                      properties:
                        id:
                          minimum: 1
                          type: integer
                          description: |-
                            The unique numeric ID of the custom field; increments sequentially.
                            Read-Only
                          example: 6
                        name:
                          maxLength: 250
                          minLength: 1
                          type: string
                          description: |
                            The name of the field, shown on the storefront, orders, etc. Required for /POST
                          example: ISBN
                          x-required:
                            - post
                        value:
                          maxLength: 250
                          minLength: 1
                          type: string
                          description: |
                            The name of the field, shown on the storefront, orders, etc. Required for /POST
                          example: '1234567890123'
                          x-required:
                            - post
                      description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - name: Release year
                    value: '1987'
                    id: 1
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      previous: '?page=1&limit=50'
                      current: '?page=1&limit=50'
                      next: '?page=1&limit=50'
    post:
      tags:
        - Product Custom Fields
      summary: Create a Custom Fields
      description: |-
        Creates a *Custom Field*.

        **Required Fields:**
        - name
        - value

        **Read-Only:**
        - id

        **Limits**
        - 200 custom fields per product limit.
        - 255 characters per custom field limit.
      operationId: createCustomField
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Custom Field
              required:
                - name
                - value
              type: object
              properties:
                name:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: ISBN
                  x-required:
                    - post
                value:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: '1234567890123'
                  x-required:
                    - post
              description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Custom Field
                    required:
                      - name
                      - value
                    type: object
                    properties:
                      id:
                        minimum: 1
                        type: integer
                        description: |-
                          The unique numeric ID of the custom field; increments sequentially.
                          Read-Only
                        example: 6
                      name:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: ISBN
                        x-required:
                          - post
                      value:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: '1234567890123'
                        x-required:
                          - post
                    description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  name: Release Year
                  value: '1976'
                  id: 2
                meta: {}
        '404':
          description: |
            The parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: CustomField
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/custom-fields/{custom_field_id}':
    get:
      tags:
        - Product Custom Fields
      summary: Get a Custom Field
      description: Returns a single *Custom Field*. Optional parameters can be passed in.
      operationId: getCustomFieldById
      parameters:
        - name: custom_field_id
          in: path
          description: |
            The ID of the `CustomField`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/productCustomField_Base'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  name: Release Year
                  value: '1976'
                  id: 2
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Custom Fields
      summary: Update a Custom Field
      description: |-
        Updates a *Custom Field*.

        **Required Fields**
        - none

        **Read-Only**
        - id
      operationId: updateCustomField
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: custom_field_id
          in: path
          description: |
            The ID of the `CustomField`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Custom Field
              required:
                - name
                - value
              type: object
              properties:
                id:
                  minimum: 1
                  type: integer
                  description: |-
                    The unique numeric ID of the custom field; increments sequentially.
                    Read-Only
                  example: 6
                name:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: ISBN
                  x-required:
                    - post
                value:
                  maxLength: 250
                  minLength: 1
                  type: string
                  description: |
                    The name of the field, shown on the storefront, orders, etc. Required for /POST
                  example: '1234567890123'
                  x-required:
                    - post
              description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Custom Field
                    required:
                      - name
                      - value
                    type: object
                    properties:
                      id:
                        minimum: 1
                        type: integer
                        description: |-
                          The unique numeric ID of the custom field; increments sequentially.
                          Read-Only
                        example: 6
                      name:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: ISBN
                        x-required:
                          - post
                      value:
                        maxLength: 250
                        minLength: 1
                        type: string
                        description: |
                          The name of the field, shown on the storefront, orders, etc. Required for /POST
                        example: '1234567890123'
                        x-required:
                          - post
                    description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  name: Release Year
                  value: '1976'
                  id: 2
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: CustomField
    delete:
      tags:
        - Product Custom Fields
      summary: Delete a Custom Field
      description: Deletes a product *Custom Field*.
      operationId: deleteCustomFieldById
      parameters:
        - name: custom_field_id
          in: path
          description: |
            The ID of the `CustomField`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: '`204 No Content`. Action has been enacted and no further information is to be supplied. `null` is returned.'
          content: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/CustomFieldIdParam'
  '/catalog/products/{product_id}/bulk-pricing-rules':
    get:
      tags:
        - Product Bulk Pricing Rules
      summary: Get All Bulk Pricing Rules
      description: Returns a list of *Bulk Pricing Rules*. Optional parameters can be passed in.
      operationId: getBulkPricingRules
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                              readOnly: true
                          required:
                            - id
                        - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 83
                    quantity_min: 1
                    quantity_max: 3
                    type: price
                    amount: 1
                  - id: 84
                    quantity_min: 4
                    quantity_max: 0
                    type: price
                    amount: 1
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Bulk Pricing Rules
      summary: Create a Bulk Pricing Rule
      description: |-
        Creates a *Bulk Pricing Rule*.

        **Required Fields**
        - quantity_min
        - quantity_max
        - type
        - amount

        **Read-Only Fields**
        - id

        **Limits**
        - 50 bulk pricing rule per product limit.
      operationId: createBulkPricingRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkPricingRule_Full'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                            readOnly: true
                        required:
                          - id
                      - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    title: Meta
                    type: object
                    description: Empty meta object; may be used later.
              example:
                data:
                  id: 83
                  quantity_min: 1
                  quantity_max: 3
                  type: price
                  amount: 1
                meta: {}
        '404':
          description: |
            The parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: BulkPricingRule
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/bulk-pricing-rules/{bulk_pricing_rule_id}':
    get:
      tags:
        - Product Bulk Pricing Rules
      summary: Get a Bulk Pricing Rule
      description: Returns a single *Bulk Pricing Rule*. Optional parameters can be passed in.
      operationId: getBulkPricingRuleById
      parameters:
        - name: bulk_pricing_rule_id
          in: path
          description: |
            The ID of the `BulkPricingRule`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                            readOnly: true
                        required:
                          - id
                      - $ref: '#/components/schemas/bulkPricingRule_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 83
                  quantity_min: 1
                  quantity_max: 3
                  type: price
                  amount: 1
                meta: {}
        '404':
          description: |
            The resource or parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Bulk Pricing Rules
      summary: Update a Bulk Pricing Rule
      description: |-
        Updates a *Bulk Pricing Rule*.

        **Required Fields**
        * none

        **Read-Only Fields**
        - id
      operationId: updateBulkPricingRule
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: bulk_pricing_rule_id
          in: path
          description: |
            The ID of the `BulkPricingRule`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    id:
                      type: integer
                      description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                      readOnly: true
                  required:
                    - id
                - $ref: '#/components/schemas/bulkPricingRule_Full'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    title: Bulk Pricing Rule
                    required:
                      - amount
                      - quantity_max
                      - quantity_min
                      - type
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                        readOnly: true
                      quantity_min:
                        minimum: 0
                        type: integer
                        description: |
                          The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.
                          Required in /POST.
                        example: 10
                        x-required:
                          - post
                      quantity_max:
                        minimum: 0
                        type: integer
                        description: |-
                          The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.
                          Required in /POST.
                        example: 50
                        x-required:
                          - post
                      type:
                        type: string
                        description: |-
                          The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.
                          Required in /POST.
                        example: price
                        enum:
                          - price
                          - percent
                          - fixed
                        x-required:
                          - post
                      amount:
                        type: integer
                        description: |-
                          The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer.
                          Required in /POST.
                    description: Common BulkPricingRule properties
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 83
                  quantity_min: 1
                  quantity_max: 3
                  type: price
                  amount: 1
                meta: {}
        '404':
          description: |
            The resource or parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: BulkPricingRule
    delete:
      tags:
        - Product Bulk Pricing Rules
      summary: Delete a Bulk Pricing Rule
      description: Deletes a *Bulk Pricing Rule*.
      operationId: deleteBulkPricingRuleById
      parameters:
        - name: bulk_pricing_rule_id
          in: path
          description: |
            The ID of the `BulkPricingRule`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
        '404':
          description: |
            The resource or parent resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/BulkPricingRuleIdParam'
  '/catalog/products/{product_id}/metafields':
    get:
      tags:
        - Product Metafields
      summary: Get All Product Metafields
      description: Returns a list of *Product Metafields*. Optional parameters can be passed in.
      operationId: getProductMetafieldsByProductId
      parameters:
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: app_only
                    resource_type: product
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                  - id: 7
                    key: Sublocation
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: read
                    resource_type: product
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Metafields
      summary: Create a Product Metafield
      description: |-
        Creates a *Product Metafield*.

        **Required Fields:**
        * permission_set
        * namespace
        * key
        * value

        **Read-Only Fields**
        * id

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createProductMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 8
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: Inventory Namespace
                  permission_set: read
                  resource_type: product
                  resource_id: 158
                  description: Where products are located
                  date_created: '2018-09-13T16:42:37+00:00'
                  date_modified: '2018-09-13T16:42:37+00:00'
                meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |-
                      The HTTP status code.
                  title:
                    type: string
                    description: |-
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/metafields/{metafield_id}':
    get:
      tags:
        - Product Metafields
      summary: Get a Product Metafield
      description: Returns a single *Product Metafield*. Optional parameters can be passed in.
      operationId: getProductMetafieldByProductId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Metafields
      summary: Update a Product Metafield
      description: "Updates a *Product Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified using the API account that created the metafield:\n\t* `namespace`\n\t* `key`\n\t* `permission_set`\n\t* `value`\n\n**Usage Notes**\n* Attempting to modify the `namespace`, `key`, `permission_set`, or `value` field using an API account different from the one used to create those metafields will result in a `403` error message. "
      operationId: updateProductMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Product Metafields
      summary: Delete a Product Metafield
      description: Deletes a *Product Metafield*.
      operationId: deleteProductMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/products/{product_id}/reviews':
    get:
      tags:
        - Product Reviews
      summary: Get Product Reviews
      description: Returns a list of all *Product Reviews*. Optional parameters can be passed in.
      operationId: getProductReviews
      parameters:
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: status
          in: query
          description: 'Filter items by status. `1` for approved, `0` for pending.'
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Product Review
                      type: object
                      description: |
                        A product review model.
                      allOf:
                        - title: Product Review Base
                          required:
                            - date_reviewed
                            - title
                          type: object
                          properties:
                            title:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: |-
                                The title for the product review.
                                Required in /POST.
                            text:
                              type: string
                              description: |
                                The text for the product review.
                            status:
                              type: string
                              description: |
                                The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                            rating:
                              type: integer
                              description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                            email:
                              type: string
                              description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                            name:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: The name of the reviewer.
                            date_reviewed:
                              type: string
                              description: |
                                Date the product was reviewed. Required in /POST.
                              format: date-time
                        - type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique numeric ID of the product review; increments sequentially.
                            product_id:
                              type: integer
                              description: |
                                The unique numeric identifier for the product with which the review is associated.
                            date_created:
                              type: string
                              description: |
                                Date the product review was created.
                              format: date-time
                            date_modified:
                              type: string
                              description: |
                                Date the product review was modified.
                              format: date-time
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '204':
          description: |
            There are no reviews on this product.
          content: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Product Reviews
      summary: Create a Product Review
      description: |-
        Creates a *Product Review*.

        **Required Fields**
        - title
        - date_reviewed

        **Read-Only Fields**
        * id
      operationId: createProductReview
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Product Review Post
              description: |
                The model for a POST to create a product review.
              allOf:
                - title: Product Review Base
                  required:
                    - date_reviewed
                    - title
                  type: object
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |-
                        The title for the product review.
                        Required in /POST.
                    text:
                      type: string
                      description: |
                        The text for the product review.
                    status:
                      type: string
                      description: |
                        The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                    rating:
                      type: integer
                      description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                    email:
                      type: string
                      description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                    name:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: The name of the reviewer.
                    date_reviewed:
                      type: string
                      description: |
                        Date the product was reviewed. Required in /POST.
                      format: date-time
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Response
                type: object
                properties:
                  data:
                    title: Product Review
                    type: object
                    description: |
                      A product review model.
                    allOf:
                      - title: Product Review Base
                        required:
                          - date_reviewed
                          - title
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |-
                              The title for the product review.
                              Required in /POST.
                          text:
                            type: string
                            description: |
                              The text for the product review.
                          status:
                            type: string
                            description: |
                              The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                          rating:
                            type: integer
                            description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                          email:
                            type: string
                            description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                          name:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: The name of the reviewer.
                          date_reviewed:
                            type: string
                            description: |
                              Date the product was reviewed. Required in /POST.
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product review; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the review is associated.
                          date_created:
                            type: string
                            description: |
                              Date the product review was created.
                            format: date-time
                          date_modified:
                            type: string
                            description: |
                              Date the product review was modified.
                            format: date-time
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  title: irur
                  text: anim aute
                  status: Lorem ad sed voluptate
                  rating: 3
                  email: esse Lorem laborum aute
                  name: 'ut in '
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  id: 82495037
                  product_id: 22609026
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                meta: {}
        '404':
          description: |
            The product ID does not exist.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productReview
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
  '/catalog/products/{product_id}/reviews/{review_id}':
    get:
      tags:
        - Product Reviews
      summary: Get a Product Review
      description: Returns a single *Product Review*. Optional parameters maybe passed in.
      operationId: getProductReviewById
      parameters:
        - name: review_id
          in: path
          description: |
            The ID of the `review` that is being operated on.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Response
                type: object
                properties:
                  data:
                    title: Product Review
                    type: object
                    description: |
                      A product review model.
                    allOf:
                      - title: Product Review Base
                        required:
                          - date_reviewed
                          - title
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |-
                              The title for the product review.
                              Required in /POST.
                          text:
                            type: string
                            description: |
                              The text for the product review.
                          status:
                            type: string
                            description: |
                              The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                          rating:
                            type: integer
                            description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                          email:
                            type: string
                            description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                          name:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: The name of the reviewer.
                          date_reviewed:
                            type: string
                            description: |
                              Date the product was reviewed. Required in /POST.
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product review; increments sequentially.
                          date_created:
                            type: string
                            description: |
                              Date the product review was created.
                            format: date-time
                          date_modified:
                            type: string
                            description: |
                              Date the product review was modified.
                            format: date-time
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  title: irur
                  text: anim aute
                  status: Lorem ad sed voluptate
                  rating: 3
                  email: esse Lorem laborum aute
                  name: 'ut in '
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  id: 82495037
                  product_id: 22609026
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Product Reviews
      summary: Update a Product Review
      description: |-
        Updates a *Product Review*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateProductReview
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: review_id
          in: path
          description: |
            The ID of the `review` that is being operated on.
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          A BigCommerce `ProductReview` object.
        content:
          application/json:
            schema:
              title: Product Review Put
              description: |
                The model for a PUT to update a product review.
              allOf:
                - title: Product Review Base
                  required:
                    - date_reviewed
                    - title
                  type: object
                  properties:
                    title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |-
                        The title for the product review.
                        Required in /POST.
                    text:
                      type: string
                      description: |
                        The text for the product review.
                    status:
                      type: string
                      description: |
                        The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                    rating:
                      type: integer
                      description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                    email:
                      type: string
                      description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                    name:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: The name of the reviewer.
                    date_reviewed:
                      type: string
                      description: |
                        Date the product was reviewed. Required in /POST.
                      format: date-time
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Product Review Response
                type: object
                properties:
                  data:
                    title: Product Review
                    type: object
                    description: |
                      A product review model.
                    allOf:
                      - title: Product Review Base
                        required:
                          - date_reviewed
                          - title
                        type: object
                        properties:
                          title:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |-
                              The title for the product review.
                              Required in /POST.
                          text:
                            type: string
                            description: |
                              The text for the product review.
                          status:
                            type: string
                            description: |
                              The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                          rating:
                            type: integer
                            description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                          email:
                            type: string
                            description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                          name:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: The name of the reviewer.
                          date_reviewed:
                            type: string
                            description: |
                              Date the product was reviewed. Required in /POST.
                            format: date-time
                      - type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the product review; increments sequentially.
                          product_id:
                            type: integer
                            description: |
                              The unique numeric identifier for the product with which the review is associated.
                          date_created:
                            type: string
                            description: |
                              Date the product review was created.
                            format: date-time
                          date_modified:
                            type: string
                            description: |
                              Date the product review was modified.
                            format: date-time
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |
                  Response payload for the BigCommerce API.
              example:
                data:
                  title: irur
                  text: anim aute
                  status: Lorem ad sed voluptate
                  rating: 3
                  email: esse Lorem laborum aute
                  name: 'ut in '
                  date_reviewed: '2011-12-31T13:40:42.971Z'
                  id: 82495037
                  product_id: 22609026
                  date_created: '1985-01-17T07:37:20.439Z'
                  date_modified: '2004-09-28T14:38:21.973Z'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: productReview
    delete:
      tags:
        - Product Reviews
      summary: Delete a Product Review
      description: Deletes a *Product Review*.
      operationId: deleteProductReview
      parameters:
        - name: review_id
          in: path
          description: |
            The ID of the `review` that is being operated on.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ProductIdParam'
      - $ref: '#/components/parameters/ReviewIdParam'
  '/catalog/categories':
    get:
      tags:
        - Category
      summary: Get All Categories
      description: Returns a list of *Categories*. Optional filter parameters can be passed in.
      operationId: getCategories
      parameters:
        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: 'name:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: parent_id
          in: query
          description: 'Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. '
          schema:
            type: integer
        - name: 'parent_id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
        - name: 'page_title:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: keyword
          in: query
          description: 'Filter items by keywords. eg. new, towel, bath'
          schema:
            type: string
        - name: is_visible
          in: query
          description: 'Filter items by if visible on the storefront. '
          schema:
            type: boolean
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Base
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 19
                    parent_id: 0
                    name: Garden
                    description: <p>This is the garden description</p>
                    views: 0
                    sort_order: 2
                    page_title: page title
                    meta_keywords:
                      - meta keyword
                    meta_description: meta description
                    layout_file: category.html
                    image_url: ''
                    is_visible: true
                    search_keywords: search keywords
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/
                      is_customized: false
                  - id: 20
                    parent_id: 0
                    name: Publications
                    description: ''
                    views: 0
                    sort_order: 4
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /publications/
                      is_customized: false
                  - id: 21
                    parent_id: 0
                    name: Kitchen
                    description: ''
                    views: 0
                    sort_order: 3
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /kitchen/
                      is_customized: false
                  - id: 22
                    parent_id: 0
                    name: Utility
                    description: ''
                    views: 0
                    sort_order: 5
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /utility/
                      is_customized: false
                  - id: 23
                    parent_id: 0
                    name: Shop All
                    description: ''
                    views: 0
                    sort_order: 0
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /shop-all/
                      is_customized: false
                  - id: 39
                    parent_id: 19
                    name: Bath
                    description: ''
                    views: 0
                    sort_order: 0
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/bath/
                      is_customized: false
                meta:
                  pagination:
                    total: 6
                    count: 6
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Category
      summary: Create a Category
      description: "Creates a *Category*.\n\nUse this endpoint when an API only works with categories of a default BigCommerce storefront (`channel_id=1`). \n\nUse the [Create Categories](/docs/rest-management/catalog/categories-batch#create-categories) endpoint when an API works with categories across different category trees that belong to different storefront channels.\n\n**Required Fields**:\n- `parent_id`: \n\t- To create a child category, set the `parent_id` to the parent category.\n\t- To create a top level category, set the `parent_id` to `0`.\n- `name`\n\n**Read-Only Fields**:\n- `id`\n\n**Limits**:\n- 16,000 categories per store limit.\n- 1,000 categories per product limit.\n- 50 characters category name length.\n- 8 levels of category depth limit.\n- 65,642 characters category description length limit."
      operationId: createCategory
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Category
              type: object
              description: Common Category object properties.
              properties:
                parent_id:
                  type: integer
                  description: |-
                    The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
                    Required in a POST if creating a child category.
                  example: 2
                  x-required:
                    - post
                name:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    The name displayed for the category. Name is unique with respect to the category's siblings.
                    Required in a POST.
                  example: Bath
                  x-required:
                    - post
                description:
                  type: string
                  description: |
                    The product description, which can include HTML formatting.
                  example: <p>We offer a wide variety of products perfect for relaxing</p>
                views:
                  type: integer
                  description: |
                    Number of views the category has on the storefront.
                  example: 1050
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
                  example: 3
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Custom title for the category page. If not defined, the category name will be used as the meta title.
                  example: Bath
                search_keywords:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate the category when searching the store.
                meta_keywords:
                  type: array
                  description: |
                    Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
                  items:
                    type: string
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    Custom meta description for the category page. If not defined, the store's default meta description will be used.
                layout_file:
                  maxLength: 500
                  minLength: 0
                  type: string
                  description: |
                    A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).
                  example: category.html
                is_visible:
                  type: boolean
                  description: |
                    Flag to determine whether the category should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
                default_product_sort:
                  type: string
                  description: |
                    Determines how the products are sorted on category page load.
                  enum:
                    - use_store_settings
                    - featured
                    - newest
                    - best_selling
                    - alpha_asc
                    - alpha_desc
                    - avg_customer_review
                    - price_asc
                    - price_desc
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                  x-url: true
                custom_url:
                  title: Custom Url Category
                  type: object
                  description: The custom URL for the category on the storefront.
                  properties:
                    url:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        Category URL on the storefront.
                      example: /shoes
                      x-required:
                        - post
                        - put
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      x-required:
                        - post
                        - put
              required:
                - parent_id
                - name
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/category_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '207':
          description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
        '409':
          description: |
            The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: category
    delete:
      tags:
        - Category
      summary: Delete Categories
      description: |-
        Deletes *Category* objects. At least one filter parameter is required to perform the `DELETE` operation.

        **Usage Notes**

        - Sending a `DELETE`request without specifying a filter parameter will result in a `422` error. 
        - Sending a `DELETE` request for a category that contains products will result in a `422` error. Move products to a new category by sending a `PUT` request to the `/catalog/products/{product_id}` endpoint before deleting a category.
      operationId: deleteCategories
      parameters:
        - name: id
          in: query
          description: Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: parent_id
          in: query
          description: 'Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. '
          schema:
            type: integer
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
        - name: keyword
          in: query
          description: 'Filter items by keywords. eg. new, towel, bath'
          schema:
            type: string
        - name: is_visible
          in: query
          description: 'Filter items by if visible on the storefront. '
          schema:
            type: boolean
        - name: 'name:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: 'parent_id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'parent_id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'page_title:like'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/categories/{category_id}':
    get:
      tags:
        - Category
      summary: Get a Category
      description: Returns a single *Category*. Optional parameters can be passed in.
      operationId: getCategoryById
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/category_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Category
      summary: Update a Category
      description: |-
        Updates a *Category*.

        **Required Fields**
        * none

        **Read-Only Fields**
        - id
      operationId: updateCategory
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Category
              type: object
              description: Common Category object properties.
              properties:
                id:
                  type: integer
                  description: |-
                    Unique ID of the *Category*. Increments sequentially.
                    Read-Only.
                  readOnly: true
                parent_id:
                  type: integer
                  description: |-
                    The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
                    Required in a POST if creating a child category.
                  example: 2
                  x-required:
                    - post
                name:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    The name displayed for the category. Name is unique with respect to the category's siblings.
                    Required in a POST.
                  example: Bath
                  x-required:
                    - post
                description:
                  type: string
                  description: |
                    The product description, which can include HTML formatting.
                  example: <p>We offer a wide variety of products perfect for relaxing</p>
                views:
                  type: integer
                  description: |
                    Number of views the category has on the storefront.
                  example: 1050
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
                  example: 3
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    Custom title for the category page. If not defined, the category name will be used as the meta title.
                  example: Bath
                search_keywords:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate the category when searching the store.
                meta_keywords:
                  type: array
                  description: |
                    Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
                  items:
                    type: string
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    Custom meta description for the category page. If not defined, the store's default meta description will be used.
                layout_file:
                  maxLength: 500
                  minLength: 0
                  type: string
                  description: |
                    A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).
                  example: category.html
                is_visible:
                  type: boolean
                  description: |
                    Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
                default_product_sort:
                  type: string
                  description: |
                    Determines how the products are sorted on category page load.
                  enum:
                    - use_store_settings
                    - featured
                    - newest
                    - best_selling
                    - alpha_asc
                    - alpha_desc
                    - avg_customer_review
                    - price_asc
                    - price_desc
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
                  example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                  x-url: true
                custom_url:
                  title: Custom Url Category
                  type: object
                  description: The custom URL for the category on the storefront.
                  properties:
                    url:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        Category URL on the storefront.
                      example: /shoes
                      x-required:
                        - post
                        - put
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      x-required:
                        - post
                        - put
              required:
                - parent_id
                - name
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Category Response
                type: object
                properties:
                  data:
                    title: Category
                    type: object
                    description: Common Category object properties.
                    properties:
                      id:
                        type: integer
                        description: |-
                          Unique ID of the *Category*. Increments sequentially.
                          Read-Only.
                        readOnly: true
                      parent_id:
                        type: integer
                        description: |-
                          The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
                          Required in a POST if creating a child category.
                        example: 2
                        x-required:
                          - post
                      name:
                        maxLength: 50
                        minLength: 1
                        type: string
                        description: |-
                          The name displayed for the category. Name is unique with respect to the category's siblings.
                          Required in a POST.
                        example: Bath
                        x-required:
                          - post
                      description:
                        type: string
                        description: |
                          The product description, which can include HTML formatting.
                        example: <p>We offer a wide variety of products perfect for relaxing</p>
                      views:
                        type: integer
                        description: |
                          Number of views the category has on the storefront.
                        example: 1050
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
                        example: 3
                      page_title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          Custom title for the category page. If not defined, the category name will be used as the meta title.
                        example: Bath
                      search_keywords:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          A comma-separated list of keywords that can be used to locate the category when searching the store.
                      meta_keywords:
                        type: array
                        description: |
                          Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
                        items:
                          type: string
                      meta_description:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          Custom meta description for the category page. If not defined, the store's default meta description will be used.
                      layout_file:
                        maxLength: 500
                        minLength: 0
                        type: string
                        description: |
                          A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).
                        example: category.html
                      is_visible:
                        type: boolean
                        description: |
                          Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
                      default_product_sort:
                        type: string
                        description: |
                          Determines how the products are sorted on category page load.
                        enum:
                          - use_store_settings
                          - featured
                          - newest
                          - best_selling
                          - alpha_asc
                          - alpha_desc
                          - avg_customer_review
                          - price_asc
                          - price_desc
                      image_url:
                        type: string
                        description: |
                          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
                        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                        x-url: true
                      custom_url:
                        title: Custom Url Category
                        type: object
                        description: The custom URL for the category on the storefront.
                        properties:
                          url:
                            maxLength: 255
                            minLength: 0
                            type: string
                            description: |
                              Category URL on the storefront.
                            example: /shoes
                            x-required:
                              - post
                              - put
                            x-url: true
                          is_customized:
                            type: boolean
                            description: |
                              Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                            x-required:
                              - post
                              - put
                    required:
                      - parent_id
                      - name
                  meta:
                    title: Meta
                    type: object
                    description: Empty meta object; may be used later.
        '207':
          $ref: '#/components/responses/General207Status'
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: 'The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: 'The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: category
    delete:
      tags:
        - Category
      summary: Delete a Category
      description: Deletes a *Category*.
      operationId: deleteCategoryById
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
  '/catalog/categories/{category_id}/metafields':
    get:
      tags:
        - Category Metafields
      summary: Get All Category Metafields
      description: Returns a list of *Metafields* on a *Category*. Optional filter parameters can be passed in.
      operationId: getCategoryMetafieldsByCategoryId
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: app_only
                    resource_type: category
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                  - id: 7
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: read
                    resource_type: category
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Category Metafields
      summary: Create a Category Metafield
      description: |-
        Creates a *Category Metafield*.

        **Required Fields:**
        - permission_set
        - namespace
        - key
        - value

        **Read-Only Fields**
        - id

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createCategoryMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: category
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate, unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Metafield
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
  '/catalog/categories/{category_id}/metafields/{metafield_id}':
    get:
      tags:
        - Category Metafields
      summary: Get a Category Metafield
      description: Returns a single *Category Metafield*. Optional parameters can be passed in.
      operationId: getCategoryMetafieldByCategoryId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: category
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Category Metafields
      summary: Update a Category Metafield
      description: "Updates a *Category Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message. "
      operationId: updateCategoryMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: category
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Category Metafields
      summary: Delete a Category Metafield
      description: Deletes a *Category Metafield*.
      operationId: deleteCategoryMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/categories/{category_id}/image':
    post:
      tags:
        - Category Images
      summary: Create a Category Image
      description: |-
        Create a *Category Image*.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.

        Only one image at a time can be created.
        Limit image size to 1MB.
        To update a *Category Image*, use the [Update categories](/docs/rest-management/catalog/categories-batch#update-categories) endpoint and an `image_url`.
      operationId: createCategoryImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: |
            Image was not valid. This is the result of a missing `image_file` field or an incorrect file type. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    delete:
      tags:
        - Category Images
      summary: Delete a Category Image
      description: Deletes a *Cateogory Image*.
      operationId: deleteCategoryImage
      parameters:
        - name: category_id
          in: path
          description: |
            The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
  '/catalog/brands':
    get:
      tags:
        - Brands
      summary: Get All Brands
      description: Returns a list of *Brands*. Optional filter parameters can be passed in.
      operationId: getBrands
      parameters:
        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/brand_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 35
                    name: Sagaform
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /brands/Sagaform.html
                      is_customized: false
                  - id: 36
                    name: OFS
                    page_title: OFS
                    meta_keywords:
                      - modern
                      - ' clean'
                      - ' contemporary'
                    meta_description: OFS is a modern brand.
                    image_url: ''
                    search_keywords: 'kitchen, laundry, cart, storage'
                    custom_url:
                      url: /brands/OFS.html
                      is_customized: false
                  - id: 37
                    name: Common Good
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/k/screen%20shot%202018-05-07%20at%2012.24.24%20pm_1525785365__65102.png'
                    search_keywords: ''
                    custom_url:
                      url: /brands/Common-Good.html
                      is_customized: false
                  - id: 38
                    name: BigCommerce
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /bigcommerce/
                      is_customized: false
                  - id: 39
                    name: Test Brand One
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/q/apihqggzm__53766.jpg'
                    search_keywords: ''
                    custom_url:
                      url: /test-brand-one/
                      is_customized: false
                  - id: 40
                    name: Fog Linen Work
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /fog-linen-work/
                      is_customized: false
                  - id: 41
                    name: Barr-Co.
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /barr-co/
                      is_customized: false
                  - id: 42
                    name: Thames & Hudson
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /thames-hudson/
                      is_customized: false
                  - id: 43
                    name: Able Brewing
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /able-brewing/
                      is_customized: false
                  - id: 44
                    name: Chemex
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /chemex/
                      is_customized: false
                  - id: 45
                    name: Kinfolk
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /kinfolk/
                      is_customized: false
                  - id: 46
                    name: Iris Hantverk
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /iris-hantverk/
                      is_customized: false
                  - id: 47
                    name: Gather Journal
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /gather-journal/
                      is_customized: false
                  - id: 48
                    name: Openhouse Magazine
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /openhouse-magazine/
                      is_customized: false
                  - id: 49
                    name: Smith Journal
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: description
                    image_url: ''
                    search_keywords: ''
                    custom_url:
                      url: /smith-journal/
                      is_customized: false
                meta:
                  pagination:
                    total: 15
                    count: 15
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    post:
      tags:
        - Brands
      summary: Create a Brand
      description: |-
        Creates a *Brand*.

        **Required Fields**
        - name

        **Read-Only Fields**
        - id

        **Limits**
        - 30,000 brands per store limit
      operationId: createBrand
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Brand
              type: object
              description: Common brand properties.
              properties:
                name:
                  maxLength: 255
                  minLength: 1
                  type: string
                  description: |-
                    The name of the brand. Must be unique.
                    Required in POST.
                  example: Common Good
                  x-required:
                    - post
                    - put
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    The title shown in the browser while viewing the brand.
                  example: Common Good
                meta_keywords:
                  type: array
                  description: |
                    Comma-separated list of meta keywords to include in the HTML.
                  items:
                    type: string
                    example: 'modern, clean, contemporary'
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A meta description to include.
                  example: Common Good is a modern brand.
                search_keywords:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate this brand.
                  example: 'kitchen, laundry, cart, storage'
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                  example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                  x-url: true
                custom_url:
                  title: Custom Url Brand
                  type: object
                  description: The custom URL for the brand on the storefront.
                  properties:
                    url:
                      type: string
                      description: |
                        Brand URL on the storefront.
                      example: /shoes
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      example: true
              required:
                - name
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Response
                type: object
                properties:
                  data:
                    title: Brand
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique ID of the *Brand*. Read-Only.
                        readOnly: true
                      name:
                        maxLength: 255
                        minLength: 1
                        type: string
                        description: |-
                          The name of the brand. Must be unique.
                          Required in POST.
                        example: Common Good
                        x-required:
                          - post
                          - put
                      page_title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          The title shown in the browser while viewing the brand.
                        example: Common Good
                      meta_keywords:
                        type: array
                        description: |
                          Comma-separated list of meta keywords to include in the HTML.
                        items:
                          type: string
                          example: 'modern, clean, contemporary'
                      meta_description:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A meta description to include.
                        example: Common Good is a modern brand.
                      search_keywords:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A comma-separated list of keywords that can be used to locate this brand.
                        example: 'kitchen, laundry, cart, storage'
                      image_url:
                        type: string
                        description: |
                          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                        example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                        x-url: true
                      custom_url:
                        title: Custom Url Brand
                        type: object
                        properties:
                          url:
                            type: string
                            description: |
                              Brand URL on the storefront.
                            example: /shoes
                            x-url: true
                          is_customized:
                            type: boolean
                            description: |
                              Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                            example: true
                        description: The custom URL for the brand on the storefront.
                    description: Common Brand properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Brand Response returns for:
                  * Create Brand
                  * Get Brand by Id
                  * Update Brand by Id
              example:
                data:
                  id: 50
                  name: Common Good
                  meta_keywords:
                    - 'modern, clean, contemporary'
                  meta_description: Common Good is a modern brand
                  image_url: ''
                  search_keywords: 'kitchen, laundry, cart, storage'
                  custom_url:
                    url: /brands/Common-Good.html
                    is_customized: false
                meta: {}
        '207':
          $ref: '#/components/responses/General207Status'
        '409':
          description: Brand was in conflict with another brand. This is the result of duplicate unique fields such as name.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: 'Brand was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Brand
    delete:
      tags:
        - Brands
      summary: Delete Brands
      description: 'By default, it deletes all *Brand* objects. A filter should be added to avoid deleting all *Brand* objects in a store.'
      operationId: deleteBrands
      parameters:
        - name: name
          in: query
          description: |
            Filter items by name.
          schema:
            type: string
        - name: page_title
          in: query
          description: |
            Filter items by page_title.
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/brands/{brand_id}':
    get:
      tags:
        - Brands
      summary: Get a Brand
      description: Returns a single *Brand*. Optional filter parameters can be passed in.
      operationId: getBrandById
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/brand_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Brand Response returns for:
                  * Create Brand
                  * Get Brand by Id
                  * Update Brand by Id
              example:
                data:
                  id: 50
                  name: Common Good
                  meta_keywords:
                    - 'modern, clean, contemporary'
                  meta_description: Common Good is a modern brand
                  image_url: ''
                  search_keywords: 'kitchen, laundry, cart, storage'
                  custom_url:
                    url: /brands/Common-Good.html
                    is_customized: false
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Brands
      summary: Update a Brand
      description: |-
        Updates a *Brand*.

        **Required Fields**
        - None

        **Read-Only Fields**
        - id

        To update a *Brand Image*, send a request with an `image_url`.
      operationId: updateBrand
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              title: Brand
              required:
                - name
              type: object
              properties:
                id:
                  type: integer
                  description: Unique ID of the *Brand*. Read-Only.
                  readOnly: true
                name:
                  maxLength: 255
                  minLength: 1
                  type: string
                  description: |-
                    The name of the brand. Must be unique.
                    Required in POST.
                  example: Common Good
                  x-required:
                    - post
                    - put
                page_title:
                  maxLength: 255
                  minLength: 0
                  type: string
                  description: |
                    The title shown in the browser while viewing the brand.
                  example: Common Good
                meta_keywords:
                  type: array
                  description: |
                    Comma-separated list of meta keywords to include in the HTML.
                  example:
                    - 'modern, clean, contemporary'
                  items:
                    type: string
                meta_description:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A meta description to include.
                  example: Common Good is a modern brand.
                search_keywords:
                  maxLength: 65535
                  minLength: 0
                  type: string
                  description: |
                    A comma-separated list of keywords that can be used to locate this brand.
                  example: 'kitchen, laundry, cart, storage'
                image_url:
                  type: string
                  description: |
                    Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                  example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                  x-url: true
                custom_url:
                  title: Custom Url Brand
                  type: object
                  properties:
                    url:
                      type: string
                      description: |
                        Brand URL on the storefront.
                      example: /shoes
                      x-url: true
                    is_customized:
                      type: boolean
                      description: |
                        Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                      example: true
                  description: The custom URL for the brand on the storefront.
              description: Common Brand properties.
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Brand Response
                type: object
                properties:
                  data:
                    title: Brand
                    required:
                      - name
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique ID of the *Brand*. Read-Only.
                        readOnly: true
                      name:
                        maxLength: 255
                        minLength: 1
                        type: string
                        description: |-
                          The name of the brand. Must be unique.
                          Required in POST.
                        example: Common Good
                        x-required:
                          - post
                          - put
                      page_title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          The title shown in the browser while viewing the brand.
                        example: Common Good
                      meta_keywords:
                        type: array
                        description: |
                          Comma-separated list of meta keywords to include in the HTML.
                        example:
                          - 'modern, clean, contemporary'
                        items:
                          type: string
                      meta_description:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A meta description to include.
                        example: Common Good is a modern brand.
                      search_keywords:
                        maxLength: 65535
                        minLength: 0
                        type: string
                        description: |
                          A comma-separated list of keywords that can be used to locate this brand.
                        example: 'kitchen, laundry, cart, storage'
                      image_url:
                        type: string
                        description: |
                          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                        example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                        x-url: true
                      custom_url:
                        title: Custom Url Brand
                        type: object
                        properties:
                          url:
                            type: string
                            description: |
                              Brand URL on the storefront.
                            example: /shoes
                            x-url: true
                          is_customized:
                            type: boolean
                            description: |
                              Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                            example: true
                        description: The custom URL for the brand on the storefront.
                    description: Common Brand properties.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
                description: |-
                  Brand Response returns for:
                  * Create Brand
                  * Get Brand by Id
                  * Update Brand by Id
              example:
                data:
                  id: 50
                  name: Common Good
                  meta_keywords:
                    - 'modern, clean, contemporary'
                  meta_description: Common Good is a modern brand
                  image_url: ''
                  search_keywords: 'kitchen, laundry, cart, storage'
                  custom_url:
                    url: /brands/Common-Good.html
                    is_customized: false
                meta: {}
        '207':
          $ref: '#/components/responses/General207Status'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '409':
          description: |
            The `Brand` was in conflict with another product. This is the result of duplicate unique values, such as `name`.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Brand` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: brand
    delete:
      tags:
        - Brands
      summary: Delete a Brand
      description: Deletes a *Brand*.
      operationId: deleteBrandById
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
  '/catalog/brands/{brand_id}/metafields':
    get:
      tags:
        - Brand Metafields
      summary: Get All Brand Metafields
      description: 'Returns a list of *Brand Metafields*. Optional filter parameters can be passed in. '
      operationId: getBrandMetafieldsByBrandId
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:not_in'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:min'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:max'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:greater'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: 'id:less'
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: key
          in: query
          description: |
            Filter based on a metafield's key.
          schema:
            type: string
        - name: namespace
          in: query
          description: Filter based on a metafield's namespace.
          schema:
            type: string
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Meta Field Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
              example:
                data:
                  - id: 6
                    key: Location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: app_only
                    resource_type: brand
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                  - id: 7
                    key: Brand location
                    value: 4HG
                    namespace: Warehouse Locations
                    permission_set: read
                    resource_type: brand
                    resource_id: 111
                    description: Location in the warehouse
                    date_created: '1973-01-20T21:34:57.903Z'
                    date_modified: '1990-12-30T00:29:23.515Z'
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    post:
      tags:
        - Brand Metafields
      summary: Create a Brand Metafield
      description: |-
        Creates a *Brand Metafield*.

        **Required Fields**
        - permission_set
        - namespace
        - key
        - value

        **Read-Only Fields**
        - id

        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.
      operationId: createBrandMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    title: Meta
                    type: object
                    properties: {}
                    description: Empty meta object; may be used later.
              examples:
                example-1:
                  value:
                    data:
                      id: 4
                      key: location_id
                      value: 'Shelf 3, Bin 5'
                      namespace: App Namespace
                      permission_set: app_only
                      resource_type: brand
                      resource_id: 137
                      description: Where products are located
                      date_created: '2021-08-06T19:15:35+00:00'
                      date_modified: '2021-08-06T19:15:35+00:00'
                    meta: {}
                example-2:
                  value:
                    data:
                      id: 6
                      key: Location
                      value: 4HG
                      namespace: Warehouse Locations
                      permission_set: app_only
                      resource_type: category
                      resource_id: 111
                      description: Location in the warehouse.
                      date_created: '2018-05-07T20:14:17+00:00'
                      date_modified: '2018-05-07T20:14:17+00:00'
                    meta: {}
                example-3:
                  value:
                    data:
                      id: 4
                      key: location_id
                      value: 'Shelf 3, Bin 5'
                      namespace: App Namespace
                      permission_set: app_only
                      resource_type: brand
                      resource_id: 137
                      description: Where products are located.
                      date_created: '2021-08-06T19:15:35+00:00'
                      date_modified: '2021-08-06T19:15:35+00:00'
                    meta: {}
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combination of the app's client id, namespace, key, resource_type, and resource_id.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
      x-codegen-request-body-name: Metafield
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
  '/catalog/brands/{brand_id}/metafields/{metafield_id}':
    get:
      tags:
        - Brand Metafields
      summary: Get a Brand Metafields
      description: Returns a *Brand Metafield*. Optional filter parameters can be passed in.
      operationId: getBrandMetafieldByBrandId
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer

        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Brand Metafields
      summary: Update a Brand Metafield
      description: "Updates a *Brand Metafield*.\n\n**Required Fields**  \n* none\n\n**Read-Only Fields**\n* id\n* These fields can only be modified by the app (API credentials) that created the metafield:\n\t* namespace\n\t* key\n\t* permission_set\n\n**Usage Notes**\n* Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a 403 error message.\n* The maxiumum number of metafields allowed on each order, product, category, variant, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center."
      operationId: updateBrandMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metafield_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Metafield Response
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/metafield_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 4
                  key: location_id
                  value: 'Shelf 3, Bin 5'
                  namespace: App Namespace
                  permission_set: app_only
                  resource_type: product
                  resource_id: 137
                  description: Where products are located
                  date_created: '2021-08-06T19:15:35+00:00'
                  date_modified: '2021-08-06T19:15:35+00:00'
                meta: {}
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
      x-codegen-request-body-name: Metafield
    delete:
      tags:
        - Brand Metafields
      summary: Delete a Brand Metafield
      description: Deletes a *Brand Metafield*.
      operationId: deleteBrandMetafieldById
      parameters:
        - name: metafield_id
          in: path
          description: |
            The ID of the `Metafield`.
          required: true
          schema:
            type: integer
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/catalog/brands/{brand_id}/image':
    post:
      tags:
        - Brand Images
      summary: Create a Brand Image
      description: |-
        Creates a *Brand Image*.

        **Required Fields**
        - image_file: Form posts are the only accepted upload option.

        **Read-Only Fields**
        - id

        Only one image at a time can be created. To update a *Brand Image*, use the [Update a brand](/docs/rest-management/catalog/brands#update-a-brand) endpoint and an `image_url`.
      operationId: createBrandImage
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png'
                meta: {}
        '400':
          description: Bad Request. The requested resource could not be downloaded and may be invalid. Possible reasons include malformed request syntax or the file host blocking requests.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
        '422':
          description: 'Image was not valid. This is the result of a missing `image_file` field, or of an incorrect file type. See the response for more details.'
          content:
            application/json:
              schema:
                title: Error Response
                type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
                  instance:
                    type: string
                  status:
                    type: integer
                    description: |
                      The HTTP status code.
                  title:
                    type: string
                    description: |
                      The error title describing the particular error.
                  type:
                    type: string
    delete:
      tags:
        - Brand Images
      summary: Delete a Brand Image
      description: Deletes a *Brand Image*.
      operationId: deleteBrandImage
      parameters:
        - name: brand_id
          in: path
          description: |
            The ID of the `Brand` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/BrandIdParam'
  '/catalog/variants':
    get:
      tags:
        - Variants
      summary: Get All Variants
      description: Returns a list of all variants in your catalog. Optional parameters can be passed in.
      operationId: getVariants
      parameters:
        - name: id
          in: query
          description: |
            Filter items by id.
          schema:
            type: integer
        - name: sku
          in: query
          description: |
            Filter items by sku.
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of products.
          schema:
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of products.
          schema:
            type: integer
        - name: include_fields
          in: query
          description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
          schema:
            type: string
        - name: exclude_fields
          in: query
          description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
          schema:
            type: string
        - name: product_id
          in: query
          description: 'A comma-separated list of IDs of products whose variants were requested. For example:`?product_id=:id``?product_id:in=77,80,81`'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - title: Variant Base
                          type: object
                          properties:
                            cost_price:
                              minimum: 0
                              type: number
                              description: The cost price of the variant. Not affected by Price List prices.
                              format: double
                              x-nullable: true
                            price:
                              minimum: 0
                              type: number
                              description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                              format: double
                              x-nullable: true
                            sale_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                              format: double
                              x-nullable: true
                            retail_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                              format: double
                              x-nullable: true
                            weight:
                              minimum: 0
                              type: number
                              description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                              format: double
                              x-nullable: true
                            width:
                              minimum: 0
                              type: number
                              description: |
                                Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                              format: double
                              x-nullable: true
                            height:
                              minimum: 0
                              type: number
                              description: |
                                Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                              format: double
                              x-nullable: true
                            depth:
                              minimum: 0
                              type: number
                              description: |
                                Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                              format: double
                              x-nullable: true
                            is_free_shipping:
                              type: boolean
                              description: |
                                Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                            fixed_cost_shipping_price:
                              minimum: 0
                              type: number
                              description: |
                                A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                              format: double
                              x-nullable: true
                            purchasing_disabled:
                              type: boolean
                              description: 'If `true`, this variant will not be purchasable on the storefront.'
                            purchasing_disabled_message:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                            upc:
                              type: string
                              description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                              x-nullable: true
                            inventory_level:
                              type: integer
                              description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
                              x-nullable: true
                            inventory_warning_level:
                              type: integer
                              description: 'When the variant hits this inventory level, it is considered low stock.'
                              x-nullable: true
                            bin_picking_number:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: Identifies where in a warehouse the variant is located.
                              x-nullable: true
                          description: Common Variant properties.
                        - type: object
                          properties:
                            id:
                              type: integer
                            product_id:
                              type: integer
                            sku:
                              type: string
                            sku_id:
                              type: integer
                              description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
                              x-nullable: true
                            option_values:
                              type: array
                              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
                              items:
                                title: Option Value Variant
                                type: object
                                allOf:
                                  - title: Option Value Product Base
                                    type: object
                                    properties:
                                      option_display_name:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The name of the option.
                                        example: Color
                                        x-required:
                                          - post
                                      label:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The label of the option value.
                                        example: Beige
                                        x-required:
                                          - post
                                    description: Common Option Value Product properties.
                                  - type: object
                                    properties:
                                      id:
                                        type: integer
                                      option_id:
                                        type: integer
                            calculated_price:
                              type: number
                              description: |
                                The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
                              format: double
                  meta:
                    $ref: '#/components/schemas/metaCollection_Full'
        '404':
          description: The resource was not found.
          content:
            application/json:
              schema:
                title: Not Found
                type: object
                properties:
                  status:
                    type: integer
                    description: |
                      404 HTTP status code.
                  title:
                    type: string
                    description: The error title describing the particular error.
                  type:
                    type: string
                  instance:
                    type: string
                description: Error payload for the BigCommerce API.
    put:
      tags:
        - Variants
      summary: Update Variants (Batch)
      description: 'Updates a batch of `variant` objects. At the time of writing, the limit is 50 variants. This limit is subject to change.'
      operationId: updateVariantsBatch
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              title: Variants Collection Put
              type: array
              items:
                title: Variant Put
                type: object
                description: |
                  The model for a PUT to update variants on a product.
                allOf:
                  - title: Variant Base
                    type: object
                    properties:
                      cost_price:
                        minimum: 0
                        type: number
                        description: The cost price of the variant. Not affected by Price List prices.
                        format: double
                        x-nullable: true
                      price:
                        minimum: 0
                        type: number
                        description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                        format: double
                        x-nullable: true
                      sale_price:
                        minimum: 0
                        type: number
                        description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                        format: double
                        x-nullable: true
                      retail_price:
                        minimum: 0
                        type: number
                        description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                        format: double
                        x-nullable: true
                      weight:
                        minimum: 0
                        type: number
                        description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                        format: double
                        x-nullable: true
                      width:
                        minimum: 0
                        type: number
                        description: |
                          Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                        format: double
                        x-nullable: true
                      height:
                        minimum: 0
                        type: number
                        description: |
                          Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                        format: double
                        x-nullable: true
                      depth:
                        minimum: 0
                        type: number
                        description: |
                          Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                        format: double
                        x-nullable: true
                      is_free_shipping:
                        type: boolean
                        description: |
                          Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                      fixed_cost_shipping_price:
                        minimum: 0
                        type: number
                        description: |
                          A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                        format: double
                        x-nullable: true
                      purchasing_disabled:
                        type: boolean
                        description: 'If `true`, this variant will not be purchasable on the storefront.'
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                      upc:
                        type: string
                        description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                        x-nullable: true
                      inventory_level:
                        type: integer
                        description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
                        x-nullable: true
                      inventory_warning_level:
                        type: integer
                        description: 'When the variant hits this inventory level, it is considered low stock.'
                        x-nullable: true
                      bin_picking_number:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: Identifies where in a warehouse the variant is located.
                        x-nullable: true
                    description: Common Variant properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        x-required:
                          - put
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Variant Collection Response
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - title: Variant Base
                          type: object
                          properties:
                            cost_price:
                              minimum: 0
                              type: number
                              description: The cost price of the variant. Not affected by Price List prices.
                              format: double
                              x-nullable: true
                            price:
                              minimum: 0
                              type: number
                              description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                              format: double
                              x-nullable: true
                            sale_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                              format: double
                              x-nullable: true
                            retail_price:
                              minimum: 0
                              type: number
                              description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                              format: double
                              x-nullable: true
                            weight:
                              minimum: 0
                              type: number
                              description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                              format: double
                              x-nullable: true
                            width:
                              minimum: 0
                              type: number
                              description: |
                                Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                              format: double
                              x-nullable: true
                            height:
                              minimum: 0
                              type: number
                              description: |
                                Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                              format: double
                              x-nullable: true
                            depth:
                              minimum: 0
                              type: number
                              description: |
                                Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                              format: double
                              x-nullable: true
                            is_free_shipping:
                              type: boolean
                              description: |
                                Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                            fixed_cost_shipping_price:
                              minimum: 0
                              type: number
                              description: |
                                A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                              format: double
                              x-nullable: true
                            purchasing_disabled:
                              type: boolean
                              description: 'If `true`, this variant will not be purchasable on the storefront.'
                            purchasing_disabled_message:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                            upc:
                              type: string
                              description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                              x-nullable: true
                            inventory_level:
                              type: integer
                              description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
                              x-nullable: true
                            inventory_warning_level:
                              type: integer
                              description: 'When the variant hits this inventory level, it is considered low stock.'
                              x-nullable: true
                            bin_picking_number:
                              maxLength: 255
                              minLength: 0
                              type: string
                              description: Identifies where in a warehouse the variant is located.
                              x-nullable: true
                          description: Common Variant properties.
                        - type: object
                          properties:
                            id:
                              type: integer
                            product_id:
                              type: integer
                            sku:
                              type: string
                            sku_id:
                              type: integer
                              description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
                              x-nullable: true
                            option_values:
                              type: array
                              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
                              items:
                                title: Option Value Variant
                                type: object
                                allOf:
                                  - title: Option Value Product Base
                                    type: object
                                    properties:
                                      option_display_name:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The name of the option.
                                        example: Color
                                        x-required:
                                          - post
                                      label:
                                        maxLength: 255
                                        minLength: 1
                                        type: string
                                        description: |
                                          The label of the option value.
                                        example: Beige
                                        x-required:
                                          - post
                                    description: Common Option Value Product properties.
                                  - type: object
                                    properties:
                                      id:
                                        type: integer
                                      option_id:
                                        type: integer
                            calculated_price:
                              type: number
                              description: |
                                The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
                              format: double
                  meta:
                    title: Collection Meta
                    type: object
                    properties:
                      pagination:
                        title: Pagination
                        type: object
                        properties:
                          total:
                            type: integer
                            description: |
                              Total number of items in the result set.
                            example: 36
                          count:
                            type: integer
                            description: |
                              Total number of items in the collection response.
                            example: 36
                          per_page:
                            type: integer
                            description: |
                              The amount of items returned in the collection per page, controlled by the limit parameter.
                            example: 50
                          current_page:
                            type: integer
                            description: |
                              The page you are currently on within the collection.
                            example: 1
                          total_pages:
                            type: integer
                            description: |
                              The total number of pages in the collection.
                            example: 1
                          links:
                            type: object
                            properties:
                              previous:
                                type: string
                                description: |
                                  Link to the previous page returned in the response.
                              current:
                                type: string
                                description: |
                                  Link to the current page returned in the response.
                                example: '?page=1&limit=50'
                              next:
                                type: string
                                description: |
                                  Link to the next page returned in the response.
                            description: |
                              Pagination links for the previous and next parts of the whole collection.
                        description: 'Data about the response, including pagination and collection totals.'
                    description: 'Data about the response, including pagination and collection totals.'
        '413':
          description: ''
          content:
            application/json:
              example:
                errors: {}
                status: 413
                title: The request payload is too large. The maximum items allowed in the array is 50
                type: /api-docs/getting-started/api-status-codes
        '422':
          description: |
            This is the result of missing required fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                title: Variants Batch Error Response
                type: object
                properties:
                  batch_errors:
                    type: array
                    items:
                      title: Error Response
                      type: object
                      allOf:
                        - title: Base Error
                          type: object
                          properties:
                            status:
                              type: integer
                              description: |
                                The HTTP status code.
                            title:
                              type: string
                              description: |
                                The error title describing the particular error.
                            type:
                              type: string
                            instance:
                              type: string
                          description: |
                            Error payload for the BigCommerce API.
                        - type: object
                          properties:
                            errors:
                              title: Detailed Errors
                              type: object
                              properties: {}
                              additionalProperties: true
                description: |
                  Errors during batch usage for the BigCommerce API.
      x-codegen-request-body-name: body
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/summary':
    get:
      tags:
        - Summary
      summary: Get a Catalog Summary
      description: |-
        Returns a lightweight inventory summary from the BigCommerce Catalog.

        The inventory summary includes:
        * "inventory_count"
        * "variant_count"
        * "inventory_value"
        * "highest_variant_price"
        * "average_variant_price"
        * "lowest_variant_price"
        * "oldest_variant_date"
        * "newest_variant_date"
        * "primary_category_id"
        * "primary_category_name"
      operationId: getCatalogSummary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                title: Catalog Summary Response
                type: object
                properties:
                  data:
                    title: Catalog Summary
                    type: object
                    properties:
                      inventory_count:
                        type: integer
                        description: |
                          A count of all inventory items in the catalog.
                        example: 2000
                      inventory_value:
                        type: number
                        description: |
                          Total value of store's inventory.
                        format: double
                        example: 267000
                      primary_category_id:
                        type: integer
                        description: |
                          ID of the category containing the most products.
                        example: 23
                      primary_category_name:
                        type: string
                        description: |
                          Name of the category containing the most products.
                        example: Shop All
                      variant_count:
                        type: integer
                        description: Total number of variants
                        example: 46
                      highest_variant_price:
                        type: number
                        description: Highest priced variant
                        format: double
                        example: 249
                      average_variant_price:
                        type: number
                        description: Average price of all variants
                        format: double
                        example: 83.07978261
                      lowest_variant_price:
                        type: string
                        description: Lowest priced variant in the store
                        example: '7'
                      oldest_variant_date:
                        type: string
                        example: '2018-08-15T00:00:00+00:00'
                      newest_variant_date:
                        type: string
                        example: '2018-08-16T00:00:00+00:00'
                    description: Catalog Summary object describes a lightweight summary of the catalog.
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/categories/{category_id}/products/sort-order':
    get:
      tags:
        - Product Sort Order
      summary: Get Product Sort Order
      description: |-
        Returns a list of products and their sort order for a specific category.

        **Usage Notes**
        * Data pairs are displayed in ascending order based on products' `sort_order` values.
        * `null` values are allowed for products without specified `sort_order` values.
        * Products with `sort_order` value of `null` will be displayed after products with valid numerical values.
        * The priorities for determining product sort order on a storefront are the following:
          - Priority 1: Manually specified sort order on Category Level (API).
          - Priority 2: Manually specified sort order on Product (Global) Level (UI/API).
          - Priority 3: Default sorting by Product ID (newly added products go first) (UI/API).
      operationId: getsortorders
      parameters:
        - name: category_id
          in: path
          description: The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: The requested category was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
    put:
      tags:
        - Product Sort Order
      summary: Update Product Sort Order
      description: Updates sort order of products within a specific category.
      operationId: updatesortorder
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - name: category_id
          in: path
          description: The ID of the `Category` to which the resource belongs.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/productSortOrder'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/productSortOrder'
        '404':
          description: The requested category was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
        '422':
          description: |-
            Unprocessable entity.

            Please verify if all requested products are assigned to the category.

            Please verify if all required fields are present in the request body and are filled with values correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Base'
      x-codegen-request-body-name: body
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CategoryIdParam'
  '/catalog/trees/categories':
    get:
      summary: Get All Categories
      description: |-
        Returns a list of categories. 

        To get a specific category in a tree, provide a category id.
      tags:
        - Categories Batch
      parameters:
        - name: 'category_uuid:in'
          in: query
          schema:
            type: string
        - name: 'category_uuid:not_in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
        - name: 'category_id:not_in'
          in: query
          schema:
            type: string
        - name: 'tree_id:in'
          in: query
          schema:
            type: string
        - name: 'tree_id:not_in'
          in: query
          schema:
            type: string
        - name: 'parent_id:in'
          in: query
          schema:
            type: string
        - name: 'parent_id:not_in'
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: 'name:like'
          in: query
          schema:
            type: string
        - name: page_title
          in: query
          schema:
            type: string
        - name: 'page_title:like'
          in: query
          schema:
            type: string
        - name: keyword
          in: query
          schema:
            type: string
        - name: is_visible
          in: query
          schema:
            type: boolean
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: include_fields
          in: query
          schema:
            type: string
        - name: exclude_fields
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  meta:
                    $ref: '#/components/schemas/MetaPagination'
              examples:
                example-1:
                  value:
                    data:
                      - id: 0
                        parent_id: 2
                        name: Bath
                        description: <p>We offer a wide variety of products perfect for relaxing</p>
                        views: 1050
                        sort_order: 3
                        page_title: Bath
                        meta_keywords:
                          - string
                        meta_description: string
                        layout_file: category.html
                        image_url: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                        is_visible: true
                        search_keywords: string
                        default_product_sort: use_store_settings
                        url:
                          path: string
                          is_customized: true
                    meta:
                      pagination:
                        total: 246
                        count: 5
                        per_page: 5
                        current_page: 1
                        total_pages: 50
                        links:
                          previous: '?limit=5&page=1'
                          current: '?limit=5&page=2'
                          next: '?limit=5&page=3'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: getAllCategories
    post:
      summary: Create Categories
      description: |-
        Creates new categories. 

        Creating a category requires:
         - `name`
         - `url` 
         - `tree_id` or `parent_id` 
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Categories Batch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategories'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '422':
          description: 'The Category was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: createCategories
    put:
      summary: Update Categories
      description: |-
        Updates existing categories. 

         To update a specific category in a tree, provide a category id.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Categories Batch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategories'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessNoContentResponse'
        '207':
          description: Partial success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialSuccessNoContentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '422':
          description: 'The Category was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: updateCategories
    delete:
      summary: Delete Categories
      description: |-
        Deletes categories. 

        To delete a specific category in a tree, provide a category id.
      tags:
        - Categories Batch
      parameters:
        - name: 'category_uuid:in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
        - name: 'tree_id:in'
          in: query
          schema:
            type: string
        - name: 'parent_id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Categories are deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessNoContentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRequest'
      operationId: deleteTreeCategories
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/trees':
    get:
      summary: Get All Category Trees
      description: Returns a list of *Category Trees*.
      operationId: GetCategoryTrees
      parameters:
        - name: 'id:in'
          in: query
          schema:
            type: string
        - name: 'channel_id:in'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of category trees.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tree'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
              example:
                data:
                  - id: 0
                    name: string
                    channels:
                      - 0
                meta:
                  pagination:
                    total: 246
                    count: 5
                    per_page: 5
                    current_page: 1
                    total_pages: 50
                    links:
                      next: '?limit=5&page=2'
                      current: '?limit=5&page=1'
      tags:
        - Category Trees
    put:
      summary: Upsert Category Trees
      description: |
        Upserts *Category Trees*. 

        If a tree object contains an ID, it is processed as an update operation using that ID. If no ID is provided, a new tree is created.

        **Usage Notes**
        * `channel_id` is required to create a *Category Tree*. You can assign one `channel_id` to one category tree.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: UpsertCategoryTrees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tree'
            example:
              - id: 0
                name: string
                channels:
                  - 0
      responses:
        '200':
          description: Created a category tree.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tree'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  id: 0
                  name: string
                  channels:
                    - 0
                meta:
                  type: object
                  properties: {}
                  description: Empty meta object; reserved for use later.
        '422':
          description: The Channel was not valid. See the response for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta4ErrorResponse'
              example:
                status: 0
                title: string
                type: string
                instance: string
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
      tags:
        - Category Trees
    delete:
      summary: Delete Category Trees
      description: Deletes *Category Trees*. A filter must be supplied with the endpoint.
      operationId: DeleteCategoryTrees
      parameters:
        - name: 'id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Deleted
      tags:
        - Category Trees
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/trees/{tree_id}/categories':
    get:
      summary: Get a Category Tree
      description: Returns a *Category Tree*.
      operationId: GetCategoryTreeByTreeId
      parameters:
        - name: depth
          description: Max depth for a tree of categories.
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Categories tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CategoryNode'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
              example:
                data:
                  - id: 0
                    parent_id: 0
                    depth: 0
                    path:
                      - 0
                    name: string
                    is_visible: true
                    children:
                      - string
                meta:
                  type: object
                  properties: {}
                  description: Empty meta object; reserved for use later.
        '404':
          description: The tree was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta4ErrorResponse'
              example:
                status: 0
                title: string
                type: string
                instance: string
                errors:
                  additionalProp1: string
                  additionalProp2: string
                  additionalProp3: string
      tags:
        - Category Trees
    parameters:
      - $ref: '#/components/parameters/Accept'
      - schema:
          type: string
        name: tree_id
        in: path
        required: true
  '/catalog/products/channel-assignments':
    get:
      summary: Get Products Channel Assignments
      description: Returns a list of products channel assignments.
      operationId: GetProductsChannelAssignments
      tags:
        - Products Channel Assignments
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'channel_id:in'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Collection of channel assignments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductChannelAssignment'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    put:
      summary: Create Products Channel Assignments
      description: Creates products channel assignments.
      operationId: CreateProductsChannelAssignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Products Channel Assignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductChannelAssignment'
      responses:
        '204':
          description: Updated
        '422':
          description: Error response for batch PUT of Channel Assignments. Includes the errors for each reference id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    delete:
      summary: Delete Products Channel Assignments
      description: Delete products channel assignments. A filter must be supplied.
      operationId: DeleteProductsChannelAssignments
      tags:
        - Products Channel Assignments
      parameters:
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'channel_id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '422':
          description: At least one filter must be provided in order to delete channel assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    parameters:
      - $ref: '#/components/parameters/Accept'
  '/catalog/products/category-assignments':
    get:
      summary: Get Products Category Assignments
      description: Returns a list of products category assignments.
      operationId: GetProductsCategoryAssignments
      tags:
        - Products Category Assignments
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Collection of category assignments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductCategoryAssignment'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    put:
      summary: Create Products Category Assignments.
      description: Creates products category assignments.
      operationId: CreateProductsCategoryAssignments
      parameters:
        - $ref: '#/components/parameters/ContentType'
      tags:
        - Products Category Assignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductCategoryAssignment'
      responses:
        '204':
          description: Updated
        '422':
          description: Error response for batch PUT of Category Assignments. Includes the errors for each reference id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    delete:
      summary: Delete Products Category Assignments
      description: Deletes products category assignments. A filter must be supplied.
      operationId: DeleteProductsCategoryAssignments
      tags:
        - Products Category Assignments
      parameters:
        - name: 'product_id:in'
          in: query
          schema:
            type: string
        - name: 'category_id:in'
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '422':
          description: At least one filter must be provided in order to delete category assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beta5ErrorResponse'
    parameters:
      - $ref: '#/components/parameters/Accept'
components:
  schemas:
    formData_ImageFileParam:
      type: string
      description: |
        An image file. Supported MIME types include GIF, JPEG, and PNG.
      format: binary
    productModifier_Base:
      title: productModifier_Base
      required:
        - required
        - type
      type: object
      properties:
        type:
          type: string
          description: |
            BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
          enum:
            - date
            - checkbox
            - file
            - text
            - multi_line_text
            - numbers_only_text
            - radio_buttons
            - rectangles
            - dropdown
            - product_list
            - product_list_with_images
            - swatch
          x-required:
            - post
        required:
          type: boolean
          description: |
            Whether or not this modifer is required or not at checkout. Required in a /POST.
          x-required:
            - post
        sort_order:
          type: integer
          description: The order the modifiers display on the product detail page.
        config:
          $ref: '#/components/schemas/config_Full'
        display_name:
          type: string
          description: The name of the option shown on the storefront.
      description: Common Modifier properties.
      x-internal: false
    productModifier_Full:
      title: productModifier_Full
      description: Product Modifier
      allOf:
        - $ref: '#/components/schemas/productModifier_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the modifier; increments sequentially.
              example: 12
            product_id:
              type: integer
              description: |
                The unique numeric ID of the product to which the option belongs.
              example: 77
            name:
              type: string
              description: |
                The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
              example: Add-a-$5-Donation1535039590-191
            option_values:
              type: array
              items:
                $ref: '#/components/schemas/productModifierOptionValue_Full'
      x-internal: false
    productModifier_Post:
      title: productModifier_Post
      description: The model for a POST to create a modifier on a product.
      allOf:
        - title: Modifier Base
          required:
            - required
            - type
          type: object
          properties:
            type:
              type: string
              description: |
                BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
              enum:
                - date
                - checkbox
                - file
                - text
                - multi_line_text
                - numbers_only_text
                - radio_buttons
                - rectangles
                - dropdown
                - product_list
                - product_list_with_images
                - swatch
              x-required:
                - post
            required:
              type: boolean
              description: |
                Whether or not this modifer is required or not at checkout. Required in a /POST.
              x-required:
                - post
            sort_order:
              type: integer
              description: The order the modifiers display on the product detail page.
            config:
              title: Option Config
              type: object
              properties:
                default_value:
                  type: string
                  description: |
                    (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                checked_by_default:
                  type: boolean
                  description: |
                    (checkbox) Flag for setting the checkbox to be checked by default.
                checkbox_label:
                  type: string
                  description: |
                    (checkbox) Label displayed for the checkbox option.
                date_limited:
                  type: boolean
                  description: |
                    (date) Flag to limit the dates allowed to be entered on a date option.
                date_limit_mode:
                  type: string
                  description: |
                    (date) The type of limit that is allowed to be entered on a date option.
                  example: range
                  enum:
                    - earliest
                    - range
                    - latest
                date_earliest_value:
                  type: string
                  description: |
                    (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                date_latest_value:
                  type: string
                  description: |
                    (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                file_types_mode:
                  type: string
                  description: |
                    (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                  example: specific
                  enum:
                    - specific
                    - all
                file_types_supported:
                  type: array
                  description: |
                    (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                      `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                      `other` - Allows file types defined in the `file_types_other` array.
                  items:
                    type: string
                    example: 'images, documents, other'
                file_types_other:
                  type: array
                  description: |
                    (file) A list of other file types allowed with the file upload option.                
                  items:
                    type: string
                    example: pdf
                file_max_size:
                  type: integer
                  description: |
                    (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                  example: 5
                text_characters_limited:
                  type: boolean
                  description: |
                    (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                text_min_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                  example: 1
                text_max_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                  example: 55
                text_lines_limited:
                  type: boolean
                  description: |
                    (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                  example: true
                text_max_lines:
                  type: integer
                  description: |
                    (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                  example: 4
                number_limited:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the value of a number option.
                  example: true
                number_limit_mode:
                  type: string
                  description: |
                    (numbers_only_text) The type of limit on values entered for a number option.
                  example: lowest
                  enum:
                    - lowest
                    - highest
                    - range
                number_lowest_value:
                  type: number
                  description: |
                    (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                  example: 100
                number_highest_value:
                  type: number
                  description: |
                    (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                number_integers_only:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                  example: false
                product_list_adjusts_inventory:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                product_list_adjusts_pricing:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                product_list_shipping_calc:
                  type: string
                  description: |
                    (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                  example: weight
                  enum:
                    - none
                    - weight
                    - package
              description: The values for option config can vary based on the Modifier created.
            option_values:
              type: array
              items:
                title: Modifier Value
                type: object
                description: 'Part of Modifier Value Response '
                allOf:
                  - title: Modifier Value Base
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          adjusters:
                            type: object
                            properties:
                              price:
                                title: Adjuster
                                type: object
                                properties:
                                  adjuster:
                                    type: string
                                    description: |
                                      The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    enum:
                                      - relative
                                      - percentage
                                    x-nullable: true
                                  adjuster_value:
                                    type: number
                                    description: |
                                      The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    example: 5
                                description: Adjuster for Complex Rules.
                              weight:
                                title: Adjuster
                                type: object
                                properties:
                                  adjuster:
                                    type: string
                                    description: |
                                      The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    enum:
                                      - relative
                                      - percentage
                                    x-nullable: true
                                  adjuster_value:
                                    type: number
                                    description: |
                                      The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    example: 5
                                description: Adjuster for Complex Rules.
                              image_url:
                                type: string
                                description: |
                                  The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                              purchasing_disabled:
                                type: object
                                properties:
                                  status:
                                    type: boolean
                                    description: |
                                      Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                  message:
                                    type: string
                                    description: |
                                      The message displayed on the storefront when the purchasing disabled status is `true`.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the value; increments sequentially.
          description: Common Modifier properties.
        - required:
            - display_name
          type: object
          properties:
            display_name:
              type: string
              description: |
                The name of the option shown on the storefront.
              example: Donation
              x-required:
                - post
      x-internal: false
    productModifier_Put:
      title: productModifier_Put
      description: The model for a PUT to update a modifier on a product.
      allOf:
        - title: Modifier Base
          required:
            - required
            - type
          type: object
          properties:
            type:
              type: string
              description: |
                BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
              enum:
                - date
                - checkbox
                - file
                - text
                - multi_line_text
                - numbers_only_text
                - radio_buttons
                - rectangles
                - dropdown
                - product_list
                - product_list_with_images
                - swatch
              x-required:
                - post
            required:
              type: boolean
              description: |
                Whether or not this modifer is required or not at checkout. Required in a /POST.
              x-required:
                - post
            sort_order:
              type: integer
              description: The order the modifiers display on the product detail page.
            config:
              title: Option Config
              type: object
              properties:
                default_value:
                  type: string
                  description: |
                    (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                checked_by_default:
                  type: boolean
                  description: |
                    (checkbox) Flag for setting the checkbox to be checked by default.
                checkbox_label:
                  type: string
                  description: |
                    (checkbox) Label displayed for the checkbox option.
                date_limited:
                  type: boolean
                  description: |
                    (date) Flag to limit the dates allowed to be entered on a date option.
                date_limit_mode:
                  type: string
                  description: |
                    (date) The type of limit that is allowed to be entered on a date option.
                  example: range
                  enum:
                    - earliest
                    - range
                    - latest
                date_earliest_value:
                  type: string
                  description: |
                    (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                date_latest_value:
                  type: string
                  description: |
                    (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                file_types_mode:
                  type: string
                  description: |
                    (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                  example: specific
                  enum:
                    - specific
                    - all
                file_types_supported:
                  type: array
                  description: |
                    (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                      `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                      `other` - Allows file types defined in the `file_types_other` array.
                  items:
                    type: string
                    example: 'images, documents, other'
                file_types_other:
                  type: array
                  description: |
                    (file) A list of other file types allowed with the file upload option.
                  items:
                    type: string
                    example: pdf
                file_max_size:
                  type: integer
                  description: |
                    (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                  example: 5
                text_characters_limited:
                  type: boolean
                  description: |
                    (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                text_min_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                  example: 1
                text_max_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                  example: 55
                text_lines_limited:
                  type: boolean
                  description: |
                    (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                  example: true
                text_max_lines:
                  type: integer
                  description: |
                    (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                  example: 4
                number_limited:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the value of a number option.
                  example: true
                number_limit_mode:
                  type: string
                  description: |
                    (numbers_only_text) The type of limit on values entered for a number option.
                  example: lowest
                  enum:
                    - lowest
                    - highest
                    - range
                number_lowest_value:
                  type: number
                  description: |
                    (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                  example: 100
                number_highest_value:
                  type: number
                  description: |
                    (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                number_integers_only:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                  example: false
                product_list_adjusts_inventory:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                product_list_adjusts_pricing:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                product_list_shipping_calc:
                  type: string
                  description: |
                    (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                  example: weight
                  enum:
                    - none
                    - weight
                    - package
              description: The values for option config can vary based on the Modifier created.
            option_values:
              type: array
              items:
                title: Modifier Value
                type: object
                description: 'Part of Modifier Value Response '
                allOf:
                  - title: Modifier Value Base
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          adjusters:
                            type: object
                            properties:
                              price:
                                title: Adjuster
                                type: object
                                properties:
                                  adjuster:
                                    type: string
                                    description: |
                                      The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    enum:
                                      - relative
                                      - percentage
                                    x-nullable: true
                                  adjuster_value:
                                    type: number
                                    description: |
                                      The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    example: 5
                                description: Adjuster for Complex Rules.
                              weight:
                                title: Adjuster
                                type: object
                                properties:
                                  adjuster:
                                    type: string
                                    description: |
                                      The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    enum:
                                      - relative
                                      - percentage
                                    x-nullable: true
                                  adjuster_value:
                                    type: number
                                    description: |
                                      The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    example: 5
                                description: Adjuster for Complex Rules.
                              image_url:
                                type: string
                                description: |
                                  The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                              purchasing_disabled:
                                type: object
                                properties:
                                  status:
                                    type: boolean
                                    description: |
                                      Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                  message:
                                    type: string
                                    description: |
                                      The message displayed on the storefront when the purchasing disabled status is `true`.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the value; increments sequentially.
          description: Common Modifier properties.
      x-internal: false
    productModifierOptionValue_Base:
      title: productModifierOptionValue_Base
      required:
        - label
        - sort_order
      type: object
      properties:
        is_default:
          type: boolean
          description: |
            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
          example: false
        label:
          type: string
          description: |
            The text display identifying the value on the storefront. Required in a /POST.
          example: Green
          x-required:
            - post
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the value will be displayed on the product page. Required in a /POST.
          example: 0
          x-required:
            - post
        value_data:
          type: object
          properties: {}
          description: |
            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.
          nullable: true
        adjusters:
          $ref: '#/components/schemas/adjusters_Full'
      description: Common Product Modifer `option_value` properties.
      x-internal: false
    productModifierOptionValue_Full:
      title: productModifierOptionValue_Full
      description: Product Modifer `option_value`.
      allOf:
        - $ref: '#/components/schemas/productModifierOptionValue_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
            option_id:
              type: integer
      x-internal: false
    productModifierOptionValue_Post:
      title: productModifierOptionValue_Post
      description: The model for a POST to create a modifier value on a product.
      allOf:
        - title: Modifier Value Base
          allOf:
            - title: Option Value Base
              required:
                - label
                - sort_order
              type: object
              properties:
                is_default:
                  type: boolean
                  description: |
                    The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                  example: false
                label:
                  type: string
                  description: |
                    The text display identifying the value on the storefront. Required in a /POST.
                  example: Green
                  x-required:
                    - post
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    The order in which the value will be displayed on the product page. Required in a /POST.
                  example: 0
                  x-required:
                    - post
                value_data:
                  type: object
                  properties: {}
                  description: |
                    Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
              description: Common Option Value properties.
            - type: object
              properties:
                adjusters:
                  type: object
                  properties:
                    price:
                      title: Adjuster
                      type: object
                      properties:
                        adjuster:
                          type: string
                          description: |
                            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          nullable: true
                          enum:
                            - relative
                            - percentage
                        adjuster_value:
                          type: number
                          description: |
                            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          example: 5
                      description: Adjuster for Complex Rules.
                    weight:
                      title: Adjuster
                      type: object
                      properties:
                        adjuster:
                          type: string
                          description: |
                            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          nullable: true
                          enum:
                            - relative
                            - percentage
                        adjuster_value:
                          type: number
                          description: |
                            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          example: 5
                      description: Adjuster for Complex Rules.
                    image_url:
                      type: string
                      description: |
                        The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                      example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                    purchasing_disabled:
                      type: object
                      properties:
                        status:
                          type: boolean
                          description: |
                            Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                        message:
                          type: string
                          description: |
                            The message displayed on the storefront when the purchasing disabled status is `true`.
      x-internal: false
    productModifierOptionValue_Put:
      title: productModifierOptionValue_Put
      description: The model for a PUT to update a modifier value on a product.
      allOf:
        - title: Modifier Value Base
          allOf:
            - title: Option Value Base
              required:
                - label
                - sort_order
              type: object
              properties:
                is_default:
                  type: boolean
                  description: |
                    The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                  example: false
                label:
                  type: string
                  description: |
                    The text display identifying the value on the storefront. Required in a /POST.
                  example: Green
                  x-required:
                    - post
                sort_order:
                  maximum: 2147483647
                  minimum: -2147483648
                  type: integer
                  description: |
                    The order in which the value will be displayed on the product page. Required in a /POST.
                  example: 0
                  x-required:
                    - post
                value_data:
                  type: object
                  properties: {}
                  description: |
                    Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
              description: Common Option Value properties.
            - type: object
              properties:
                adjusters:
                  type: object
                  properties:
                    price:
                      title: Adjuster
                      type: object
                      properties:
                        adjuster:
                          type: string
                          description: |
                            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          nullable: true
                          enum:
                            - relative
                            - percentage
                        adjuster_value:
                          type: number
                          description: |
                            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          example: 5
                      description: Adjuster for Complex Rules.
                    weight:
                      title: Adjuster
                      type: object
                      properties:
                        adjuster:
                          type: string
                          description: |
                            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          nullable: true
                          enum:
                            - relative
                            - percentage
                        adjuster_value:
                          type: number
                          description: |
                            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          example: 5
                      description: Adjuster for Complex Rules.
                    image_url:
                      type: string
                      description: |
                        The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                      example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                    purchasing_disabled:
                      type: object
                      properties:
                        status:
                          type: boolean
                          description: |
                            Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                        message:
                          type: string
                          description: |
                            The message displayed on the storefront when the purchasing disabled status is `true`.
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
              x-required:
                - put
      x-internal: false
    resp_productionOption:
      title: resp_productionOption
      type: object
      properties:
        data:
          $ref: '#/components/schemas/productOption_Full'
        meta:
          title: Meta
          type: object
          properties:
            'null':
              type: string
          description: Empty meta object; may be used later.
      x-internal: false
    productOption_Base:
      title: productOption_Base
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numerical ID of the option, increments sequentially.
          nullable: true
          example: 55
        product_id:
          type: integer
          description: |
            The unique numerical ID of the product to which the option belongs.
          example: 4
          x-required:
            - post
            - put
        display_name:
          maxLength: 255
          minLength: 1
          type: string
          description: |
            The name of the option shown on the storefront.
          example: Add-a-$5-Donation1535042499-187
          x-required:
            - post
            - put
        type:
          type: string
          description: |
            The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
          enum:
            - radio_buttons
            - rectangles
            - dropdown
            - product_list
            - product_list_with_images
            - swatch
          x-required:
            - post
            - put
        config:
          $ref: '#/components/schemas/productOptionConfig_Full'
        sort_order:
          type: integer
          description: 'Order in which the option is displayed on the storefront. '
          example: 1
        option_values:
          $ref: '#/components/schemas/productOptionOptionValue_Full'
      description: Common Option properties.
      x-internal: false
    productOption_Full:
      title: productOption_Full
      allOf:
        - $ref: '#/components/schemas/productOption_Base'
        - type: object
          properties:
            name:
              type: string
              description: |
                The unique option name, auto-generated from the display name, a timestamp, and the product ID.
              example: Add-a-$5-Donation1535042499-187
      x-internal: false
    productOption_Post:
      title: productOption_Post
      description: The model for a POST to create options on a product.
      allOf:
        - title: Option Base
          type: object
          properties:
            id:
              type: integer
              description: |
                The unique numerical ID of the option, increments sequentially.
              nullable: true
              example: 55
            product_id:
              type: integer
              description: |
                The unique numerical ID of the product to which the option belongs.
              example: 4
              x-required:
                - post
                - put
            display_name:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The name of the option shown on the storefront.
              example: Add-a-$5-Donation1535042499-187
              x-required:
                - post
                - put
            type:
              type: string
              description: |
                The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
              enum:
                - radio_buttons
                - rectangles
                - dropdown
                - product_list
                - product_list_with_images
                - swatch
              x-required:
                - post
                - put
            config:
              title: Option Config
              type: object
              properties:
                default_value:
                  type: string
                  description: |
                    (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                checked_by_default:
                  type: boolean
                  description: |
                    (checkbox) Flag for setting the checkbox to be checked by default.
                checkbox_label:
                  type: string
                  description: |
                    (checkbox) Label displayed for the checkbox option.
                date_limited:
                  type: boolean
                  description: |
                    (date) Flag to limit the dates allowed to be entered on a date option.
                date_limit_mode:
                  type: string
                  description: |
                    (date) The type of limit that is allowed to be entered on a date option.
                  example: range
                  enum:
                    - earliest
                    - range
                    - latest
                date_earliest_value:
                  type: string
                  description: |
                    (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                date_latest_value:
                  type: string
                  description: |
                    (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                file_types_mode:
                  type: string
                  description: |
                    (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                  example: specific
                  enum:
                    - specific
                    - all
                file_types_supported:
                  type: array
                  description: |
                    (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                      `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                      `other` - Allows file types defined in the `file_types_other` array.
                  items:
                    type: string
                    example: 'images, documents, other'
                file_types_other:
                  type: array
                  description: |
                    (file) A list of other file types allowed with the file upload option.
                  items:
                    type: string
                    example: pdf
                file_max_size:
                  type: integer
                  description: |
                    (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                  example: 5
                text_characters_limited:
                  type: boolean
                  description: |
                    (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                text_min_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                  example: 1
                text_max_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                  example: 55
                text_lines_limited:
                  type: boolean
                  description: |
                    (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                  example: true
                text_max_lines:
                  type: integer
                  description: |
                    (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                  example: 4
                number_limited:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the value of a number option.
                  example: true
                number_limit_mode:
                  type: string
                  description: |
                    (numbers_only_text) The type of limit on values entered for a number option.
                  example: lowest
                  enum:
                    - lowest
                    - highest
                    - range
                number_lowest_value:
                  type: number
                  description: |
                    (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                  example: 100
                number_highest_value:
                  type: number
                  description: |
                    (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                number_integers_only:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                  example: false
                product_list_adjusts_inventory:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                product_list_adjusts_pricing:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                product_list_shipping_calc:
                  type: string
                  description: |
                    (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                  example: weight
                  enum:
                    - none
                    - weight
                    - package
              description: The values for option config can vary based on the Modifier created.
            sort_order:
              type: integer
              description: 'Order in which the option is displayed on the storefront. '
              example: 1
            option_values:
              minItems: 1
              type: array
              items:
                title: Option Value
                type: object
                allOf:
                  - title: Option Value Base
                    required:
                      - label
                      - sort_order
                    type: object
                    properties:
                      is_default:
                        type: boolean
                        description: |
                          The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                        example: false
                      label:
                        type: string
                        description: |
                          The text display identifying the value on the storefront. Required in a /POST.
                        example: Green
                        x-required:
                          - post
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The order in which the value will be displayed on the product page. Required in a /POST.
                        example: 0
                        x-required:
                          - post
                      value_data:
                        type: object
                        properties: {}
                        description: |
                          Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                    description: Common Option Value properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the value; increments sequentially.
              x-required:
                - post
                - put
            image_url:
              type: string
              description: Publicly available image url
          description: Common Option properties.
      x-internal: false
    productOption_Put:
      title: productOption_Put
      description: The model for a PUT to update options on a product.
      allOf:
        - title: Option Base
          type: object
          properties:
            id:
              type: integer
              description: |
                The unique numerical ID of the option, increments sequentially.
              nullable: true
              example: 55
            product_id:
              type: integer
              description: |
                The unique numerical ID of the product to which the option belongs.
              example: 4
              x-required:
                - post
                - put
            display_name:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The name of the option shown on the storefront.
              example: Add-a-$5-Donation1535042499-187
              x-required:
                - post
                - put
            type:
              type: string
              description: |
                The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
              enum:
                - radio_buttons
                - rectangles
                - dropdown
                - product_list
                - product_list_with_images
                - swatch
              x-required:
                - post
                - put
            config:
              title: Option Config
              type: object
              properties:
                default_value:
                  type: string
                  description: |
                    (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                checked_by_default:
                  type: boolean
                  description: |
                    (checkbox) Flag for setting the checkbox to be checked by default.
                checkbox_label:
                  type: string
                  description: |
                    (checkbox) Label displayed for the checkbox option.
                date_limited:
                  type: boolean
                  description: |
                    (date) Flag to limit the dates allowed to be entered on a date option.
                date_limit_mode:
                  type: string
                  description: |
                    (date) The type of limit that is allowed to be entered on a date option.
                  example: range
                  enum:
                    - earliest
                    - range
                    - latest
                date_earliest_value:
                  type: string
                  description: |
                    (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                date_latest_value:
                  type: string
                  description: |
                    (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                  format: date
                file_types_mode:
                  type: string
                  description: |
                    (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                  example: specific
                  enum:
                    - specific
                    - all
                file_types_supported:
                  type: array
                  description: |
                    (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                      `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                      `other` - Allows file types defined in the `file_types_other` array.
                  items:
                    type: string
                    example: 'images, documents, other'
                file_types_other:
                  type: array
                  description: |
                    (file) A list of other file types allowed with the file upload option.
                  items:
                    type: string
                    example: pdf
                file_max_size:
                  type: integer
                  description: |
                    (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                  example: 5
                text_characters_limited:
                  type: boolean
                  description: |
                    (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                text_min_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                  example: 1
                text_max_length:
                  type: integer
                  description: |
                    (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                  example: 55
                text_lines_limited:
                  type: boolean
                  description: |
                    (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                  example: true
                text_max_lines:
                  type: integer
                  description: |
                    (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                  example: 4
                number_limited:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the value of a number option.
                  example: true
                number_limit_mode:
                  type: string
                  description: |
                    (numbers_only_text) The type of limit on values entered for a number option.
                  example: lowest
                  enum:
                    - lowest
                    - highest
                    - range
                number_lowest_value:
                  type: number
                  description: |
                    (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                  example: 100
                number_highest_value:
                  type: number
                  description: |
                    (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                number_integers_only:
                  type: boolean
                  description: |
                    (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                  example: false
                product_list_adjusts_inventory:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                product_list_adjusts_pricing:
                  type: boolean
                  description: |
                    (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                product_list_shipping_calc:
                  type: string
                  description: |
                    (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                  example: weight
                  enum:
                    - none
                    - weight
                    - package
              description: The values for option config can vary based on the Modifier created.
            sort_order:
              type: integer
              description: 'Order in which the option is displayed on the storefront. '
              example: 1
            option_values:
              minItems: 1
              type: array
              items:
                title: Option Value
                type: object
                allOf:
                  - title: Option Value Base
                    required:
                      - label
                      - sort_order
                    type: object
                    properties:
                      is_default:
                        type: boolean
                        description: |
                          The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                        example: false
                      label:
                        type: string
                        description: |
                          The text display identifying the value on the storefront. Required in a /POST.
                        example: Green
                        x-required:
                          - post
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The order in which the value will be displayed on the product page. Required in a /POST.
                        example: 0
                        x-required:
                          - post
                      value_data:
                        type: object
                        properties: {}
                        description: |
                          Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                    description: Common Option Value properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the value; increments sequentially.
              x-required:
                - post
                - put
            image_url:
              type: string
              description: Publicly available image url
          description: Common Option properties.
      x-internal: false
    categoriesTree_Resp:
      title: categoriesTree_Resp
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/categoriesTreeNode_Full'
        meta:
          $ref: '#/components/schemas/metaEmpty_Full'
      description: |
        Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.
      x-internal: false
    categoriesTreeNode_Full:
      title: categoriesTreeNode_Full
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numeric ID of the category; increments sequentially.
          example: 26
        parent_id:
          type: integer
          description: |
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
          example: 25
        name:
          type: string
          description: |
            The name displayed for the category. Name is unique with respect to the category's siblings.
          example: Bath
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
          example: true
        url:
          type: string
          description: |
            The custom URL for the category on the storefront.
          example: /towels/bath-towels/
      description: Used to reflect parent <> child category relationships. Used by Category Tree.
      x-internal: false
    category_Full:
      title: category_Full
      type: object
      description: Common Category object properties.
      x-internal: false
      properties:
        id:
          type: integer
          description: |-
            Unique ID of the *Category*. Increments sequentially.
            Read-Only.
          readOnly: true
        parent_id:
          type: integer
          description: |-
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
            Required in a POST if creating a child category.
          example: 2
          x-required:
            - post
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: |-
            The name displayed for the category. Name is unique with respect to the category's siblings.
            Required in a POST.
          example: Bath
          x-required:
            - post
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: <p>We offer a wide variety of products perfect for relaxing</p>
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
          example: 3
        page_title:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Custom title for the category page. If not defined, the category name will be used as the meta title.
          example: Bath
        search_keywords:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the category when searching the store.
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
          items:
            type: string
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Custom meta description for the category page. If not defined, the store's default meta description will be used.
        layout_file:
          maxLength: 500
          minLength: 0
          type: string
          description: |
            A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).
          example: category.html
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
          x-url: true
        custom_url:
          $ref: '#/components/schemas/customUrl_Full'
      required:
        - parent_id
        - name
    brand_Full:
      title: brand_Full
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the *Brand*. Read-Only.
          readOnly: true
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: |-
            The name of the brand. Must be unique.
            Required in POST.
          example: Common Good
          x-required:
            - post
            - put
        page_title:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The title shown in the browser while viewing the brand.
          example: Common Good
        meta_keywords:
          type: array
          description: |
            Comma-separated list of meta keywords to include in the HTML.
          items:
            type: string
            example: 'modern, clean, contemporary'
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            A meta description to include.
          example: Common Good is a modern brand.
        search_keywords:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate this brand.
          example: 'kitchen, laundry, cart, storage'
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
          example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
          x-url: true
        custom_url:
          $ref: '#/components/schemas/customUrl_Full'
      description: Common Brand properties.
      x-internal: false
    productVariant_Base:
      title: productVariant_Base
      type: object
      properties:
        cost_price:
          minimum: 0
          type: number
          description: The cost price of the variant. Not affected by Price List prices.
          format: double
          nullable: true
        price:
          minimum: 0
          type: number
          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
          format: double
          nullable: true
        sale_price:
          minimum: 0
          type: number
          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
          format: double
          nullable: true
        retail_price:
          minimum: 0
          type: number
          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
          format: double
          nullable: true
        weight:
          minimum: 0
          type: number
          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
          format: double
          nullable: true
        width:
          minimum: 0
          type: number
          description: |
            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
          format: double
          nullable: true
        height:
          minimum: 0
          type: number
          description: |
            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
          format: double
          nullable: true
        depth:
          minimum: 0
          type: number
          description: |
            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
          format: double
          nullable: true
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: double
          nullable: true
        purchasing_disabled:
          type: boolean
          description: 'If `true`, this variant will not be purchasable on the storefront.'
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
        upc:
          type: string
          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
          nullable: true
        inventory_level:
          type: integer
          description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
          nullable: true
        inventory_warning_level:
          type: integer
          description: 'When the variant hits this inventory level, it is considered low stock.'
          nullable: true
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Identifies where in a warehouse the variant is located.
          nullable: true
        mpn:
          type: string
          description: The Manufacturer Part Number (MPN) for the variant.
        gtin:
          type: string
          example: '012345678905'
      description: Common Variant properties.
      x-internal: false
      x-examples:
        example-1:
          cost_price: 0
          price: 0
          sale_price: 0
          retail_price: 0
          weight: 0
          width: 0
          height: 0
          depth: 0
          is_free_shipping: true
          fixed_cost_shipping_price: 0
          purchasing_disabled: true
          purchasing_disabled_message: string
          upc: string
          inventory_level: 0
          inventory_warning_level: 0
          bin_picking_number: string
          mpn: string
          gtin: '012345678905'
    productVariant_Full:
      title: productVariant_Full
      allOf:
        - $ref: '#/components/schemas/productVariant_Base'
        - type: object
          properties:
            id:
              type: integer
            product_id:
              type: integer
            sku:
              type: string
            sku_id:
              type: integer
              description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
              nullable: true
            option_values:
              type: array
              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
              items:
                $ref: '#/components/schemas/productVariantOptionValue_Full'
            calculated_price:
              type: number
              description: |
                The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
              format: double
            calculated_weight:
              type: number
      x-internal: false
      description: ''
      x-examples:
        example-1:
          cost_price: 0
          price: 0
          sale_price: 0
          retail_price: 0
          weight: 0
          width: 0
          height: 0
          depth: 0
          is_free_shipping: true
          fixed_cost_shipping_price: 0
          purchasing_disabled: true
          purchasing_disabled_message: string
          upc: string
          inventory_level: 0
          inventory_warning_level: 0
          bin_picking_number: string
          mpn: string
          gtin: '012345678905'
          id: 0
          product_id: 0
          sku: string
          sku_id: 0
          option_values:
            - option_display_name: Color
              label: Beige
              id: 146
              option_id: 151
          calculated_price: 0
          calculated_weight: 0
    productVariant_Post:
      title: productVariant_Post
      description: |
        The model for a POST to create variants on a product.
      allOf:
        - title: Variant Base
          type: object
          properties:
            cost_price:
              minimum: 0
              type: number
              description: The cost price of the variant. Not affected by Price List prices.
              format: double
              nullable: true
            price:
              minimum: 0
              type: number
              description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
              format: double
              nullable: true
            sale_price:
              minimum: 0
              type: number
              description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
              format: double
              nullable: true
            retail_price:
              minimum: 0
              type: number
              description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
              format: double
              nullable: true
            weight:
              minimum: 0
              type: number
              description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
              format: double
              nullable: true
            width:
              minimum: 0
              type: number
              description: |
                Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
              format: double
              nullable: true
            height:
              minimum: 0
              type: number
              description: |
                Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
              format: double
              nullable: true
            depth:
              minimum: 0
              type: number
              description: |
                Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
              format: double
              nullable: true
            is_free_shipping:
              type: boolean
              description: |
                Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
            fixed_cost_shipping_price:
              minimum: 0
              type: number
              description: |
                A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
              format: double
              nullable: true
            purchasing_disabled:
              type: boolean
              description: 'If `true`, this variant will not be purchasable on the storefront.'
            purchasing_disabled_message:
              maxLength: 255
              minLength: 0
              type: string
              description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
            upc:
              type: string
              description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
              nullable: true
            inventory_level:
              type: integer
              description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
              nullable: true
            inventory_warning_level:
              type: integer
              description: 'When the variant hits this inventory level, it is considered low stock.'
              nullable: true
            bin_picking_number:
              maxLength: 255
              minLength: 0
              type: string
              description: Identifies where in a warehouse the variant is located.
              nullable: true
            image_url:
              type: string
              description: Publicly available image url
            gtin:
              type: string
              description: Global Trade Item Number
              example: '012345678905'
            mpn:
              type: string
              description: Manufacturer Part Number
              example: HV-HM02
          description: Common Variant properties.
        - type: object
          properties:
            product_id:
              type: integer
              x-required:
                - post
            sku:
              maxLength: 255
              minLength: 1
              type: string
              x-required:
                - post
            option_values:
              type: array
              description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
              items:
                $ref: '#/components/schemas/productVariantOptionValue_Full'
              x-required:
                - post
      x-internal: false
    variantCollection_Put:
      title: variantCollection_Put
      type: array
      items:
        $ref: '#/components/schemas/productVariant_Full'
      x-internal: false
    variant_Put:
      title: variant_Put
      description: |
        The model for a PUT to update variants on a product.
      allOf:
        - title: Variant Base
          type: object
          properties:
            cost_price:
              minimum: 0
              type: number
              description: The cost price of the variant. Not affected by Price List prices.
              format: double
              nullable: true
            price:
              minimum: 0
              type: number
              description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
              format: double
              nullable: true
            sale_price:
              minimum: 0
              type: number
              description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
              format: double
              nullable: true
            retail_price:
              minimum: 0
              type: number
              description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
              format: double
              nullable: true
            weight:
              minimum: 0
              type: number
              description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
              format: double
              nullable: true
            width:
              minimum: 0
              type: number
              description: |
                Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
              format: double
              nullable: true
            height:
              minimum: 0
              type: number
              description: |
                Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
              format: double
              nullable: true
            depth:
              minimum: 0
              type: number
              description: |
                Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
              format: double
              nullable: true
            is_free_shipping:
              type: boolean
              description: |
                Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
            fixed_cost_shipping_price:
              minimum: 0
              type: number
              description: |
                A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
              format: double
              nullable: true
            purchasing_disabled:
              type: boolean
              description: 'If `true`, this variant will not be purchasable on the storefront.'
            purchasing_disabled_message:
              maxLength: 255
              minLength: 0
              type: string
              description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
            upc:
              type: string
              description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
              nullable: true
            inventory_level:
              type: integer
              description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
              nullable: true
            inventory_warning_level:
              type: integer
              description: 'When the variant hits this inventory level, it is considered low stock.'
              nullable: true
            bin_picking_number:
              maxLength: 255
              minLength: 0
              type: string
              description: Identifies where in a warehouse the variant is located.
              nullable: true
          description: Common Variant properties.
        - type: object
          properties:
            id:
              type: integer
              x-required:
                - put
      x-internal: false
    productVariant_Post_Product:
      title: productVariant_Post_Product
      description: |
        The model for a POST to create variants on a product.
      allOf:
        - $ref: '#/components/schemas/productVariant_Base'
        - type: object
          properties:
            sku:
              maxLength: 255
              minLength: 1
              type: string
              x-required:
                - post
            option_values:
              type: array
              items:
                title: Option Value Product Post
                type: object
                description: The model for a POST to create option values on a product.
                allOf:
                  - title: Option Value Product Base
                    type: object
                    properties:
                      option_display_name:
                        maxLength: 255
                        minLength: 1
                        type: string
                        description: |
                          The name of the option.
                        example: Color
                        x-required:
                          - post
                      label:
                        maxLength: 255
                        minLength: 1
                        type: string
                        description: |
                          The label of the option value.
                        example: Beige
                        x-required:
                          - post
                    description: Common Option Value Product properties.
              x-required:
                - post
      x-internal: false
    productVariant_Put_Product:
      title: productVariant_Put_Product
      type: object
      properties:
        cost_price:
          minimum: 0
          type: number
          description: The cost price of the variant. Not affected by Price List prices.
          format: double
          nullable: true
        price:
          minimum: 0
          type: number
          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
          format: double
          nullable: true
        sale_price:
          minimum: 0
          type: number
          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
          format: double
          nullable: true
        retail_price:
          minimum: 0
          type: number
          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
          format: double
          nullable: true
        weight:
          minimum: 0
          type: number
          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
          format: double
          nullable: true
        width:
          minimum: 0
          type: number
          description: |
            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
          format: double
          nullable: true
        height:
          minimum: 0
          type: number
          description: |
            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
          format: double
          nullable: true
        depth:
          minimum: 0
          type: number
          description: |
            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
          format: double
          nullable: true
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: double
          nullable: true
        purchasing_disabled:
          type: boolean
          description: 'If `true`, this variant will not be purchasable on the storefront.'
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
        upc:
          type: string
          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
          nullable: true
        inventory_level:
          type: integer
          description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
          nullable: true
        inventory_warning_level:
          type: integer
          description: 'When the variant hits this inventory level, it is considered low stock.'
          nullable: true
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Identifies where in a warehouse the variant is located.
          nullable: true
        product_id:
          type: integer
        sku:
          maxLength: 255
          minLength: 1
          type: string
      description: |
        The model for a PUT to update variants on a product.
      x-internal: false
    productVariantOptionValue_Full:
      title: productVariantOptionValue_Full
      allOf:
        - type: object
          properties:
            option_display_name:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The name of the option.
              example: Color
              x-required:
                - post
            label:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The label of the option value.
              example: Beige
              x-required:
                - post
        - $ref: '#/components/schemas/productVariantOptionValue_Base'
      x-internal: false
    productOptionValue_Post_Product:
      title: productOptionValue_Post_Product
      description: The model for a POST to create option values on a product.
      allOf:
        - title: Option Value Product Base
          type: object
          properties:
            option_display_name:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The name of the option.
              example: Color
              x-required:
                - post
            label:
              maxLength: 255
              minLength: 1
              type: string
              description: |
                The label of the option value.
              example: Beige
              x-required:
                - post
          description: Common Option Value Product properties.
      x-internal: false
    productVariantOptionValue_Base:
      title: productVariantOptionValue_Base
      type: object
      properties:
        id:
          type: integer
          description: '`option_value` ID.'
          example: 146
        option_id:
          type: integer
          description: '`option` ID.'
          example: 151
      description: Common Product Variant Option properties.
      x-internal: false
    productVariantOptionValue_Post:
      title: productVariantOptionValue_Post
      type: object
      properties:
        id:
          type: integer
          x-required:
            - post
        option_id:
          type: integer
          x-required:
            - post
      description: The model for a POST to create option values on a variant.
      x-internal: false
    resp_productOptionValue:
      title: resp_productOptionValue
      type: object
      properties:
        data:
          $ref: '#/components/schemas/productOptionOptionValue_Full'
        meta:
          title: Meta
          type: object
          properties:
            'null':
              type: string
          description: Empty meta object; may be used later.
      x-internal: false
    productOptionOptionValue_Base:
      title: productOptionOptionValue_Base
      required:
        - label
        - sort_order
      type: object
      properties:
        is_default:
          type: boolean
          description: |
            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
          example: false
        label:
          type: string
          description: |
            The text display identifying the value on the storefront. Required in a /POST.
          example: Green
          x-required:
            - post
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the value will be displayed on the product page. Required in a /POST.
          example: 0
          x-required:
            - post
        value_data:
          type: object
          properties: {}
          description: |
            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.
          nullable: true
      description: Common Product Option `option_value` properties.
      x-internal: false
    productOptionOptionValue_Full:
      title: productOptionOptionValue_Full
      description: Product Option `option_value`.
      allOf:
        - $ref: '#/components/schemas/productOptionOptionValue_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
      x-internal: false
    productOptionValue_Post:
      title: productOptionValue_Post
      description: The model for a POST to create option values on a product.
      allOf:
        - title: Option Value Base
          required:
            - label
            - sort_order
          type: object
          properties:
            is_default:
              type: boolean
              description: |
                The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
              example: false
            label:
              type: string
              description: |
                The text display identifying the value on the storefront. Required in a /POST.
              example: Green
              x-required:
                - post
            sort_order:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: |
                The order in which the value will be displayed on the product page. Required in a /POST.
              example: 0
              x-required:
                - post
            value_data:
              type: object
              properties: {}
              description: |
                Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
          description: Common Option Value properties.
      x-internal: false
    productOptionValue_Put:
      title: productOptionValue_Put
      description: The model for a PUT to update option values on a product.
      allOf:
        - title: Option Value Base
          required:
            - label
            - sort_order
          type: object
          properties:
            is_default:
              type: boolean
              description: |
                The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
              example: false
            label:
              type: string
              description: |
                The text display identifying the value on the storefront. Required in a /POST.
              example: Green
              x-required:
                - post
            sort_order:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: |
                The order in which the value will be displayed on the product page. Required in a /POST.
              example: 0
              x-required:
                - post
            value_data:
              type: object
              properties: {}
              description: |
                Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
          description: Common Option Value properties.
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the value; increments sequentially.
              x-required:
                - put
      x-internal: false
    productImage_Base:
      title: productImage_Base
      type: object
      properties:
        image_file:
          type: string
          description: |
            The local path to the original image file uploaded to BigCommerce. Limit of 1MB per file.
        is_thumbnail:
          type: boolean
          description: |
            Flag for identifying whether the image is used as the product's thumbnail.
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
        description:
          type: string
          description: |
            The description for the image.
        image_url:
          type: string
          description: 'Must be a fully qualified URL path, including protocol. Limit of 8MB per file.'
      description: Common ProductImage properties.
      x-internal: false
    productImage_Post:
      title: productImage_Post
      description: The model for a POST to create an image on a product.
      allOf:
        - title: Product Image Base
          type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the image; increments sequentially.
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the image is associated.
            image_file:
              type: string
              description: |
                The local path to the original image file uploaded to BigCommerce.
            url_zoom:
              type: string
              description: |
                The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
            url_standard:
              type: string
              description: |
                The standard URL for this image. By default, this is used for product-page images.
            url_thumbnail:
              type: string
              description: |
                The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
            url_tiny:
              type: string
              description: |
                The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
            date_modified:
              type: string
              description: |
                The date on which the product image was modified.
              format: date-time
            is_thumbnail:
              type: boolean
              description: |
                Flag for identifying whether the image is used as the product's thumbnail.
            sort_order:
              maximum: 2147483647
              minimum: -2147483648
              type: integer
              description: |
                The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
            description:
              type: string
              description: |
                The description for the image.
          description: Common ProductImage properties.
        - type: object
          properties:
            image_url:
              type: string
              description: |
                Must be a fully qualified URL path, including protocol. Limit of 8MB per file.
            image_file:
              type: string
              description: |
                Must be sent as a multipart/form-data field in the request body.
      x-internal: false
    productImage_Put:
      title: productImage_Put
      description: The model for a PUT to update applicable Product Image fields.
      allOf:
        - title: Product Image Base
          type: object
          properties:
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the image is associated.
            url_zoom:
              type: string
              description: |
                The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
            url_standard:
              type: string
              description: |
                The standard URL for this image. By default, this is used for product-page images.
            url_thumbnail:
              type: string
              description: |
                The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
            url_tiny:
              type: string
              description: |
                The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
          description: Common ProductImage properties.
        - $ref: '#/components/schemas/productImage_Base'
      x-internal: false
    productVideo_Base:
      title: productVideo_Base
      type: object
      description: |
        The model for a POST to create a video on a product.
      x-internal: false
      properties:
        title:
          type: string
          maxLength: 255
          minLength: 0
          description: |
            The title for the video. If left blank, this will be filled in according to data on a host site.
          example: Writing Great Documentation
        description:
          type: string
          description: |
            The description for the video. If left blank, this will be filled in according to data on a host site.
          example: A video about documenation
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: |
            The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
          example: 1
        type:
          type: string
          description: |
            The video type (a short name of a host site).
          enum:
            - youtube
        video_id:
          type: string
          description: The ID of the video on a host site.
          example: z3fRu9pkuXE
    productVideo_Full:
      title: productVideo_Full
      description: |
        A product video model.
      allOf:
        - $ref: '#/components/schemas/productVideo_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the product video; increments sequentially.
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the image is associated.
            length:
              type: string
              description: |
                Length of the video. This will be filled in according to data on a host site.
      x-internal: false
    productVideo_Post:
      title: productVideo_Post
      description: |
        The model for a POST to create a video on a product.
      allOf:
        - $ref: '#/components/schemas/productVideo_Base'
      x-internal: false
    productVideo_Put:
      title: productVideo_Put
      description: |
        The model for a PUT to update a video on a product.
      allOf:
        - $ref: '#/components/schemas/productVideo_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the product video; increments sequentially.
              x-required:
                - put
      x-internal: false
    productReview_Base:
      title: productReview_Base
      required:
        - date_reviewed
        - title
      type: object
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
          description: |-
            The title for the product review.
            Required in /POST.
        text:
          type: string
          description: |
            The text for the product review.
        status:
          type: string
          description: |
            The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
        rating:
          type: integer
          description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
        email:
          type: string
          description: 'The email of the reviewer. Must be a valid email, or an empty string.'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: The name of the reviewer.
        date_reviewed:
          type: string
          description: |
            Date the product was reviewed. Required in /POST.
          format: date-time
      x-internal: false
    productReview_Full:
      title: productReview_Full
      description: |
        A product review model.
      allOf:
        - $ref: '#/components/schemas/productReview_Base'
        - type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the product review; increments sequentially.
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the review is associated.
            date_created:
              type: string
              description: |
                Date the product review was created.
              format: date-time
            date_modified:
              type: string
              description: |
                Date the product review was modified.
              format: date-time
      x-internal: false
    productReview_Post:
      title: productReview_Post
      description: |
        The model for a POST to create a product review.
      allOf:
        - title: Product Review Base
          required:
            - date_reviewed
            - title
          type: object
          properties:
            title:
              maxLength: 255
              minLength: 0
              type: string
              description: |-
                The title for the product review.
                Required in /POST.
            text:
              type: string
              description: |
                The text for the product review.
            status:
              type: string
              description: |
                The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
            rating:
              type: integer
              description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
            email:
              type: string
              description: 'The email of the reviewer. Must be a valid email, or an empty string.'
            name:
              maxLength: 255
              minLength: 0
              type: string
              description: The name of the reviewer.
            date_reviewed:
              type: string
              description: |
                Date the product was reviewed. Required in /POST.
              format: date-time
      x-internal: false
    productReview_Put:
      title: productReview_Put
      description: |
        The model for a PUT to update a product review.
      allOf:
        - title: Product Review Base
          required:
            - date_reviewed
            - title
          type: object
          properties:
            title:
              maxLength: 255
              minLength: 0
              type: string
              description: |-
                The title for the product review.
                Required in /POST.
            text:
              type: string
              description: |
                The text for the product review.
            status:
              type: string
              description: |
                The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
            rating:
              type: integer
              description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
            email:
              type: string
              description: 'The email of the reviewer. Must be a valid email, or an empty string.'
            name:
              maxLength: 255
              minLength: 0
              type: string
              description: The name of the reviewer.
            date_reviewed:
              type: string
              description: |
                Date the product was reviewed. Required in /POST.
              format: date-time
      x-internal: false
    resp_productImage:
      title: resp_productImage
      type: object
      properties:
        data:
          $ref: '#/components/schemas/productImage_Full'
        meta:
          title: Meta
          type: object
          properties: {}
          description: Empty meta object; may be used later.
      description: |-
        Image Response returns for:
        * Create Variant Image
        * Create Modifier Image
        * Create Category Image
        * Create Brand Image
      x-internal: false
    resourceImage_Full:
      title: resourceImage_Full
      type: object
      properties:
        image_url:
          type: string
          description: |
            A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file.
      description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
      x-internal: false
    product_Post:
      title: product_Post
      description: The model for a POST to create a product.
      allOf:
        - $ref: '#/components/schemas/product_Base'
        - type: object
          properties:
            variants:
              type: array
              items:
                $ref: '#/components/schemas/productVariant_Post_Product'
      x-internal: false
    product_Put:
      title: product_Put
      description: The model for a PUT to update a product.
      allOf:
        - $ref: '#/components/schemas/product_Base'
        - type: object
          properties:
            variants:
              type: array
              items:
                $ref: '#/components/schemas/productVariant_Put_Product'
      x-internal: false
    catalogSummary_Full:
      title: catalogSummary_Full
      type: object
      properties:
        inventory_count:
          type: integer
          description: |
            A count of all inventory items in the catalog.
          example: 2000
        inventory_value:
          type: number
          description: |
            Total value of store's inventory.
          format: double
          example: 267000
        primary_category_id:
          type: integer
          description: |
            ID of the category containing the most products.
          example: 23
        primary_category_name:
          type: string
          description: |
            Name of the category containing the most products.
          example: Shop All
        variant_count:
          type: integer
          description: Total number of variants
          example: 46
        highest_variant_price:
          type: number
          description: Highest priced variant
          format: double
          example: 249
        average_variant_price:
          type: number
          description: Average price of all variants
          format: double
          example: 83.07978261
        lowest_variant_price:
          type: string
          description: Lowest priced variant in the store
          example: '7'
        oldest_variant_date:
          type: string
          example: '2018-08-15T00:00:00+00:00'
        newest_variant_date:
          type: string
          example: '2018-08-16T00:00:00+00:00'
      description: Catalog Summary object describes a lightweight summary of the catalog.
      x-internal: false
    metafield_Base:
      title: metafield_Base
      type: object
      description: 'Metafield for products, categories, variants, and brands; the max number of metafields allowed on each is 50. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'
      x-internal: false
      properties:
        key:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`. Required for POST.
          example: Location
          x-required:
            - post
        value:
          maxLength: 65535
          minLength: 1
          type: string
          description: |
            The value of the field, for example: `1`, `blue`. Required for POST.
          example: 4HG
          x-required:
            - post
        namespace:
          maxLength: 64
          minLength: 1
          type: string
          description: |
            Namespace for the metafield, for organizational purposes. This is set by the developer. Required for POST.
          example: Warehouse Locations
          x-required:
            - post
        permission_set:
          type: string
          description: |-
            Determines the visibility and writeability of the field by other API consumers.

            |Value|Description
            |-|-|
            |`app_only`|Private to the app that owns the field|
            |`read`|Visible to other API consumers|
            |`write`|Open for reading and writing by other API consumers|
            |`read_and_sf_access`|Visible to other API consumers, including on storefront|
            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Description for the metafields.
          example: Location in the warehouse
      required:
        - permission_set
        - namespace
        - key
        - value
    complexRule_Base:
      title: complexRule_Base
      type: object
      properties:
        id:
          type: integer
          description: |-
            The unique numeric ID of the rule; increments sequentially.
            Read-Only
          example: 5
        product_id:
          type: integer
          description: |
            The unique numeric ID of the product with which the rule is associated; increments sequentially.
          nullable: true
          example: 67
          x-required:
            - post
            - put
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            The priority to give this rule when making adjustments to the product properties.
          example: 0
        enabled:
          type: boolean
          description: |
            Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
          example: true
        stop:
          type: boolean
          description: |
            Flag for determining whether other rules should not be applied after this rule has been applied.
        purchasing_disabled:
          type: boolean
          description: |
            Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Message displayed on the storefront when a rule disables the purchasing of a product.
          example: This product is not available at this time.
        purchasing_hidden:
          type: boolean
          description: |
            Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
        image_url:
          type: string
          description: |
            The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
        price_adjuster:
          $ref: '#/components/schemas/adjuster_Full'
        weight_adjuster:
          $ref: '#/components/schemas/adjuster_Full'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/complexRuleConditionBase'
      description: Common ComplexRule properties.
      x-internal: false
    productCustomField_Base:
      title: productCustomField_Base
      required:
        - name
        - value
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: |-
            The unique numeric ID of the custom field; increments sequentially.
            Read-Only
          example: 6
        name:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: ISBN
          x-required:
            - post
        value:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: '1234567890123'
          x-required:
            - post
      description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
      x-internal: false
    productCustomField_Post:
      title: productCustomField_Post
      description: The model for a POST to create a custom field on a product.
      allOf:
        - title: Custom Field
          required:
            - name
            - value
          type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: |-
                The unique numeric ID of the custom field; increments sequentially.
                Read-Only
              example: 6
            name:
              maxLength: 250
              minLength: 1
              type: string
              description: |
                The name of the field, shown on the storefront, orders, etc. Required for /POST
              example: ISBN
              x-required:
                - post
            value:
              maxLength: 250
              minLength: 1
              type: string
              description: |
                The name of the field, shown on the storefront, orders, etc. Required for /POST
              example: '1234567890123'
              x-required:
                - post
          description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
      x-internal: false
    productCustomField_Put:
      title: productCustomField_Put
      required:
        - name
        - value
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: |-
            The unique numeric ID of the custom field; increments sequentially. Required to update existing custom field in /PUT request.
            Read-Only
          example: 6
        name:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: ISBN
          x-required:
            - post
        value:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            The name of the field, shown on the storefront, orders, etc. Required for /POST
          example: '1234567890123'
          x-required:
            - post
      description: The model for a PUT to update a custom field on a product.
      x-internal: false
    complexRuleConditionBase:
      title: complexRuleConditionBase
      required:
        - modifier_id
        - modifier_value_id
        - variant_id
      type: object
      properties:
        id:
          type: integer
          description: |
            The unique numeric ID of the rule condition; increments sequentially. Read-Only
          nullable: true
          example: 3
        rule_id:
          type: integer
          description: |-
            The unique numeric ID of the rule with which the condition is associated.
            Read-Only
          nullable: true
          example: 4
        modifier_id:
          type: integer
          description: |-
            The unique numeric ID of the modifier with which the rule condition is associated.
            Required in /POST.
          nullable: true
          example: 55
        modifier_value_id:
          type: integer
          description: |-
            The unique numeric ID of the modifier value with which the rule condition is associated.
            Required in /POST.
          nullable: true
          example: 256
        variant_id:
          type: integer
          description: |-
            The unique numeric ID of the variant with which the rule condition is associated.
            Required in /POST.
          nullable: true
          example: 1
        combination_id:
          type: integer
          description: |
            (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
      description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
      x-internal: false
    customUrl_Full:
      title: customUrl_Full
      type: object
      properties:
        url:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Product URL on the storefront.
          x-required:
            - post
            - put
          x-url: true
        is_customized:
          type: boolean
          description: |
            Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
          x-required:
            - post
            - put
      description: The custom URL for the product on the storefront.
      x-internal: false
    bulkPricingRule_Full:
      title: bulkPricingRule_Full
      type: object
      description: Common Bulk Pricing Rule properties
      x-internal: false
      properties:
        quantity_min:
          minimum: 0
          type: integer
          description: |
            The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero. For `fixed` rules, the minimum quantity canʼt be less than two.
            Required in /POST.
          example: 10
          x-required:
            - post
        quantity_max:
          minimum: 0
          type: integer
          description: |-
            The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.
            Required in /POST.
          example: 50
          x-required:
            - post
        type:
          type: string
          description: |-
            The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.
            Required in /POST.
          example: price
          enum:
            - price
            - percent
            - fixed
          x-required:
            - post
        amount:
          oneOf:
            - type: number
              example: 10
            - type: string
              example: '.10'
          description: |-
            You can express the adjustment type as either a fixed dollar amount or a percentage. Send a number; the response will return a number for `price` and `fixed` adjustments.
            Divide the adjustment percentage by 100 and send the result in string format. For example, represent 10% as “.10”. The response will return a float value for both `price` and `percentage` adjustments. 
            Required in /POST.
      required:
        - quantity_min
        - quantity_max
        - type
        - amount
    bulkPricingRuleFull_Response:
      title: Bulk Pricing Rule
      type: object
      x-internal: false
      properties:
        id:
          type: integer
          description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
          readOnly: true
        quantity_min:
          minimum: 0
          type: integer
          description: |
            The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero. For `fixed` rules, the minimum quantity canʼt be less than two.
          example: 10
        quantity_max:
          minimum: 0
          type: integer
          description: |-
            The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.
          example: 50
        type:
          type: string
          description: |-
            The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.
          example: price
          enum:
            - price
            - percent
            - fixed
        amount:
          type: number
          description: |-
            The adjustment amount. Depending on the rule `type`, may represent a fixed dollar amount or a percentage.
          example: 10
      x-stoplight:
        id: 386de544af45e
    productOptionConfig_Full:
      title: productOptionConfig_Full
      type: object
      properties:
        default_value:
          type: string
          description: |
            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
        checked_by_default:
          type: boolean
          description: |
            (checkbox) Flag for setting the checkbox to be checked by default.
        checkbox_label:
          type: string
          description: |
            (checkbox) Label displayed for the checkbox option.
        date_limited:
          type: boolean
          description: |
            (date) Flag to limit the dates allowed to be entered on a date option.
        date_limit_mode:
          type: string
          description: |
            (date) The type of limit that is allowed to be entered on a date option.
          example: range
          enum:
            - earliest
            - range
            - latest
        date_earliest_value:
          type: string
          description: |
            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        date_latest_value:
          type: string
          description: |
            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        file_types_mode:
          type: string
          description: |
            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
          example: specific
          enum:
            - specific
            - all
        file_types_supported:
          type: array
          description: |
            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
              `other` - Allows file types defined in the `file_types_other` array.
          items:
            type: string
            example: 'images, documents, other'
        file_types_other:
          type: array
          description: |
            (file) A list of other file types allowed with the file upload option.
          items:
            type: string
            example: pdf
        file_max_size:
          type: integer
          description: |
            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
          example: 5
        text_characters_limited:
          type: boolean
          description: |
            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
        text_min_length:
          type: integer
          description: |
            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
          example: 1
        text_max_length:
          type: integer
          description: |
            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
          example: 55
        text_lines_limited:
          type: boolean
          description: |
            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
          example: true
        text_max_lines:
          type: integer
          description: |
            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
          example: 4
        number_limited:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the value of a number option.
          example: true
        number_limit_mode:
          type: string
          description: |
            (numbers_only_text) The type of limit on values entered for a number option.
          example: lowest
          enum:
            - lowest
            - highest
            - range
        number_lowest_value:
          type: number
          description: |
            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
          example: 100
        number_highest_value:
          type: number
          description: |
            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
        number_integers_only:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
          example: false
        product_list_adjusts_inventory:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
        product_list_adjusts_pricing:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
        product_list_shipping_calc:
          type: string
          description: |
            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
          example: weight
          enum:
            - none
            - weight
            - package
      description: The values for option config can vary based on the Modifier created.
      x-internal: false
    adjuster_Full:
      title: adjuster_Full
      type: object
      properties:
        adjuster:
          type: string
          description: |
            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
          nullable: true
          enum:
            - relative
            - percentage
        adjuster_value:
          type: number
          description: |
            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
          example: 5
      description: Adjuster for Complex Rules.
      x-internal: false
    resp_variantBatchError:
      title: resp_variantBatchError
      type: object
      properties:
        batch_errors:
          type: array
          items:
            title: Error Response
            type: object
            allOf:
              - $ref: '#/components/schemas/error_Base'
              - type: object
                properties:
                  errors:
                    title: Detailed Errors
                    type: object
                    properties: {}
                    additionalProperties: true
      description: |
        Errors during batch usage for the BigCommerce API.
      x-internal: false
    metaCollection_open:
      title: Response meta
      type: object
      properties: {}
      additionalProperties: true
      description: Response metadata.
    metaCollection_Full:
      title: metaCollection_Full
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    pagination_Full:
      title: pagination_Full
      type: object
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
          description: |
            Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
      x-internal: false
    metaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
    errorResponse_Full:
      title: errorResponse_Full
      allOf:
        - $ref: '#/components/schemas/error_Base'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/detailedErrors'
      x-internal: false
    error_Base:
      title: error_Base
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    errorMultiStatus:
      title: errorMultiStatus
      type: object
      properties:
        status: 
          type: integer
          minLength: 3
          maxLength: 3
          description: 'The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status) of the failure or partial success.'
        title: 
          type: string
          description: A summary of the failure or partial success.
        type: 
          type: string
          description: A BigCommerce-defined error signifier.
        errors: 
          $ref: '#/components/schemas/detailedErrors'
    errorNotFound:
      title: errorNotFound
      type: object
      properties:
        status:
          type: integer
          description: |
            404 HTTP status code.
        title:
          type: string
          description: The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: Error payload for the BigCommerce API.
      x-internal: false
    giftCertificate_Full:
      title: giftCertificate_Full
      type: object
      properties:
        code:
          type: string
          description: |
            The gift-certificate code.
          example: MB345
        original_balance:
          type: number
          description: |
            The balance on a gift certificate when it was purchased.
          format: float
          example: 100
        starting_balance:
          type: number
          description: |
            The balance on a gift certificate at the time of this purchase.
          format: float
          example: 100
        remaining_balance:
          type: number
          description: |
            The remaining balance on a gift certificate.
          format: float
          example: 35.42
        status:
          type: string
          description: |
            The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.
          enum:
            - active
            - pending
            - disabled
            - expired
      description: A gift-certificate model.
      x-internal: false
    errorNoContent:
      title: errorNoContent
      type: object
      properties:
        status:
          type: integer
          description: |
            204 HTTP status code.
        title:
          type: string
          description: The error title describing the situation.
        type:
          type: string
        instance:
          type: string
      description: No-content response for the BigCommerce API.
      x-internal: false
    detailedErrors:
      title: detailedErrors
      description: Each key-value pair describes a failure or partial success case.
      type: object
      properties: {}
      additionalProperties: true
      x-internal: false
    product_Full:
      title: product_Full
      allOf:
        - type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: ID of the product. Read-Only.
              readOnly: true
        - $ref: '#/components/schemas/product_Base'
        - type: object
          properties:
            date_created:
              type: string
              description: |
                The date on which the product was created.
              format: date-time
              example: '2018-08-15T14:49:05+00:00'
            date_modified:
              type: string
              description: |
                The date on which the product was modified.
              format: date-time
              example: '2018-08-24T14:41:00+00:00'
            base_variant_id:
              type: integer
              description: The unique identifier of the base variant associated with a simple product. This value is `null` for complex products.
            calculated_price:
              type: number
              description: 'The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.'
              format: float
            options:
              type: array
              items:
                $ref: '#/components/schemas/productOption_Base'
            modifiers:
              type: array
              items:
                $ref: '#/components/schemas/productModifier_Full'
            map_price:
              type: number
              description: Minimum Advertised Price.
            option_set_id:
              type: integer
              description: Indicates that the product is in an Option Set (legacy V2 concept).
            option_set_display:
              type: string
              description: Legacy template setting which controls if the option set shows up to the side of or below the product image and description.
            variants:
              type: array
              items:
                $ref: '#/components/schemas/productVariant_Full'
      x-internal: false
    productImage_Full:
      title: productImage_Full
      description: Common ProductImage properties.
      allOf:
        - $ref: '#/components/schemas/productImage_Base'
        - title: productImage
          type: object
          properties:
            id:
              type: integer
              description: |
                The unique numeric ID of the image; increments sequentially.
            product_id:
              type: integer
              description: |
                The unique numeric identifier for the product with which the image is associated.
            url_zoom:
              type: string
              description: |
                The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
            url_standard:
              type: string
              description: |
                The standard URL for this image. By default, this is used for product-page images.
            url_thumbnail:
              type: string
              description: |
                The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
            url_tiny:
              type: string
              description: |
                The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
            date_modified:
              type: string
              description: |
                The date on which the product image was modified.
              format: date-time
          description: Common ProductImage properties.
      x-internal: false
    product_Put_Collection:
      title: product_Put_Collection
      description: The model for batch updating products.
      x-internal: false
      allOf:
        - items:
            $ref: '#/components/schemas/product_Base'
      x-examples:
        example-1:
          - name: Smith Journal 13
            type: physical
            sku: SM-13
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 0
            width: 0
            depth: 0
            height: 0
            price: 0
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: string
            categories:
              - 0
            brand_id: 0
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            fixed_cost_shipping_price: 0
            is_free_shipping: true
            is_visible: true
            is_featured: true
            related_products:
              - 0
            warranty: string
            bin_picking_number: string
            layout_file: string
            upc: string
            search_keywords: string
            availability: available
            availability_description: string
            gift_wrapping_options_type: list
            gift_wrapping_options_list:
              - 0
            sort_order: -2147483648
            condition: New
            is_condition_shown: true
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: string
            meta_keywords:
              - string
            meta_description: string
            view_count: 0
            preorder_release_date: '2019-08-24T14:15:22Z'
            preorder_message: string
            is_preorder_only: true
            is_price_hidden: true
            price_hidden_label: string
            custom_url:
              url: string
              is_customized: true
            open_graph_type: product
            open_graph_title: string
            open_graph_description: string
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            brand_name or brand_id: Common Good
            gtin: string
            mpn: string
            reviews_rating_sum: 3.2
            reviews_count: 4
            total_sold: 80
            custom_fields:
              - id: 6
                name: ISBN
                value: '1234567890123'
            bulk_pricing_rules:
              - id: 0
                quantity_min: 10
                quantity_max: 50
                type: price
                amount: 10
            images:
              - image_file: string
                is_thumbnail: true
                sort_order: -2147483648
                description: string
                image_url: string
                id: 0
                product_id: 0
                url_zoom: string
                url_standard: string
                url_thumbnail: string
                url_tiny: string
                date_modified: '2019-08-24T14:15:22Z'
            videos:
              - title: Writing Great Documentation
                description: A video about documenation
                sort_order: 1
                type: youtube
                video_id: z3fRu9pkuXE
                id: 0
                product_id: 0
                length: string
      type: array
    config_Full:
      title: config_Full
      type: object
      properties:
        default_value:
          type: string
          description: |
            (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
        checked_by_default:
          type: boolean
          description: |
            (checkbox) Flag for setting the checkbox to be checked by default.
        checkbox_label:
          type: string
          description: |
            (checkbox) Label displayed for the checkbox option.
        date_limited:
          type: boolean
          description: |
            (date) Flag to limit the dates allowed to be entered on a date option.
        date_limit_mode:
          type: string
          description: |
            (date) The type of limit that is allowed to be entered on a date option.
          example: range
          enum:
            - earliest
            - range
            - latest
        date_earliest_value:
          type: string
          description: |
            (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        date_latest_value:
          type: string
          description: |
            (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
          format: date
        file_types_mode:
          type: string
          description: |
            (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
          example: specific
          enum:
            - specific
            - all
        file_types_supported:
          type: array
          description: |
            (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
              `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
              `other` - Allows file types defined in the `file_types_other` array.        
          items:
            type: string
            example: 'images, documents, other'
        file_types_other:
          type: array
          description: |
            (file) A list of other file types allowed with the file upload option.
          items:
            type: string
            example: pdf
        file_max_size:
          type: integer
          description: |
            (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
          example: 5
        text_characters_limited:
          type: boolean
          description: |
            (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
        text_min_length:
          type: integer
          description: |
            (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
          example: 1
        text_max_length:
          type: integer
          description: |
            (text, multi_line_text) The maximum length allowed for a text or multi line text option.
          example: 55
        text_lines_limited:
          type: boolean
          description: |
            (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
          example: true
        text_max_lines:
          type: integer
          description: |
            (multi_line_text) The maximum number of lines allowed on a multi-line text input.
          example: 4
        number_limited:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the value of a number option.
          example: true
        number_limit_mode:
          type: string
          description: |
            (numbers_only_text) The type of limit on values entered for a number option.
          example: lowest
          enum:
            - lowest
            - highest
            - range
        number_lowest_value:
          type: number
          description: |
            (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
          example: 100
        number_highest_value:
          type: number
          description: |
            (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
        number_integers_only:
          type: boolean
          description: |
            (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
          example: false
        product_list_adjusts_inventory:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
        product_list_adjusts_pricing:
          type: boolean
          description: |
            (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
        product_list_shipping_calc:
          type: string
          description: |
            (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
          example: weight
          enum:
            - none
            - weight
            - package
      description: The values for option config can vary based on the Modifier created.
      x-internal: false
    adjusters_Full:
      title: adjusters_Full
      type: object
      properties:
        price:
          $ref: '#/components/schemas/adjuster_Full'
        weight:
          $ref: '#/components/schemas/adjuster_Full'
        image_url:
          type: string
          description: |
            The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
          example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
        purchasing_disabled:
          type: object
          properties:
            status:
              type: boolean
              description: |
                Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
            message:
              type: string
              description: |
                The message displayed on the storefront when the purchasing disabled status is `true`.
      x-internal: false
    variant_Base:
      title: variant_Base
      type: object
      properties:
        cost_price:
          minimum: 0
          type: number
          description: The cost price of the variant. Not affected by Price List prices.
          format: double
          nullable: true
        price:
          minimum: 0
          type: number
          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
          format: double
          nullable: true
        sale_price:
          minimum: 0
          type: number
          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
          format: double
          nullable: true
        retail_price:
          minimum: 0
          type: number
          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
          format: double
          nullable: true
        weight:
          minimum: 0
          type: number
          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
          format: double
          nullable: true
        width:
          minimum: 0
          type: number
          description: |
            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
          format: double
          nullable: true
        height:
          minimum: 0
          type: number
          description: |
            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
          format: double
          nullable: true
        depth:
          minimum: 0
          type: number
          description: |
            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
          format: double
          nullable: true
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: double
          nullable: true
        purchasing_disabled:
          type: boolean
          description: 'If `true`, this variant will not be purchasable on the storefront.'
        purchasing_disabled_message:
          maxLength: 255
          minLength: 0
          type: string
          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
        upc:
          type: string
          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
          nullable: true
        inventory_level:
          type: integer
          description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
          nullable: true
        inventory_warning_level:
          type: integer
          description: 'When the variant hits this inventory level, it is considered low stock.'
          nullable: true
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Identifies where in a warehouse the variant is located.
          nullable: true
      description: |-
        Variant properties used on:
        * `/catalog/products/variants`
        * `/catalog/variants`
      x-internal: false
    product_Base:
      title: product_Base
      type: object
      description: |-
        Shared `Product` properties used in:
        * `POST`
        * `PUT`
        * `GET`
      x-internal: false
      x-examples:
        example-1:
          id: 0
          name: Smith Journal 13
          type: physical
          sku: SM-13
          description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
          weight: 0
          width: 0
          depth: 0
          height: 0
          price: 0
          cost_price: 0
          retail_price: 0
          sale_price: 0
          map_price: 0
          tax_class_id: 0
          product_tax_code: string
          categories:
            - 0
          channels:
            - 1
          brand_id: 0
          inventory_level: 0
          inventory_warning_level: 0
          inventory_tracking: none
          fixed_cost_shipping_price: 0
          is_free_shipping: true
          is_visible: true
          is_featured: true
          related_products:
            - 0
          warranty: string
          bin_picking_number: string
          layout_file: string
          upc: string
          search_keywords: string
          availability_description: string
          availability: available
          gift_wrapping_options_type: any
          gift_wrapping_options_list:
            - 0
          sort_order: -2147483648
          condition: New
          is_condition_shown: true
          order_quantity_minimum: 0
          order_quantity_maximum: 0
          page_title: string
          meta_keywords:
            - string
          meta_description: string
          view_count: 0
          preorder_release_date: '2019-08-24T14:15:22Z'
          preorder_message: string
          is_preorder_only: true
          is_price_hidden: true
          price_hidden_label: string
          custom_url:
            url: string
            is_customized: true
          open_graph_type: product
          open_graph_title: string
          open_graph_description: string
          open_graph_use_meta_description: true
          open_graph_use_product_name: true
          open_graph_use_image: true
          brand_name or brand_id: Common Good
          gtin: string
          mpn: string
          reviews_rating_sum: 3.2
          reviews_count: 4
          total_sold: 80
          custom_fields:
            - id: 6
              name: ISBN
              value: '1234567890123'
          bulk_pricing_rules:
            - id: 0
              quantity_min: 10
              quantity_max: 50
              type: price
              amount: 10
          images:
            - image_file: string
              is_thumbnail: true
              sort_order: -2147483648
              description: string
              image_url: string
              id: 0
              product_id: 0
              url_zoom: string
              url_standard: string
              url_thumbnail: string
              url_tiny: string
              date_modified: '2019-08-24T14:15:22Z'
          videos:
            - title: Writing Great Documentation
              description: A video about documenation
              sort_order: 1
              type: youtube
              video_id: z3fRu9pkuXE
              id: 0
              product_id: 0
              length: string
      properties:
        name:
          maxLength: 250
          minLength: 1
          type: string
          description: |
            A unique product name.
          example: Smith Journal 13
          x-required:
            - post
        type:
          type: string
          description: |
            The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.
          example: physical
          enum:
            - physical
            - digital
          x-required:
            - post
        sku:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            A unique user-defined product code/stock keeping unit (SKU).
          example: SM-13
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
        weight:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store
          format: float
        width:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Width of the product, which can be used when calculating shipping costs.
          format: float
        depth:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Depth of the product, which can be used when calculating shipping costs.
          format: float
        height:
          maximum: 9999999999
          minimum: 0
          type: number
          description: |
            Height of the product, which can be used when calculating shipping costs.
          format: float
        price:
          minimum: 0
          type: number
          description: |
            The price of the product. The price should include or exclude tax, based on the store settings.
          format: float
        cost_price:
          minimum: 0
          type: number
          description: |
            The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.
          format: float
        retail_price:
          minimum: 0
          type: number
          description: |
            The retail cost of the product. If entered, the retail cost price will be shown on the product page.
          format: float
        sale_price:
          minimum: 0
          type: number
          description: |
            If entered, the sale price will be used instead of value in the price field when calculating the product's cost.
          format: float
        map_price:
          type: number
          description: Minimum Advertised Price
        tax_class_id:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)
        product_tax_code:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.
        categories:
          type: array
          description: |
            An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.
          x-required:
            - post
          items:
            type: integer
        channels:
          type: array
          description: 'Optional. You can supply a single ID, multiple IDs, or leave the field empty.'
          items:
            type: number
            example: 1
        brand_id:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            A product can be added to an existing brand during a product /PUT or /POST.
        inventory_level:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: |
            Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.
        inventory_warning_level:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: |
            Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.
        inventory_tracking:
          type: string
          description: |
            The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.
          enum:
            - none
            - product
            - variant
        fixed_cost_shipping_price:
          minimum: 0
          type: number
          description: |
            A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
          format: float
        is_free_shipping:
          type: boolean
          description: |
            Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.
        is_featured:
          type: boolean
          description: |
            Flag to determine whether the product should be included in the `featured products` panel when viewing the store.
        related_products:
          type: array
          description: |
            An array of IDs for the related products.
          items:
            type: integer
        warranty:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Warranty information displayed on the product page. Can include HTML formatting.
        bin_picking_number:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            The BIN picking number for the product.
        layout_file:
          maxLength: 500
          minLength: 0
          type: string
          description: |
            The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied. For stores with a Stencil theme applied, see [Custom Template Associations](https://developer.bigcommerce.com/api-reference/store-management/custom-template-associations).
        upc:
          type: string
          maxLength: 32
          minLength: 0
          description: |
            The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.
        search_keywords:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the product when searching the store.
        availability_description:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'
        availability:
          type: string
          description: |
            Availability of the product. (Corresponds to the product's [Purchasability](https://support.bigcommerce.com/s/article/Adding-Products-v3?language=en_US#sections) section in the control panel.) Supported values: `available` - the product is available for purchase; `disabled` - the product is listed on the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.
          enum:
            - available
            - disabled
            - preorder
        gift_wrapping_options_type:
          type: string
          description: |
            Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.
          enum:
            - any
            - none
            - list
        gift_wrapping_options_list:
          type: array
          description: |
            A list of gift-wrapping option IDs.
          items:
            type: integer
        sort_order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          description: |
            Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.
        condition:
          type: string
          description: |
            The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.
          enum:
            - New
            - Used
            - Refurbished
        is_condition_shown:
          type: boolean
          description: |
            Flag used to determine whether the product condition is shown to the customer on the product page.
        order_quantity_minimum:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            The minimum quantity an order must contain, to be eligible to purchase this product.
        order_quantity_maximum:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            The maximum quantity an order can contain when purchasing the product.
        page_title:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Custom title for the product page. If not defined, the product name will be used as the meta title.
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the product page. If not defined, the store's default keywords will be used.
          items:
            type: string
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Custom meta description for the product page. If not defined, the store's default meta description will be used.
        view_count:
          maximum: 1000000000
          minimum: 0
          type: integer
          description: |
            The number of times the product has been viewed.
        preorder_release_date:
          type: string
          description: |
            Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.
          format: date-time
          nullable: true
        preorder_message:
          maxLength: 255
          minLength: 0
          type: string
          description: |
            Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.
        is_preorder_only:
          type: boolean
          description: |
            If set to true then on the preorder release date the preorder status will automatically be removed.
            If set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the
            control panel or using the API. Using the API set `availability` to `available`.
        is_price_hidden:
          type: boolean
          description: |
            False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)
        price_hidden_label:
          maxLength: 200
          minLength: 0
          type: string
          description: |
            By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)
        custom_url:
          $ref: '#/components/schemas/customUrl_Full'
        open_graph_type:
          type: string
          description: |
            Type of product, defaults to `product`.
          enum:
            - product
            - album
            - book
            - drink
            - food
            - game
            - movie
            - song
            - tv_show
        open_graph_title:
          type: string
          description: |
            Title of the product, if not specified the product name will be used instead.
        open_graph_description:
          type: string
          description: |
            Description to use for the product, if not specified then the meta_description will be used instead.
        open_graph_use_meta_description:
          type: boolean
          description: |
            Flag to determine if product description or open graph description is used.
        open_graph_use_product_name:
          type: boolean
          description: |
            Flag to determine if product name or open graph name is used.
        open_graph_use_image:
          type: boolean
          description: |
            Flag to determine if product image or open graph image is used.
        brand_name or brand_id:
          type: string
          description: The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. "Common Good" and "Common good" are the same. Brand name does not return as part of a product response. Only the `brand_id`.
          example: Common Good
        gtin:
          type: string
          description: Global Trade Item Number
        mpn:
          type: string
          description: Manufacturer Part Number
        reviews_rating_sum:
          type: integer
          description: |
            The total (cumulative) rating for the product.
          example: 3
        reviews_count:
          type: integer
          description: |
            The number of times the product has been rated.
          example: 4
        total_sold:
          type: integer
          description: |
            The total quantity of this product sold.
          example: 80
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/productCustomField_Put'
        bulk_pricing_rules:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  id:
                    type: integer
                    description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
                    readOnly: true
                required:
                  - id
              - $ref: '#/components/schemas/bulkPricingRule_Full'
        images:
          type: array
          items:
            $ref: '#/components/schemas/productImage_Full'
        videos:
          type: array
          items:
            $ref: '#/components/schemas/productVideo_Full'
      required:
        - name
        - type
        - weight
        - price
    metafield_Full:
      title: metafield_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Unique ID of the *Metafield*. Read-Only.
              readOnly: true
              example: 6
        - $ref: '#/components/schemas/metafield_Base'
        - type: object
          properties:
            resource_type:
              type: string
              description: |
                The type of resource with which the metafield is associated.
              example: product
              enum:
                - category
                - brand
                - product
                - variant
              x-required:
                - post
            resource_id:
              maximum: 10000000000
              minimum: 0
              type: integer
              description: |
                The ID of the resource with which the metafield is associated.
              example: 111
              x-required:
                - post
            date_created:
              type: string
              description: |
                Date and time of the metafield's creation. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
            date_modified:
              type: string
              description: |
                Date and time when the metafield was last updated. Read-Only.
              readOnly: true
              format: date-time
              example: '2018-05-07T20:14:17+00:00'
      x-internal: false
    productVariant_Put:
      title: productVariant_Put
      description: The model for a PUT to update variants on a product.
      allOf:
        - $ref: '#/components/schemas/productVariant_Base'
        - type: object
          properties:
            product_id:
              type: integer
              x-required:
                - post
            sku:
              maxLength: 255
              minLength: 1
              type: string
              x-required:
                - post
      x-internal: false
    errorResponse_409:
      title: errorResponse_409
      allOf:
        - type: object
          properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/detailedErrors'
      x-internal: false
    errorResponse_422:
      title: errorResponse_422
      allOf:
        - type: object
          properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/detailedErrors'
      x-internal: false
    productSortOrder:
      title: productSortOrder
      required:
        - product_id
        - sort_order
      type: object
      properties:
        product_id:
          minimum: 1
          type: integer
          description: The ID of the associated product.
          example: 99
        sort_order:
          minimum: 0
          type: integer
          example: 4
      description: The relative priority of the product among other products inside the category.
      x-internal: false
    betacategory_Full:
      type: object
      description: Common Category object properties.
      title: category_Full
      properties:
        id:
          type: integer
          description: |-
            Unique ID of the *Category*. Increments sequentially.
            Read-Only.
          readOnly: true
        parent_id:
          type: integer
          description: |-
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
            Required in a POST if creating a child category.
          example: 2
          required:
            - post
        name:
          type: string
          description: |-
            The name displayed for the category. Name is unique with respect to the category's siblings.
            Required in a POST.
          minLength: 1
          maxLength: 50
          example: Bath
          required:
            - post
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: We offer a wide variety of products perfect for relaxing
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
        sort_order:
          type: integer
          description: |
            Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
          minimum: -2147483648
          maximum: 2147483647
          example: 3
        page_title:
          type: string
          description: |
            Custom title for the category page. If not defined, the category name will be used as the meta title.
          minLength: 0
          maxLength: 255
          example: Bath
        search_keywords:
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the category when searching the store.
          minLength: 0
          maxLength: 255
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
          items:
            type: string
        meta_description:
          type: string
          description: |
            Custom meta description for the category page. If not defined, the store's default meta description will be used.
          minLength: 0
          maxLength: 65535
        layout_file:
          type: string
          description: |
            A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.
          minLength: 0
          maxLength: 500
          example: category.html
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
          x-url: true
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
        custom_url:
          $ref: '#/components/schemas/betacustomUrl_Full'
      required:
        - parent_id
        - name
      x-tags:
        - Models
    betametaCollection_Full:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      title: metaCollection_Full
      properties:
        pagination:
          $ref: '#/components/schemas/betapagination_Full'
      x-tags:
        - Models
    betapagination_Full:
      type: object
      description: 'Data about the response, including pagination and collection totals.'
      title: pagination_Full
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 36
        count:
          type: integer
          description: |
            Total number of items in the collection response.
          example: 36
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
          example: 50
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
          example: 1
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
          example: 1
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
              example: '?page=1&limit=50'
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      x-tags:
        - Models
    betametaEmpty_Full:
      type: object
      title: Response meta
      properties: {}
      additionalProperties: true
      description: Response metadata.
      x-tags:
        - Models
    betaerrorResponse_Full:
      allOf:
        - $ref: '#/components/schemas/betaerror_Base'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/betadetailedErrors'
      title: errorResponse_Full
      x-tags:
        - Models
    betaerror_Base:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: error_Base
      x-tags:
        - Models
    betaerrorNotFound:
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            404 HTTP status code.
          type: integer
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      title: errorNotFound
      x-tags:
        - Models
    betaerrorNoContent:
      description: No-content response for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            204 HTTP status code.
          type: integer
        title:
          description: The error title describing the situation.
          type: string
        type:
          type: string
        instance:
          type: string
      title: errorNoContent
      x-tags:
        - Models
    betadetailedErrors:
      type: object
      title: detailedErrors
      properties: {}
      additionalProperties: true
      x-tags:
        - Models
    betaerrorResponse_409:
      title: errorResponse_409
      allOf:
        - properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - properties:
            errors:
              $ref: '#/components/schemas/betadetailedErrors'
      type: object
      x-tags:
        - Models
    betaerrorResponse_422:
      title: errorResponse_422
      allOf:
        - properties:
            code:
              type: integer
            status:
              type: integer
            title:
              type: string
              description: The error title describing the particular error.
            type:
              type: string
        - properties:
            errors:
              $ref: '#/components/schemas/betadetailedErrors'
      type: object
      x-tags:
        - Models
    custom_url:
      type: object
      description: The custom URL for the category on the storefront.
      title: Custom Url Category
      properties:
        url:
          type: string
          description: |
            Category URL on the storefront.
          x-url: true
          minLength: 0
          maxLength: 255
          example: /shoes
          required:
            - post
            - put
        is_customized:
          type: boolean
          description: |
            Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
          required:
            - post
            - put
      x-tags:
        - Models
    betacustomUrl_Full:
      type: object
      description: The custom URL for the product on the storefront.
      title: customUrl_Full
      properties:
        url:
          type: string
          description: |
            Product URL on the storefront.
          x-url: true
          minLength: 0
          maxLength: 255
          example: /shoes
          required:
            - post
            - put
        is_customized:
          type: boolean
          description: |
            Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
          required:
            - post
            - put
      x-tags:
        - Models
    CreateCategories:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TreeIdCreateData'
          - $ref: '#/components/schemas/ParentIdCreateData'
          - $ref: '#/components/schemas/CategoryDataPOST'
      x-tags:
        - Models
      title: Create Categories
    UpdateCategories:
      x-tags:
        - Models
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TreeIdUpdateData'
          - $ref: '#/components/schemas/CategoryIdUpdateData'
          - $ref: '#/components/schemas/CategoryUuidData'
          - $ref: '#/components/schemas/ParentIdUpdateData'
          - $ref: '#/components/schemas/CategoryDataPUT'
    Category:
      x-tags:
        - Models
      title: Category
      allOf:
        - $ref: '#/components/schemas/id'
        - $ref: '#/components/schemas/parent_id'
        - $ref: '#/components/schemas/name'
        - $ref: '#/components/schemas/description'
        - $ref: '#/components/schemas/views'
        - $ref: '#/components/schemas/sort_order'
        - $ref: '#/components/schemas/page_title'
        - $ref: '#/components/schemas/meta_keywords'
        - $ref: '#/components/schemas/meta_description'
        - $ref: '#/components/schemas/layout_file'
        - $ref: '#/components/schemas/image_url'
        - $ref: '#/components/schemas/is_visible'
        - $ref: '#/components/schemas/search_keywords'
        - $ref: '#/components/schemas/default_product_sort'
        - type: object
          properties:
            url:
              $ref: '#/components/schemas/Url'
      x-examples: {}
    CategoryUuidData:
      type: object
      x-tags:
        - Models
      properties:
        category_uuid:
          type: string
          format: uuid
      title: category_uuid
    CategoryIdUpdateData:
      type: object
      properties:
        category_id:
          type: integer
      required:
        - category_id
      x-tags:
        - Models
    ParentIdCreateData:
      type: object
      properties:
        parent_id:
          type: integer
      required:
        - parent_id
      x-tags:
        - Models
    TreeIdCreateData:
      type: object
      properties:
        tree_id:
          type: integer
      required:
        - tree_id
      x-tags:
        - Models
    ParentIdUpdateData:
      type: object
      properties:
        parent_id:
          type: integer
      x-tags:
        - Models
    TreeIdUpdateData:
      type: object
      x-tags:
        - Models
      properties:
        tree_id:
          type: integer
      required:
        - tree_id
    CategoryData:
      allOf:
        - type: object
          properties:
            name:
              type: string
            description:
              type: string
            views:
              type: integer
            sort_order:
              type: integer
            page_title:
              type: string
            search_keywords:
              type: string
            meta_keywords:
              type: array
              items:
                type: string
            meta_description:
              type: string
            layout_file:
              type: string
            is_visible:
              type: boolean
            image_url:
              type: string
            url:
              $ref: '#/components/schemas/Url'
    CategoryDataPUT:
      allOf:
        - $ref: '#/components/schemas/CategoryData'
        - $ref: '#/components/schemas/default_product_sort'
    CategoryDataPOST:
      allOf:
        - $ref: '#/components/schemas/CategoryData'
        - $ref: '#/components/schemas/default_product_sort'
      required:
        - name
        - url
    Urls:
      type: array
      items:
        $ref: '#/components/schemas/Url'
      x-tags:
        - Models
    Url:
      type: object
      properties:
        path:
          type: string
        is_customized:
          type: boolean
      x-tags:
        - Models
    MetaPagination:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                previous:
                  type: string
                  example: '?limit=5&page=1'
                current:
                  type: string
                  example: '?limit=5&page=2'
                next:
                  type: string
                  example: '?limit=5&page=3'
      x-tags:
        - Models
    DetailedErrors:
      description: |
        Details of errors.
      type: object
      properties: {}
      additionalProperties: true
      x-tags:
        - Models
    ErrorRequest:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorBasic'
      x-tags:
        - Models
    ErrorBasic:
      type: object
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-tags:
        - Models
    ErrorAdditional:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/DetailedErrors'
      x-tags:
        - Models
    MetaError:
      allOf:
        - $ref: '#/components/schemas/ErrorBasic'
        - $ref: '#/components/schemas/ErrorAdditional'
      x-tags:
        - Models
    MetaData:
      type: object
      properties:
        total:
          type: integer
        success:
          type: integer
        failed:
          type: integer
      x-tags:
        - Models
    SuccessNoContentResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    PartialSuccessNoContentResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/MetaError'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    PartialSuccessResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    SuccessResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        errors:
          $ref: '#/components/schemas/MetaError'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    ErrorResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/MetaError'
        meta:
          $ref: '#/components/schemas/MetaData'
      x-tags:
        - Models
    Tree:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 255
        channels:
          type: array
          items:
            type: integer
      x-tags:
        - Models
    CategoryNode:
      type: object
      properties:
        id:
          type: integer
        parent_id:
          type: integer
        depth:
          type: integer
        path:
          type: array
          items:
            type: integer
        name:
          type: string
        is_visible:
          type: boolean
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryNode'
      x-tags:
        - Models
    beta4Category:
      type: object
      properties:
        id:
          type: integer
        parent_id:
          type: integer
        tree_id:
          type: integer
        name:
          type: string
        description:
          type: string
        views:
          type: integer
        sort_order:
          type: integer
        page_title:
          type: string
        search_keywords:
          type: string
        meta_keywords:
          type: array
          items:
            type: string
        meta_description:
          type: string
        layout_file:
          type: string
        is_visible:
          type: boolean
        default_product_sort:
          type: string
        image_url:
          type: string
        custom_url:
          $ref: '#/components/schemas/CustomUrl'
      x-tags:
        - Models
    beta4CategoryData:
      type: object
      properties:
        tree_id:
          type: integer
        parent_id:
          type: integer
        name:
          type: string
        description:
          type: string
        views:
          type: integer
        sort_order:
          type: integer
        page_title:
          type: string
        search_keywords:
          type: string
        meta_keywords:
          type: array
          items:
            type: string
        meta_description:
          type: string
        layout_file:
          type: string
        is_visible:
          type: boolean
        default_product_sort:
          type: string
        image_url:
          type: string
        custom_url:
          $ref: '#/components/schemas/CustomUrl'
      x-tags:
        - Models
    CustomUrl:
      type: object
      properties:
        url:
          type: string
        is_customized:
          type: boolean
      x-tags:
        - Models
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
      x-tags:
        - Models
    beta4DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      x-tags:
        - Models
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-tags:
        - Models
    beta4ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/beta4DetailedErrors'
      x-tags:
        - Models
    ProductsChannelCount:
      type: object
      description: The count of product in the channels.
      properties:
        channel_id:
          description: Channel ID.
          type: integer
          minimum: 1
        product_count:
          type: integer
          minimum: 0
      x-tags:
        - Models
    ProductsCategoriesCount:
      properties:
        product_id:
          type: integer
          minimum: 1
        channels:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesCount'
      x-tags:
        - Models
    CategoriesCount:
      properties:
        channel_id:
          type: integer
          minimum: 1
        category_count:
          type: integer
          minimum: 0
      x-tags:
        - Models
    ProductChannelAssignment:
      properties:
        product_id:
          type: integer
        channel_id:
          type: integer
      x-tags:
        - Models
    ProductCategoryAssignment:
      properties:
        product_id:
          type: integer
        category_id:
          type: integer
      x-tags:
        - Models
    beta5DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      x-tags:
        - Models
    beta5ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/beta5DetailedErrors'
      x-tags:
        - Models
    default_product_sort:
      title: default_product_sort
      type: object
      properties:
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
    name:
      title: name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: |-
            The name displayed for the category. Name is unique with respect to the category's siblings.
            Required in a POST.
          example: Bath
    description:
      title: description
      type: object
      properties:
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: <p>We offer a wide variety of products perfect for relaxing</p>
    views:
      title: views
      type: object
      properties:
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
    sort_order:
      title: sort_order
      type: object
      properties:
        sort_order:
          type: integer
          description: |
            Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
          example: 3
    page_title:
      title: page_title
      type: object
      properties:
        page_title:
          type: string
          description: |
            Custom title for the category page. If not defined, the category name will be used as the meta title.
          example: Bath
    search_keywords:
      title: search_keywords
      type: object
      properties:
        search_keywords:
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the category when searching the store.
    meta_keywords:
      title: meta_keywords
      type: object
      properties:
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
          items:
            type: string
    layout_file:
      title: layout_file
      type: object
      properties:
        layout_file:
          maxLength: 500
          minLength: 0
          type: string
          description: |
            A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.
          example: category.html
    is_visible:
      title: is_visible
      type: object
      properties:
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
    image_url:
      title: image_url
      type: object
      properties:
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
          x-url: true
    meta_description:
      title: meta_description
      type: object
      properties:
        meta_description:
          maxLength: 65535
          minLength: 0
          type: string
          description: |
            Custom meta description for the category page. If not defined, the store's default meta description will be used.
    id:
      title: id
      type: object
      properties:
        id:
          type: integer
          description: |-
            Unique ID of the *Category*. Increments sequentially.
            Read-Only.
          readOnly: true
    parent_id:
      title: parent_id
      type: object
      properties:
        parent_id:
          type: integer
          description: |-
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
            Required in a POST if creating a child category.
          example: 2
  responses:
    BrandCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Brand Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Brand
                  required:
                    - name
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique ID of the *Brand*. Read-Only.
                      readOnly: true
                    name:
                      maxLength: 255
                      minLength: 1
                      type: string
                      description: |-
                        The name of the brand. Must be unique.
                        Required in POST.
                      example: Common Good
                      x-required:
                        - post
                        - put
                    page_title:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        The title shown in the browser while viewing the brand.
                      example: Common Good
                    meta_keywords:
                      type: array
                      description: |
                        Comma-separated list of meta keywords to include in the HTML.
                      items:
                        type: string
                        example: 'modern, clean, contemporary'
                    meta_description:
                      maxLength: 65535
                      minLength: 0
                      type: string
                      description: |
                        A meta description to include.
                      example: Common Good is a modern brand.
                    search_keywords:
                      maxLength: 65535
                      minLength: 0
                      type: string
                      description: |
                        A comma-separated list of keywords that can be used to locate this brand.
                      example: 'kitchen, laundry, cart, storage'
                    image_url:
                      type: string
                      description: |
                        Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                      example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                      x-url: true
                    custom_url:
                      title: Custom Url Brand
                      type: object
                      properties:
                        url:
                          type: string
                          description: |
                            Brand URL on the storefront.
                          example: /shoes
                          x-url: true
                        is_customized:
                          type: boolean
                          description: |
                            Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                          example: true
                      description: The custom URL for the brand on the storefront.
                  description: Common Brand properties.
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
    BrandImageUpload:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  image_url:
                    type: string
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
          example:
            data:
              image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png'
            meta: {}
    BrandResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Brand Response
            type: object
            properties:
              data:
                title: Brand
                required:
                  - name
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique ID of the *Brand*. Read-Only.
                    readOnly: true
                  name:
                    maxLength: 255
                    minLength: 1
                    type: string
                    description: |-
                      The name of the brand. Must be unique.
                      Required in POST.
                    example: Common Good
                    x-required:
                      - post
                      - put
                  page_title:
                    maxLength: 255
                    minLength: 0
                    type: string
                    description: |
                      The title shown in the browser while viewing the brand.
                    example: Common Good
                  meta_keywords:
                    type: array
                    description: |
                      Comma-separated list of meta keywords to include in the HTML.              
                    items:
                      type: string
                      example: 'modern, clean, contemporary'
                  meta_description:
                    maxLength: 65535
                    minLength: 0
                    type: string
                    description: |
                      A meta description to include.
                    example: Common Good is a modern brand.
                  search_keywords:
                    maxLength: 65535
                    minLength: 0
                    type: string
                    description: |
                      A comma-separated list of keywords that can be used to locate this brand.
                    example: 'kitchen, laundry, cart, storage'
                  image_url:
                    type: string
                    description: |
                      Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
                    example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
                    x-url: true
                  custom_url:
                    title: Custom Url Brand
                    type: object
                    properties:
                      url:
                        type: string
                        description: |
                          Brand URL on the storefront.
                        example: /shoes
                        x-url: true
                      is_customized:
                        type: boolean
                        description: |
                          Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
                        example: true
                    description: The custom URL for the brand on the storefront.
                description: Common Brand properties.
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
            description: |-
              Brand Response returns for:
              * Create Brand
              * Get Brand by Id
              * Update Brand by Id
          example:
            data:
              id: 50
              name: Common Good
              meta_keywords:
                - 'modern, clean, contemporary'
              meta_description: Common Good is a modern brand
              image_url: ''
              search_keywords: 'kitchen, laundry, cart, storage'
              custom_url:
                url: /brands/Common-Good.html
                is_customized: false
            meta: {}
    BulkPricingRuleCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/bulkPricingRuleFull_Response'
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
    BulkPricingRuleResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/bulkPricingRuleFull_Response'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
          example:
            data:
              id: 83
              quantity_min: 1
              quantity_max: 3
              type: price
              amount: 1
            meta: {}
    CatalogSummaryResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Catalog Summary Response
            type: object
            properties:
              data:
                title: Catalog Summary
                type: object
                properties:
                  inventory_count:
                    type: integer
                    description: |
                      A count of all inventory items in the catalog.
                    example: 2000
                  inventory_value:
                    type: number
                    description: |
                      Total value of store's inventory.
                    format: double
                    example: 267000
                  primary_category_id:
                    type: integer
                    description: |
                      ID of the category containing the most products.
                    example: 23
                  primary_category_name:
                    type: string
                    description: |
                      Name of the category containing the most products.
                    example: Shop All
                  variant_count:
                    type: integer
                    description: Total number of variants
                    example: 46
                  highest_variant_price:
                    type: number
                    description: Highest priced variant
                    format: double
                    example: 249
                  average_variant_price:
                    type: number
                    description: Average price of all variants
                    format: double
                    example: 83.07978261
                  lowest_variant_price:
                    type: string
                    description: Lowest priced variant in the store
                    example: '7'
                  oldest_variant_date:
                    type: string
                    example: '2018-08-15T00:00:00+00:00'
                  newest_variant_date:
                    type: string
                    example: '2018-08-16T00:00:00+00:00'
                description: Catalog Summary object describes a lightweight summary of the catalog.
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
    CatalogVariantCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Variant Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  allOf:
                    - title: Variant Base
                      type: object
                      properties:
                        cost_price:
                          minimum: 0
                          type: number
                          description: The cost price of the variant. Not affected by Price List prices.
                          format: double
                          x-nullable: true
                        price:
                          minimum: 0
                          type: number
                          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                          format: double
                          x-nullable: true
                        sale_price:
                          minimum: 0
                          type: number
                          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                          format: double
                          x-nullable: true
                        retail_price:
                          minimum: 0
                          type: number
                          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                          format: double
                          x-nullable: true
                        weight:
                          minimum: 0
                          type: number
                          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                          format: double
                          x-nullable: true
                        width:
                          minimum: 0
                          type: number
                          description: |
                            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                          format: double
                          x-nullable: true
                        height:
                          minimum: 0
                          type: number
                          description: |
                            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                          format: double
                          x-nullable: true
                        depth:
                          minimum: 0
                          type: number
                          description: |
                            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                          format: double
                          x-nullable: true
                        is_free_shipping:
                          type: boolean
                          description: |
                            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                        fixed_cost_shipping_price:
                          minimum: 0
                          type: number
                          description: |
                            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                          format: double
                          x-nullable: true
                        purchasing_disabled:
                          type: boolean
                          description: 'If `true`, this variant will not be purchasable on the storefront.'
                        purchasing_disabled_message:
                          maxLength: 255
                          minLength: 0
                          type: string
                          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                        upc:
                          type: string
                          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                          x-nullable: true
                        inventory_level:
                          type: integer
                          description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
                          x-nullable: true
                        inventory_warning_level:
                          type: integer
                          description: 'When the variant hits this inventory level, it is considered low stock.'
                          x-nullable: true
                        bin_picking_number:
                          maxLength: 255
                          minLength: 0
                          type: string
                          description: Identifies where in a warehouse the variant is located.
                          x-nullable: true
                      description: Common Variant properties.
                    - type: object
                      properties:
                        id:
                          type: integer
                        product_id:
                          type: integer
                        sku:
                          type: string
                        sku_id:
                          type: integer
                          description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
                          x-nullable: true
                        option_values:
                          type: array
                          description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
                          items:
                            title: Option Value Variant
                            type: object
                            allOf:
                              - title: Option Value Product Base
                                type: object
                                properties:
                                  option_display_name:
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    description: |
                                      The name of the option.
                                    example: Color
                                    x-required:
                                      - post
                                  label:
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    description: |
                                      The label of the option value.
                                    example: Beige
                                    x-required:
                                      - post
                                description: Common Option Value Product properties.
                              - type: object
                                properties:
                                  id:
                                    type: integer
                                  option_id:
                                    type: integer
                        calculated_price:
                          type: number
                          description: |
                            The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
                          format: double
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
    CategoryCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Category Base
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
          example:
            data:
              - id: 19
                parent_id: 0
                name: Garden
                description: <p>This is the garden description</p>
                views: 0
                sort_order: 2
                page_title: page title
                meta_keywords:
                  - meta keyword
                meta_description: meta description
                layout_file: category.html
                image_url: ''
                is_visible: true
                search_keywords: search keywords
                default_product_sort: use_store_settings
                custom_url:
                  url: /garden/
                  is_customized: false
              - id: 20
                parent_id: 0
                name: Publications
                description: ''
                views: 0
                sort_order: 4
                page_title: ''
                meta_keywords:
                  - ''
                meta_description: ''
                layout_file: category_with_facets.html
                image_url: ''
                is_visible: true
                search_keywords: ''
                default_product_sort: use_store_settings
                custom_url:
                  url: /publications/
                  is_customized: false
              - id: 21
                parent_id: 0
                name: Kitchen
                description: ''
                views: 0
                sort_order: 3
                page_title: ''
                meta_keywords:
                  - ''
                meta_description: ''
                layout_file: category_with_facets.html
                image_url: ''
                is_visible: true
                search_keywords: ''
                default_product_sort: use_store_settings
                custom_url:
                  url: /kitchen/
                  is_customized: false
              - id: 22
                parent_id: 0
                name: Utility
                description: ''
                views: 0
                sort_order: 5
                page_title: ''
                meta_keywords:
                  - ''
                meta_description: ''
                layout_file: category_with_facets.html
                image_url: ''
                is_visible: true
                search_keywords: ''
                default_product_sort: use_store_settings
                custom_url:
                  url: /utility/
                  is_customized: false
              - id: 23
                parent_id: 0
                name: Shop All
                description: ''
                views: 0
                sort_order: 0
                page_title: ''
                meta_keywords:
                  - ''
                meta_description: ''
                layout_file: category_with_facets.html
                image_url: ''
                is_visible: true
                search_keywords: ''
                default_product_sort: use_store_settings
                custom_url:
                  url: /shop-all/
                  is_customized: false
              - id: 39
                parent_id: 19
                name: Bath
                description: ''
                views: 0
                sort_order: 0
                page_title: ''
                meta_keywords:
                  - ''
                meta_description: ''
                layout_file: category.html
                image_url: ''
                is_visible: true
                search_keywords: ''
                default_product_sort: use_store_settings
                custom_url:
                  url: /garden/bath/
                  is_customized: false
            meta:
              pagination:
                total: 6
                count: 6
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    CategoryResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Category Response
            type: object
            properties:
              data:
                $ref: '#/components/schemas/category_Full'
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
    ComplexRuleCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Complex Rule Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Complex Rule
                  type: object
                  properties:
                    id:
                      type: integer
                      description: |-
                        The unique numeric ID of the rule; increments sequentially.
                        Read-Only
                      example: 5
                    product_id:
                      type: integer
                      description: |
                        The unique numeric ID of the product with which the rule is associated; increments sequentially.
                      nullable: true
                      example: 67
                      x-required:
                        - post
                        - put
                    sort_order:
                      maximum: 2147483647
                      minimum: -2147483648
                      type: integer
                      description: |
                        The priority to give this rule when making adjustments to the product properties.
                      example: 0
                    enabled:
                      type: boolean
                      description: |
                        Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                      example: true
                    stop:
                      type: boolean
                      description: |
                        Flag for determining whether other rules should not be applied after this rule has been applied.
                    purchasing_disabled:
                      type: boolean
                      description: |
                        Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                    purchasing_disabled_message:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        Message displayed on the storefront when a rule disables the purchasing of a product.
                      example: This product is not available at this time.
                    purchasing_hidden:
                      type: boolean
                      description: |
                        Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                    image_url:
                      type: string
                      description: |
                        The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                      example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                    price_adjuster:
                      title: Adjuster
                      type: object
                      properties:
                        adjuster:
                          type: string
                          description: |
                            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          nullable: true
                          enum:
                            - relative
                            - percentage
                        adjuster_value:
                          type: number
                          description: |
                            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          example: 5
                      description: Adjuster for Complex Rules.
                    weight_adjuster:
                      title: Adjuster
                      type: object
                      properties:
                        adjuster:
                          type: string
                          description: |
                            The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          nullable: true
                          enum:
                            - relative
                            - percentage
                        adjuster_value:
                          type: number
                          description: |
                            The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                          example: 5
                      description: Adjuster for Complex Rules.
                    conditions:
                      type: array
                      items:
                        title: Complex Rule Condition
                        required:
                          - modifier_id
                          - modifier_value_id
                          - variant_id
                        type: object
                        properties:
                          id:
                            type: integer
                            description: |
                              The unique numeric ID of the rule condition; increments sequentially. Read-Only
                            nullable: true
                            example: 3
                          rule_id:
                            type: integer
                            description: |-
                              The unique numeric ID of the rule with which the condition is associated.
                              Read-Only
                            nullable: true
                            example: 4
                          modifier_id:
                            type: integer
                            description: |-
                              The unique numeric ID of the modifier with which the rule condition is associated.
                              Required in /POST.
                            nullable: true
                            example: 55
                          modifier_value_id:
                            type: integer
                            description: |-
                              The unique numeric ID of the modifier value with which the rule condition is associated.
                              Required in /POST.
                            nullable: true
                            example: 256
                          variant_id:
                            type: integer
                            description: |-
                              The unique numeric ID of the variant with which the rule condition is associated.
                              Required in /POST.
                            nullable: true
                            example: 1
                          combination_id:
                            type: integer
                            description: |
                              (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                        description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                  description: Common ComplexRule properties.
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
            description: Complex Rule Response
    ComplexRuleResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                title: Complex Rule
                type: object
                properties:
                  id:
                    type: integer
                    description: |-
                      The unique numeric ID of the rule; increments sequentially.
                      Read-Only
                    example: 5
                  product_id:
                    type: integer
                    description: |
                      The unique numeric ID of the product with which the rule is associated; increments sequentially.
                    example: 67
                    x-required:
                      - post
                      - put
                  sort_order:
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                    description: |
                      The priority to give this rule when making adjustments to the product properties.
                    example: 0
                  enabled:
                    type: boolean
                    description: |
                      Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
                    example: true
                  stop:
                    type: boolean
                    description: |
                      Flag for determining whether other rules should not be applied after this rule has been applied.
                  purchasing_disabled:
                    type: boolean
                    description: |
                      Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
                  purchasing_disabled_message:
                    maxLength: 255
                    minLength: 0
                    type: string
                    description: |
                      Message displayed on the storefront when a rule disables the purchasing of a product.
                    example: This product is not available at this time.
                  purchasing_hidden:
                    type: boolean
                    description: |
                      Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
                  image_url:
                    type: string
                    description: |
                      The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file.
                    example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
                  price_adjuster:
                    title: Adjuster
                    type: object
                    properties:
                      adjuster:
                        type: string
                        description: |
                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                        enum:
                          - relative
                          - percentage
                      adjuster_value:
                        type: number
                        description: |
                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                        example: 5
                    description: Adjuster for Complex Rules.
                  weight_adjuster:
                    title: Adjuster
                    type: object
                    properties:
                      adjuster:
                        type: string
                        description: |
                          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                        enum:
                          - relative
                          - percentage
                      adjuster_value:
                        type: number
                        description: |
                          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                        example: 5
                    description: Adjuster for Complex Rules.
                  conditions:
                    type: array
                    items:
                      title: Complex Rule Condition
                      required:
                        - modifier_id
                        - modifier_value_id
                        - variant_id
                      type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the rule condition; increments sequentially. Read-Only
                          example: 3
                        rule_id:
                          type: integer
                          description: |-
                            The unique numeric ID of the rule with which the condition is associated.
                            Read-Only
                          example: 4
                        modifier_id:
                          type: integer
                          description: |-
                            The unique numeric ID of the modifier with which the rule condition is associated.
                            Required in /POST.
                          example: 55
                        modifier_value_id:
                          type: integer
                          description: |-
                            The unique numeric ID of the modifier value with which the rule condition is associated.
                            Required in /POST.
                          example: 256
                        variant_id:
                          type: integer
                          description: |-
                            The unique numeric ID of the variant with which the rule condition is associated.
                            Required in /POST.
                          example: 1
                        combination_id:
                          type: integer
                          description: |
                            (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
                      description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`’s, or else reference a `modifier_value_id` and a `variant_id`.'
                description: Common ComplexRule properties.
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
    CustomFieldCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  title: Custom Field
                  required:
                    - name
                    - value
                  type: object
                  properties:
                    id:
                      minimum: 1
                      type: integer
                      description: |-
                        The unique numeric ID of the custom field; increments sequentially.
                        Read-Only
                      example: 6
                    name:
                      maxLength: 250
                      minLength: 1
                      type: string
                      description: |
                        The name of the field, shown on the storefront, orders, etc. Required for /POST
                      example: ISBN
                      x-required:
                        - post
                    value:
                      maxLength: 250
                      minLength: 1
                      type: string
                      description: |
                        The name of the field, shown on the storefront, orders, etc. Required for /POST
                      example: '1234567890123'
                      x-required:
                        - post
                  description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
          example:
            data:
              - name: Release year
                value: '1987'
                id: 1
            meta:
              pagination:
                total: 1
                count: 1
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  previous: '?page=1&limit=50'
                  current: '?page=1&limit=50'
                  next: '?page=1&limit=50'
    CustomFieldResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                title: Custom Field
                required:
                  - name
                  - value
                type: object
                properties:
                  id:
                    minimum: 1
                    type: integer
                    description: |-
                      The unique numeric ID of the custom field; increments sequentially.
                      Read-Only
                    example: 6
                  name:
                    maxLength: 250
                    minLength: 1
                    type: string
                    description: |
                      The name of the field, shown on the storefront, orders, etc. Required for /POST
                    example: ISBN
                    x-required:
                      - post
                  value:
                    maxLength: 250
                    minLength: 1
                    type: string
                    description: |
                      The name of the field, shown on the storefront, orders, etc. Required for /POST
                    example: '1234567890123'
                    x-required:
                      - post
                description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product’s page, such as a book’s ISBN or a DVD’s release date.'
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
          example:
            data:
              name: Release Year
              value: '1976'
              id: 2
            meta: {}
    Error404Response:
      description: The requested category was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
    Error422Response:
      description: |-
        Unprocessable entity.

        Please verify if all requested products are assigned to the category.

        Please verify if all required fields are present in the request body and are filled with values correctly.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
    General207Status:
      description: 'Multi-status. Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL or inventory data has failed.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Base'
    MetafieldCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Meta Field Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Metafield
                  required:
                    - key
                    - namespace
                    - permission_set
                    - value
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique ID of the *Metafield*. Read-Only.
                      readOnly: true
                      example: 6
                    permission_set:
                      type: string
                      description: |-
                        Determines the visibility and writeability of the field by other API consumers.

                        |Value|Description
                        |-|-|
                        |`app_only`|Private to the app that owns the field|
                        |`read`|Visible to other API consumers|
                        |`write`|Open for reading and writing by other API consumers|
                        |`read_and_sf_access`|Visible to other API consumers, including on storefront|
                        |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
                      enum:
                        - app_only
                        - read
                        - write
                        - read_and_sf_access
                        - write_and_sf_access
                      x-required:
                        - post
                    namespace:
                      maxLength: 64
                      minLength: 1
                      type: string
                      description: |
                        Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.
                      example: Warehouse Locations
                      x-required:
                        - post
                    key:
                      maxLength: 64
                      minLength: 1
                      type: string
                      description: |
                        The name of the field, for example: `location_id`, `color`. Required for POST.
                      example: Location
                      x-required:
                        - post
                    value:
                      maxLength: 65535
                      minLength: 1
                      type: string
                      description: |
                        The value of the field, for example: `1`, `blue`. Required for POST.
                      example: 4HG
                      x-required:
                        - post
                    description:
                      maxLength: 255
                      minLength: 0
                      type: string
                      description: |
                        Description for the metafields.
                      example: Location in the warehouse
                    resource_type:
                      type: string
                      description: |
                        The type of resource with which the metafield is associated.
                      example: product
                      enum:
                        - category
                        - brand
                        - product
                        - variant
                      x-required:
                        - post
                    resource_id:
                      maximum: 10000000000
                      minimum: 0
                      type: integer
                      description: |
                        The ID for the resource with which the metafield is associated.
                      example: 111
                      x-required:
                        - post
                    date_created:
                      type: string
                      description: |
                        Date and time of the metafield's creation. Read-Only.
                      readOnly: true
                      format: date-time
                      example: '2018-05-07T20:14:17+00:00'
                    date_modified:
                      type: string
                      description: |
                        Date and time when the metafield was last updated. Read-Only.
                      readOnly: true
                      format: date-time
                      example: '2018-05-07T20:14:17+00:00'
                  description: Common Metafield properties.
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
          example:
            data:
              - permission_set: app_only
                namespace: Warehouse Locations
                key: Location
                value: 4HG
                description: Location in the warehouse
                resource_type: brand
                resource_id: 111
                id: 6
                date_created: '1973-01-20T21:34:57.903Z'
                date_modified: '1990-12-30T00:29:23.515Z'
              - permission_set: read
                namespace: Warehouse Locations
                key: Location
                value: 4HG
                description: Location in the warehouse
                resource_type: brand
                resource_id: 111
                id: 6
                date_created: '1973-01-20T21:34:57.903Z'
                date_modified: '1990-12-30T00:29:23.515Z'
              - permission_set: app_only
                namespace: Warehouse Locations
                key: Location
                value: 4HG
                description: Location in the warehouse
                resource_type: brand
                resource_id: 111
                id: 6
                date_created: '1973-01-20T21:34:57.903Z'
                date_modified: '1990-12-30T00:29:23.515Z'
            meta:
              pagination:
                total: 3
                count: 3
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    MetafieldResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Metafield Response
            type: object
            properties:
              data:
                title: Metafield
                required:
                  - key
                  - namespace
                  - permission_set
                  - value
                type: object
                properties:
                  date_created:
                    type: string
                    description: |
                      Date and time of the metafield's creation. Read-Only.
                    readOnly: true
                    format: date-time
                    example: '2018-05-07T20:14:17+00:00'
                  date_modified:
                    type: string
                    description: |
                      Date and time when the metafield was last updated. Read-Only.
                    readOnly: true
                    format: date-time
                    example: '2018-05-07T20:14:17+00:00'
                  description:
                    maxLength: 255
                    minLength: 0
                    type: string
                    description: |
                      Description for the metafields.
                    example: Location in the warehouse
                  id:
                    type: integer
                    description: Unique ID of the *Metafield*. Read-Only.
                    readOnly: true
                    example: 6
                  key:
                    maxLength: 64
                    minLength: 1
                    type: string
                    description: |
                      The name of the field, for example: `location_id`, `color`. Required for POST.
                    example: Location
                    x-required:
                      - post
                  namespace:
                    maxLength: 64
                    minLength: 1
                    type: string
                    description: |
                      Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.
                    example: Warehouse Locations
                    x-required:
                      - post
                  permission_set:
                    type: string
                    description: |-
                      Determines the visibility and writeability of the field by other API consumers.

                      |Value|Description
                      |-|-|
                      |`app_only`|Private to the app that owns the field|
                      |`read`|Visible to other API consumers|
                      |`write`|Open for reading and writing by other API consumers|
                      |`read_and_sf_access`|Visible to other API consumers, including on storefront|
                      |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|
                    enum:
                      - app_only
                      - read
                      - write
                      - read_and_sf_access
                      - write_and_sf_access
                    x-required:
                      - post
                  resource_id:
                    maximum: 10000000000
                    minimum: 0
                    type: integer
                    description: |
                      The ID for the resource with which the metafield is associated.
                    example: 111
                    x-required:
                      - post
                  resource_type:
                    type: string
                    description: |
                      The type of resource with which the metafield is associated.
                    example: product
                    enum:
                      - category
                      - brand
                      - product
                      - variant
                    x-required:
                      - post
                  value:
                    maxLength: 65535
                    minLength: 1
                    type: string
                    description: |
                      The value of the field, for example: `1`, `blue`. Required for POST.
                    example: 4HG
                    x-required:
                      - post
                description: Common Metafield properties.
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
          example:
            data:
              date_created: '2021-08-06T19:15:35+00:00'
              date_modified: '2021-08-06T19:15:35+00:00'
              description: Where products are located
              id: 4
              key: location_id
              namespace: App Namespace
              permission_set: app_only
              resource_id: 137
              resource_type: product
              value: 'Shelf 3, Bin 5'
            meta: {}
    ModifierCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Modifier Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Modifer
                  type: object
                  description: Product Modifier
                  allOf:
                    - title: Modifier Base
                      required:
                        - required
                        - type
                      type: object
                      properties:
                        type:
                          type: string
                          description: |
                            BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                          enum:
                            - date
                            - checkbox
                            - file
                            - text
                            - multi_line_text
                            - numbers_only_text
                            - radio_buttons
                            - rectangles
                            - dropdown
                            - product_list
                            - product_list_with_images
                            - swatch
                          x-required:
                            - post
                        required:
                          type: boolean
                          description: |
                            Whether or not this modifer is required or not at checkout. Required in a /POST.
                          x-required:
                            - post
                        sort_order:
                          type: integer
                          description: The order the modifiers display on the product detail page.
                        config:
                          title: Option Config
                          type: object
                          properties:
                            default_value:
                              type: string
                              description: |
                                (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                            checked_by_default:
                              type: boolean
                              description: |
                                (checkbox) Flag for setting the checkbox to be checked by default.
                            checkbox_label:
                              type: string
                              description: |
                                (checkbox) Label displayed for the checkbox option.
                            date_limited:
                              type: boolean
                              description: |
                                (date) Flag to limit the dates allowed to be entered on a date option.
                            date_limit_mode:
                              type: string
                              description: |
                                (date) The type of limit that is allowed to be entered on a date option.
                              example: range
                              enum:
                                - earliest
                                - range
                                - latest
                            date_earliest_value:
                              type: string
                              description: |
                                (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                              format: date
                            date_latest_value:
                              type: string
                              description: |
                                (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                              format: date
                            file_types_mode:
                              type: string
                              description: |
                                (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                              example: specific
                              enum:
                                - specific
                                - all
                            file_types_supported:
                              type: array
                              description: |
                                (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                  `other` - Allows file types defined in the `file_types_other` array.                        
                              items:
                                type: string
                                example: 'images, documents, other'
                            file_types_other:
                              type: array
                              description: |
                                (file) A list of other file types allowed with the file upload option.
                              items:
                                type: string
                                example: pdf
                            file_max_size:
                              type: integer
                              description: |
                                (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                              example: 5
                            text_characters_limited:
                              type: boolean
                              description: |
                                (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                            text_min_length:
                              type: integer
                              description: |
                                (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                              example: 1
                            text_max_length:
                              type: integer
                              description: |
                                (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                              example: 55
                            text_lines_limited:
                              type: boolean
                              description: |
                                (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                              example: true
                            text_max_lines:
                              type: integer
                              description: |
                                (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                              example: 4
                            number_limited:
                              type: boolean
                              description: |
                                (numbers_only_text) Flag to limit the value of a number option.
                              example: true
                            number_limit_mode:
                              type: string
                              description: |
                                (numbers_only_text) The type of limit on values entered for a number option.
                              example: lowest
                              enum:
                                - lowest
                                - highest
                                - range
                            number_lowest_value:
                              type: number
                              description: |
                                (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                              example: 100
                            number_highest_value:
                              type: number
                              description: |
                                (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                            number_integers_only:
                              type: boolean
                              description: |
                                (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                              example: false
                            product_list_adjusts_inventory:
                              type: boolean
                              description: |
                                (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                            product_list_adjusts_pricing:
                              type: boolean
                              description: |
                                (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                            product_list_shipping_calc:
                              type: string
                              description: |
                                (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                              example: weight
                              enum:
                                - none
                                - weight
                                - package
                          description: The values for option config can vary based on the Modifier created.
                        option_values:
                          type: array
                          items:
                            title: Modifier Value
                            type: object
                            description: 'Part of Modifier Value Response '
                            allOf:
                              - title: Modifier Value Base
                                type: object
                                allOf:
                                  - title: Option Value Base
                                    required:
                                      - label
                                      - sort_order
                                    type: object
                                    properties:
                                      is_default:
                                        type: boolean
                                        description: |
                                          The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                        example: false
                                      label:
                                        type: string
                                        description: |
                                          The text display identifying the value on the storefront. Required in a /POST.
                                        example: Green
                                        x-required:
                                          - post
                                      sort_order:
                                        maximum: 2147483647
                                        minimum: -2147483648
                                        type: integer
                                        description: |
                                          The order in which the value will be displayed on the product page. Required in a /POST.
                                        example: 0
                                        x-required:
                                          - post
                                      value_data:
                                        type: object
                                        properties: {}
                                        description: |
                                          Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                    description: Common Option Value properties.
                                  - type: object
                                    properties:
                                      adjusters:
                                        type: object
                                        properties:
                                          price:
                                            title: Adjuster
                                            type: object
                                            properties:
                                              adjuster:
                                                type: string
                                                description: |
                                                  The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                enum:
                                                  - relative
                                                  - percentage
                                                x-nullable: true
                                              adjuster_value:
                                                type: number
                                                description: |
                                                  The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                example: 5
                                            description: Adjuster for Complex Rules.
                                          weight:
                                            title: Adjuster
                                            type: object
                                            properties:
                                              adjuster:
                                                type: string
                                                description: |
                                                  The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                enum:
                                                  - relative
                                                  - percentage
                                                x-nullable: true
                                              adjuster_value:
                                                type: number
                                                description: |
                                                  The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                                example: 5
                                            description: Adjuster for Complex Rules.
                                          image_url:
                                            type: string
                                            description: |
                                              The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                            example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                          purchasing_disabled:
                                            type: object
                                            properties:
                                              status:
                                                type: boolean
                                                description: |
                                                  Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                              message:
                                                type: string
                                                description: |
                                                  The message displayed on the storefront when the purchasing disabled status is `true`.
                              - type: object
                                properties:
                                  id:
                                    type: integer
                                    description: |
                                      The unique numeric ID of the value; increments sequentially.
                      description: Common Modifier properties.
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the modifier; increments sequentially.
                          example: 12
                        product_id:
                          type: integer
                          description: |
                            The unique numeric ID of the product to which the option belongs.
                          example: 77
                        name:
                          type: string
                          description: |
                            The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
                          example: Add-a-$5-Donation1535039590-191
                        display_name:
                          type: string
                          description: |
                            The name of the option shown on the storefront.
                          example: Donation
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
            description: Modifier Collection Response return for /GET All Modifiers.
          example:
            data:
              - id: 206
                product_id: 158
                name: Insurance
                display_name: Insurace
                type: checkbox
                required: true
                config:
                  checkbox_label: $5 for insurance
                  checked_by_default: false
                option_values:
                  - id: 183
                    option_id: 206
                    label: 'Yes'
                    sort_order: 0
                    value_data:
                      checked_value: true
                    is_default: false
                    adjusters:
                      price: {}
                      weight: {}
                      image_url: ''
                      purchasing_disabled:
                        status: false
                        message: ''
                  - id: 184
                    option_id: 206
                    label: 'No'
                    sort_order: 1
                    value_data:
                      checked_value: false
                    is_default: true
                    adjusters:
                      price: {}
                      weight: {}
                      image_url: ''
                      purchasing_disabled:
                        status: false
                        message: ''
            meta:
              pagination:
                total: 1
                count: 1
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    ModifierResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Modifier Response
            type: object
            properties:
              data:
                title: Modifer
                type: object
                description: Product Modifier
                allOf:
                  - title: Modifier Base
                    required:
                      - required
                      - type
                    type: object
                    properties:
                      type:
                        type: string
                        description: |
                          BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
                        enum:
                          - date
                          - checkbox
                          - file
                          - text
                          - multi_line_text
                          - numbers_only_text
                          - radio_buttons
                          - rectangles
                          - dropdown
                          - product_list
                          - product_list_with_images
                          - swatch
                        x-required:
                          - post
                      required:
                        type: boolean
                        description: |
                          Whether or not this modifer is required or not at checkout. Required in a /POST.
                        x-required:
                          - post
                      sort_order:
                        type: integer
                        description: The order the modifiers display on the product detail page.
                      config:
                        title: Option Config
                        type: object
                        properties:
                          default_value:
                            type: string
                            description: |
                              (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                          checked_by_default:
                            type: boolean
                            description: |
                              (checkbox) Flag for setting the checkbox to be checked by default.
                          checkbox_label:
                            type: string
                            description: |
                              (checkbox) Label displayed for the checkbox option.
                          date_limited:
                            type: boolean
                            description: |
                              (date) Flag to limit the dates allowed to be entered on a date option.
                          date_limit_mode:
                            type: string
                            description: |
                              (date) The type of limit that is allowed to be entered on a date option.
                            example: range
                            enum:
                              - earliest
                              - range
                              - latest
                          date_earliest_value:
                            type: string
                            description: |
                              (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                            format: date
                          date_latest_value:
                            type: string
                            description: |
                              (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                            format: date
                          file_types_mode:
                            type: string
                            description: |
                              (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                            example: specific
                            enum:
                              - specific
                              - all
                          file_types_supported:
                            type: array
                            description: |
                              (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                `other` - Allows file types defined in the `file_types_other` array.
                            items:
                              type: string
                              example: 'images, documents, other'
                          file_types_other:
                            type: array
                            description: |
                              (file) A list of other file types allowed with the file upload option.
                            items:
                              type: string
                              example: pdf
                          file_max_size:
                            type: integer
                            description: |
                              (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                            example: 5
                          text_characters_limited:
                            type: boolean
                            description: |
                              (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                          text_min_length:
                            type: integer
                            description: |
                              (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                            example: 1
                          text_max_length:
                            type: integer
                            description: |
                              (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                            example: 55
                          text_lines_limited:
                            type: boolean
                            description: |
                              (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                            example: true
                          text_max_lines:
                            type: integer
                            description: |
                              (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                            example: 4
                          number_limited:
                            type: boolean
                            description: |
                              (numbers_only_text) Flag to limit the value of a number option.
                            example: true
                          number_limit_mode:
                            type: string
                            description: |
                              (numbers_only_text) The type of limit on values entered for a number option.
                            example: lowest
                            enum:
                              - lowest
                              - highest
                              - range
                          number_lowest_value:
                            type: number
                            description: |
                              (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                            example: 100
                          number_highest_value:
                            type: number
                            description: |
                              (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                          number_integers_only:
                            type: boolean
                            description: |
                              (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                            example: false
                          product_list_adjusts_inventory:
                            type: boolean
                            description: |
                              (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                          product_list_adjusts_pricing:
                            type: boolean
                            description: |
                              (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                          product_list_shipping_calc:
                            type: string
                            description: |
                              (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                            example: weight
                            enum:
                              - none
                              - weight
                              - package
                        description: The values for option config can vary based on the Modifier created.
                      option_values:
                        type: array
                        items:
                          title: Modifier Value
                          type: object
                          description: 'Part of Modifier Value Response '
                          allOf:
                            - title: Modifier Value Base
                              type: object
                              allOf:
                                - title: Option Value Base
                                  required:
                                    - label
                                    - sort_order
                                  type: object
                                  properties:
                                    is_default:
                                      type: boolean
                                      description: |
                                        The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                      example: false
                                    label:
                                      type: string
                                      description: |
                                        The text display identifying the value on the storefront. Required in a /POST.
                                      example: Green
                                      x-required:
                                        - post
                                    sort_order:
                                      maximum: 2147483647
                                      minimum: -2147483648
                                      type: integer
                                      description: |
                                        The order in which the value will be displayed on the product page. Required in a /POST.
                                      example: 0
                                      x-required:
                                        - post
                                    value_data:
                                      type: object
                                      properties: {}
                                      description: |
                                        Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                  description: Common Option Value properties.
                                - type: object
                                  properties:
                                    adjusters:
                                      type: object
                                      properties:
                                        price:
                                          title: Adjuster
                                          type: object
                                          properties:
                                            adjuster:
                                              type: string
                                              description: |
                                                The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                              enum:
                                                - relative
                                                - percentage
                                              x-nullable: true
                                            adjuster_value:
                                              type: number
                                              description: |
                                                The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                              example: 5
                                          description: Adjuster for Complex Rules.
                                        weight:
                                          title: Adjuster
                                          type: object
                                          properties:
                                            adjuster:
                                              type: string
                                              description: |
                                                The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                              enum:
                                                - relative
                                                - percentage
                                              x-nullable: true
                                            adjuster_value:
                                              type: number
                                              description: |
                                                The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                              example: 5
                                          description: Adjuster for Complex Rules.
                                        image_url:
                                          type: string
                                          description: |
                                            The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                          example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                        purchasing_disabled:
                                          type: object
                                          properties:
                                            status:
                                              type: boolean
                                              description: |
                                                Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                            message:
                                              type: string
                                              description: |
                                                The message displayed on the storefront when the purchasing disabled status is `true`.
                            - type: object
                              properties:
                                id:
                                  type: integer
                                  description: |
                                    The unique numeric ID of the value; increments sequentially.
                    description: Common Modifier properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the modifier; increments sequentially.
                        example: 12
                      product_id:
                        type: integer
                        description: |
                          The unique numeric ID of the product to which the option belongs.
                        example: 77
                      name:
                        type: string
                        description: |
                          The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
                        example: Add-a-$5-Donation1535039590-191
                      display_name:
                        type: string
                        description: |
                          The name of the option shown on the storefront.
                        example: Donation
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
    ModifierValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Modifier Value Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Modifier Value
                  type: object
                  description: 'Part of Modifier Value Response '
                  allOf:
                    - title: Modifier Value Base
                      type: object
                      allOf:
                        - title: Option Value Base
                          required:
                            - label
                            - sort_order
                          type: object
                          properties:
                            is_default:
                              type: boolean
                              description: |
                                The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                              example: false
                            label:
                              type: string
                              description: |
                                The text display identifying the value on the storefront. Required in a /POST.
                              example: Green
                              x-required:
                                - post
                            sort_order:
                              maximum: 2147483647
                              minimum: -2147483648
                              type: integer
                              description: |
                                The order in which the value will be displayed on the product page. Required in a /POST.
                              example: 0
                              x-required:
                                - post
                            value_data:
                              type: object
                              properties: {}
                              description: |
                                Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                          description: Common Option Value properties.
                        - type: object
                          properties:
                            adjusters:
                              type: object
                              properties:
                                price:
                                  title: Adjuster
                                  type: object
                                  properties:
                                    adjuster:
                                      type: string
                                      description: |
                                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                      enum:
                                        - relative
                                        - percentage
                                      x-nullable: true
                                    adjuster_value:
                                      type: number
                                      description: |
                                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                      example: 5
                                  description: Adjuster for Complex Rules.
                                weight:
                                  title: Adjuster
                                  type: object
                                  properties:
                                    adjuster:
                                      type: string
                                      description: |
                                        The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                      enum:
                                        - relative
                                        - percentage
                                      x-nullable: true
                                    adjuster_value:
                                      type: number
                                      description: |
                                        The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                      example: 5
                                  description: Adjuster for Complex Rules.
                                image_url:
                                  type: string
                                  description: |
                                    The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                  example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                                purchasing_disabled:
                                  type: object
                                  properties:
                                    status:
                                      type: boolean
                                      description: |
                                        Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                    message:
                                      type: string
                                      description: |
                                        The message displayed on the storefront when the purchasing disabled status is `true`.
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the value; increments sequentially.
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
            description: Returns for GET All Modifier Values on a Product
          example:
            data:
              - id: 190
                option_id: 222
                label: 'Yes'
                sort_order: 0
                value_data:
                  checked_value: true
                is_default: false
                adjusters:
                  price:
                    adjuster: relative
                    adjuster_value: 5
                  weight: {}
                  image_url: ''
                  purchasing_disabled:
                    status: false
                    message: ''
              - id: 191
                option_id: 222
                label: 'No'
                sort_order: 1
                value_data:
                  checked_value: false
                is_default: true
                adjusters:
                  price: {}
                  weight: {}
                  image_url: ''
                  purchasing_disabled:
                    status: false
                    message: ''
            meta:
              pagination:
                total: 2
                count: 2
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    ModifierValueResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Modifier Value Response
            type: object
            properties:
              data:
                title: Modifier Value
                type: object
                description: 'Part of Modifier Value Response '
                allOf:
                  - title: Modifier Value Base
                    type: object
                    allOf:
                      - title: Option Value Base
                        required:
                          - label
                          - sort_order
                        type: object
                        properties:
                          is_default:
                            type: boolean
                            description: |
                              The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                            example: false
                          label:
                            type: string
                            description: |
                              The text display identifying the value on the storefront. Required in a /POST.
                            example: Green
                            x-required:
                              - post
                          sort_order:
                            maximum: 2147483647
                            minimum: -2147483648
                            type: integer
                            description: |
                              The order in which the value will be displayed on the product page. Required in a /POST.
                            example: 0
                            x-required:
                              - post
                          value_data:
                            type: object
                            properties: {}
                            description: |
                              Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                        description: Common Option Value properties.
                      - type: object
                        properties:
                          adjusters:
                            type: object
                            properties:
                              price:
                                title: Adjuster
                                type: object
                                properties:
                                  adjuster:
                                    type: string
                                    description: |
                                      The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    enum:
                                      - relative
                                      - percentage
                                    x-nullable: true
                                  adjuster_value:
                                    type: number
                                    description: |
                                      The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    example: 5
                                description: Adjuster for Complex Rules.
                              weight:
                                title: Adjuster
                                type: object
                                properties:
                                  adjuster:
                                    type: string
                                    description: |
                                      The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    enum:
                                      - relative
                                      - percentage
                                    x-nullable: true
                                  adjuster_value:
                                    type: number
                                    description: |
                                      The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
                                    example: 5
                                description: Adjuster for Complex Rules.
                              image_url:
                                type: string
                                description: |
                                  The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file.
                                example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                              purchasing_disabled:
                                type: object
                                properties:
                                  status:
                                    type: boolean
                                    description: |
                                      Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                                  message:
                                    type: string
                                    description: |
                                      The message displayed on the storefront when the purchasing disabled status is `true`.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the value; increments sequentially.
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
          example:
            data:
              id: 190
              option_id: 222
              label: 'Yes'
              sort_order: 0
              value_data: {}
              is_default: false
              adjusters:
                price:
                  adjuster: relative
                  adjuster_value: 5
                weight: {}
                image_url: ''
                purchasing_disabled:
                  status: false
                  message: ''
            meta: {}
    OptionCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Option Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Option
                  type: object
                  allOf:
                    - title: Option Base
                      type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numerical ID of the option, increments sequentially.
                          example: 55
                          x-nullable: true
                        product_id:
                          type: integer
                          description: |
                            The unique numerical ID of the product to which the option belongs.
                          example: 4
                          x-required:
                            - post
                            - put
                        display_name:
                          maxLength: 255
                          minLength: 1
                          type: string
                          description: |
                            The name of the option shown on the storefront.
                          example: Add-a-$5-Donation1535042499-187
                          x-required:
                            - post
                            - put
                        type:
                          type: string
                          description: |
                            The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                          enum:
                            - radio_buttons
                            - rectangles
                            - dropdown
                            - product_list
                            - product_list_with_images
                            - swatch
                          x-required:
                            - post
                            - put
                        config:
                          title: Option Config
                          type: object
                          properties:
                            default_value:
                              type: string
                              description: |
                                (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                            checked_by_default:
                              type: boolean
                              description: |
                                (checkbox) Flag for setting the checkbox to be checked by default.
                            checkbox_label:
                              type: string
                              description: |
                                (checkbox) Label displayed for the checkbox option.
                            date_limited:
                              type: boolean
                              description: |
                                (date) Flag to limit the dates allowed to be entered on a date option.
                            date_limit_mode:
                              type: string
                              description: |
                                (date) The type of limit that is allowed to be entered on a date option.
                              example: range
                              enum:
                                - earliest
                                - range
                                - latest
                            date_earliest_value:
                              type: string
                              description: |
                                (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                              format: date
                            date_latest_value:
                              type: string
                              description: |
                                (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                              format: date
                            file_types_mode:
                              type: string
                              description: |
                                (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                              example: specific
                              enum:
                                - specific
                                - all
                            file_types_supported:
                              type: array
                              description: |
                                (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                  `other` - Allows file types defined in the `file_types_other` array.
                              items:
                                type: string
                                example: 'images, documents, other'
                            file_types_other:
                              type: array
                              description: |
                                (file) A list of other file types allowed with the file upload option.
                              items:
                                type: string
                                example: pdf
                            file_max_size:
                              type: integer
                              description: |
                                (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                              example: 5
                            text_characters_limited:
                              type: boolean
                              description: |
                                (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                            text_min_length:
                              type: integer
                              description: |
                                (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                              example: 1
                            text_max_length:
                              type: integer
                              description: |
                                (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                              example: 55
                            text_lines_limited:
                              type: boolean
                              description: |
                                (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                              example: true
                            text_max_lines:
                              type: integer
                              description: |
                                (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                              example: 4
                            number_limited:
                              type: boolean
                              description: |
                                (numbers_only_text) Flag to limit the value of a number option.
                              example: true
                            number_limit_mode:
                              type: string
                              description: |
                                (numbers_only_text) The type of limit on values entered for a number option.
                              example: lowest
                              enum:
                                - lowest
                                - highest
                                - range
                            number_lowest_value:
                              type: number
                              description: |
                                (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                              example: 100
                            number_highest_value:
                              type: number
                              description: |
                                (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                            number_integers_only:
                              type: boolean
                              description: |
                                (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                              example: false
                            product_list_adjusts_inventory:
                              type: boolean
                              description: |
                                (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                            product_list_adjusts_pricing:
                              type: boolean
                              description: |
                                (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                            product_list_shipping_calc:
                              type: string
                              description: |
                                (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                              example: weight
                              enum:
                                - none
                                - weight
                                - package
                          description: The values for option config can vary based on the Modifier created.
                        sort_order:
                          type: integer
                          description: 'Order in which the option is displayed on the storefront. '
                          example: 1
                        option_values:
                          minItems: 1
                          type: array
                          items:
                            title: Option Value
                            type: object
                            allOf:
                              - title: Option Value Base
                                required:
                                  - label
                                  - sort_order
                                type: object
                                properties:
                                  is_default:
                                    type: boolean
                                    description: |
                                      The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                    example: false
                                  label:
                                    type: string
                                    description: |
                                      The text display identifying the value on the storefront. Required in a /POST.
                                    example: Green
                                    x-required:
                                      - post
                                  sort_order:
                                    maximum: 2147483647
                                    minimum: -2147483648
                                    type: integer
                                    description: |
                                      The order in which the value will be displayed on the product page. Required in a /POST.
                                    example: 0
                                    x-required:
                                      - post
                                  value_data:
                                    type: object
                                    properties: {}
                                    description: |
                                      Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                                description: Common Option Value properties.
                              - type: object
                                properties:
                                  id:
                                    type: integer
                                    description: |
                                      The unique numeric ID of the value; increments sequentially.
                          x-required:
                            - post
                            - put
                        image_url:
                          type: string
                          description: Publicly available image url
                      description: Common Option properties.
                    - type: object
                      properties:
                        name:
                          type: string
                          description: |
                            The unique option name, auto-generated from the display name, a timestamp, and the product ID.
                          example: Add-a-$5-Donation1535042499-187
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
            description: Get all product options
          example:
            data:
              - id: 220
                product_id: 192
                name: Color (Colors only)
                display_name: Color
                type: swatch
                sort_order: 0
                option_values:
                  - id: 174
                    label: Beige
                    sort_order: 1
                    value_data:
                      colors:
                        - '#FAFAEB'
                    is_default: false
                  - id: 175
                    label: Grey
                    sort_order: 2
                    value_data:
                      colors:
                        - '#BDBDBD'
                    is_default: false
                  - id: 176
                    label: Black
                    sort_order: 3
                    value_data:
                      colors:
                        - '#000000'
                    is_default: false
                  - id: 189
                    label: Black-Walnut
                    sort_order: 4
                    value_data:
                      colors:
                        - '#e80ee8'
                    is_default: false
                config: {}
            meta:
              pagination:
                total: 1
                count: 1
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    OptionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Option Response
            type: object
            properties:
              data:
                title: Option
                type: object
                allOf:
                  - title: Option Base
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numerical ID of the option, increments sequentially.
                        example: 55
                        x-nullable: true
                      product_id:
                        type: integer
                        description: |
                          The unique numerical ID of the product to which the option belongs.
                        example: 4
                        x-required:
                          - post
                          - put
                      display_name:
                        maxLength: 255
                        minLength: 1
                        type: string
                        description: |
                          The name of the option shown on the storefront.
                        example: Add-a-$5-Donation1535042499-187
                        x-required:
                          - post
                          - put
                      type:
                        type: string
                        description: |
                          The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
                        enum:
                          - radio_buttons
                          - rectangles
                          - dropdown
                          - product_list
                          - product_list_with_images
                          - swatch
                        x-required:
                          - post
                          - put
                      config:
                        title: Option Config
                        type: object
                        properties:
                          default_value:
                            type: string
                            description: |
                              (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
                          checked_by_default:
                            type: boolean
                            description: |
                              (checkbox) Flag for setting the checkbox to be checked by default.
                          checkbox_label:
                            type: string
                            description: |
                              (checkbox) Label displayed for the checkbox option.
                          date_limited:
                            type: boolean
                            description: |
                              (date) Flag to limit the dates allowed to be entered on a date option.
                          date_limit_mode:
                            type: string
                            description: |
                              (date) The type of limit that is allowed to be entered on a date option.
                            example: range
                            enum:
                              - earliest
                              - range
                              - latest
                          date_earliest_value:
                            type: string
                            description: |
                              (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                            format: date
                          date_latest_value:
                            type: string
                            description: |
                              (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
                            format: date
                          file_types_mode:
                            type: string
                            description: |
                              (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
                            example: specific
                            enum:
                              - specific
                              - all
                          file_types_supported:
                            type: array
                            description: |
                              (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
                                `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
                                `other` - Allows file types defined in the `file_types_other` array.
                            items:
                              type: string
                              example: 'images, documents, other'
                          file_types_other:
                            type: array
                            description: |
                              (file) A list of other file types allowed with the file upload option.
                            items:
                              type: string
                              example: pdf
                          file_max_size:
                            type: integer
                            description: |
                              (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
                            example: 5
                          text_characters_limited:
                            type: boolean
                            description: |
                              (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
                          text_min_length:
                            type: integer
                            description: |
                              (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
                            example: 1
                          text_max_length:
                            type: integer
                            description: |
                              (text, multi_line_text) The maximum length allowed for a text or multi line text option.
                            example: 55
                          text_lines_limited:
                            type: boolean
                            description: |
                              (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
                            example: true
                          text_max_lines:
                            type: integer
                            description: |
                              (multi_line_text) The maximum number of lines allowed on a multi-line text input.
                            example: 4
                          number_limited:
                            type: boolean
                            description: |
                              (numbers_only_text) Flag to limit the value of a number option.
                            example: true
                          number_limit_mode:
                            type: string
                            description: |
                              (numbers_only_text) The type of limit on values entered for a number option.
                            example: lowest
                            enum:
                              - lowest
                              - highest
                              - range
                          number_lowest_value:
                            type: number
                            description: |
                              (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
                            example: 100
                          number_highest_value:
                            type: number
                            description: |
                              (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
                          number_integers_only:
                            type: boolean
                            description: |
                              (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
                            example: false
                          product_list_adjusts_inventory:
                            type: boolean
                            description: |
                              (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
                          product_list_adjusts_pricing:
                            type: boolean
                            description: |
                              (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
                          product_list_shipping_calc:
                            type: string
                            description: |
                              (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
                            example: weight
                            enum:
                              - none
                              - weight
                              - package
                        description: The values for option config can vary based on the Modifier created.
                      sort_order:
                        type: integer
                        description: 'Order in which the option is displayed on the storefront. '
                        example: 1
                      option_values:
                        minItems: 1
                        type: array
                        items:
                          title: Option Value
                          type: object
                          allOf:
                            - title: Option Value Base
                              required:
                                - label
                                - sort_order
                              type: object
                              properties:
                                is_default:
                                  type: boolean
                                  description: |
                                    The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                                  example: false
                                label:
                                  type: string
                                  description: |
                                    The text display identifying the value on the storefront. Required in a /POST.
                                  example: Green
                                  x-required:
                                    - post
                                sort_order:
                                  maximum: 2147483647
                                  minimum: -2147483648
                                  type: integer
                                  description: |
                                    The order in which the value will be displayed on the product page. Required in a /POST.
                                  example: 0
                                  x-required:
                                    - post
                                value_data:
                                  type: object
                                  properties: {}
                                  description: |
                                    Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                              description: Common Option Value properties.
                            - type: object
                              properties:
                                id:
                                  type: integer
                                  description: |
                                    The unique numeric ID of the value; increments sequentially.
                        x-required:
                          - post
                          - put
                      image_url:
                        type: string
                        description: Publicly available image url
                    description: Common Option properties.
                  - type: object
                    properties:
                      name:
                        type: string
                        description: |
                          The unique option name, auto-generated from the display name, a timestamp, and the product ID.
                        example: Add-a-$5-Donation1535042499-187
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
          example:
            data:
              id: 220
              product_id: 192
              name: Color (Colors only)
              display_name: Color
              type: swatch
              sort_order: 0
              option_values:
                - id: 174
                  label: Beige
                  sort_order: 1
                  value_data:
                    colors:
                      - '#FAFAEB'
                  is_default: false
                - id: 175
                  label: Grey
                  sort_order: 2
                  value_data:
                    colors:
                      - '#BDBDBD'
                  is_default: false
                - id: 176
                  label: Black
                  sort_order: 3
                  value_data:
                    colors:
                      - '#000000'
                  is_default: false
                - id: 189
                  label: Black-Walnut
                  sort_order: 4
                  value_data:
                    colors:
                      - '#e80ee8'
                  is_default: false
              config: {}
            meta: {}
    OptionValueCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Option Value Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Option Value
                  type: object
                  allOf:
                    - title: Option Value Base
                      required:
                        - label
                        - sort_order
                      type: object
                      properties:
                        is_default:
                          type: boolean
                          description: |
                            The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                          example: false
                        label:
                          type: string
                          description: |
                            The text display identifying the value on the storefront. Required in a /POST.
                          example: Green
                          x-required:
                            - post
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: |
                            The order in which the value will be displayed on the product page. Required in a /POST.
                          example: 0
                          x-required:
                            - post
                        value_data:
                          type: object
                          properties: {}
                          description: |
                            Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                      description: Common Option Value properties.
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the value; increments sequentially.
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
            description: Get Option Values response.
          example:
            data:
              - id: 174
                label: Beige
                sort_order: 1
                value_data:
                  colors:
                    - '#FAFAEB'
                is_default: false
              - id: 175
                label: Grey
                sort_order: 2
                value_data:
                  colors:
                    - '#BDBDBD'
                is_default: false
              - id: 176
                label: Black
                sort_order: 3
                value_data:
                  colors:
                    - '#000000'
                is_default: false
              - id: 189
                label: Black-Walnut
                sort_order: 4
                value_data:
                  colors:
                    - '#e80ee8'
                is_default: false
            meta:
              pagination:
                total: 4
                count: 4
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    OptionValueResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Option Value Response
            type: object
            properties:
              data:
                title: Option Value
                type: object
                allOf:
                  - title: Option Value Base
                    required:
                      - label
                      - sort_order
                    type: object
                    properties:
                      is_default:
                        type: boolean
                        description: |
                          The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
                        example: false
                      label:
                        type: string
                        description: |
                          The text display identifying the value on the storefront. Required in a /POST.
                        example: Green
                        x-required:
                          - post
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The order in which the value will be displayed on the product page. Required in a /POST.
                        example: 0
                        x-required:
                          - post
                      value_data:
                        type: object
                        properties: {}
                        description: |
                          Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
                    description: Common Option Value properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the value; increments sequentially.
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
          example:
            data:
              id: 44
              label: Pick a color
              sort_order: 9
              value_data:
                colors:
                  - '#123c91, #FFFF00, #397a44'
              is_default: false
    ProductCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/product_Full'
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
    ProductImageCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Product Image Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Product Image
                  type: object
                  allOf:
                    - title: Product Image Base
                      type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the image; increments sequentially.
                        product_id:
                          type: integer
                          description: |
                            The unique numeric identifier for the product with which the image is associated.
                        image_file:
                          type: string
                          description: |
                            The local path to the original image file uploaded to BigCommerce.
                        url_zoom:
                          type: string
                          description: |
                            The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                        url_standard:
                          type: string
                          description: |
                            The standard URL for this image. By default, this is used for product-page images.
                        url_thumbnail:
                          type: string
                          description: |
                            The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                        url_tiny:
                          type: string
                          description: |
                            The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                        date_modified:
                          type: string
                          description: |
                            The date on which the product image was modified.
                          format: date-time
                        is_thumbnail:
                          type: boolean
                          description: |
                            Flag for identifying whether the image is used as the product's thumbnail.
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: |
                            The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                        description:
                          type: string
                          description: |
                            The description for the image.
                      description: Common ProductImage properties.
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the image; increments sequentially.
                        product_id:
                          type: integer
                          description: |
                            The unique numeric identifier for the product with which the image is associated.
                        image_file:
                          type: string
                          description: |
                            The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.
                        url_zoom:
                          type: string
                          description: |
                            The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                        url_standard:
                          type: string
                          description: |
                            The standard URL for this image. By default, this is used for product-page images.
                        url_thumbnail:
                          type: string
                          description: |
                            The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                        url_tiny:
                          type: string
                          description: |
                            The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                        date_modified:
                          type: string
                          description: |
                            The date on which the product image was modified.
                          format: date-time
                        image_url:
                          type: string
                          description: |-
                            Publically available URL.
                            Use the image_url when creating a product.
                          example: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
            description: |
              Response payload for the BigCommerce API.
          example:
            data:
              - id: 382
                product_id: 158
                is_thumbnail: true
                sort_order: 0
                description: ''
                image_file: a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg
                url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2'
                url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2'
                url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
                url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2'
                date_modified: '2018-08-15T14:48:31+00:00'
              - id: 383
                product_id: 158
                is_thumbnail: false
                sort_order: 0
                description: ''
                image_file: k/050/foglinenbeigestripetowel2b_1024x1024__16082__46564.jpg
                url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.1280.1280.jpg?c=2'
                url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.560.850.jpg?c=2'
                url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.330.500.jpg?c=2'
                url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.66.100.jpg?c=2'
                date_modified: '2018-08-15T14:48:31+00:00'
            meta:
              pagination:
                total: 2
                count: 2
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    ProductImageResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Product Image Response
            type: object
            properties:
              data:
                title: Product Image
                type: object
                allOf:
                  - title: Product Image Base
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the image; increments sequentially.
                      product_id:
                        type: integer
                        description: |
                          The unique numeric identifier for the product with which the image is associated.
                      image_file:
                        type: string
                        description: |
                          The local path to the original image file uploaded to BigCommerce.
                      url_zoom:
                        type: string
                        description: |
                          The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                      url_standard:
                        type: string
                        description: |
                          The standard URL for this image. By default, this is used for product-page images.
                      url_thumbnail:
                        type: string
                        description: |
                          The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                      url_tiny:
                        type: string
                        description: |
                          The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                      date_modified:
                        type: string
                        description: |
                          The date on which the product image was modified.
                        format: date-time
                      is_thumbnail:
                        type: boolean
                        description: |
                          Flag for identifying whether the image is used as the product's thumbnail.
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
                      description:
                        type: string
                        description: |
                          The description for the image.
                    description: Common ProductImage properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the image; increments sequentially.
                      product_id:
                        type: integer
                        description: |
                          The unique numeric identifier for the product with which the image is associated.
                      image_file:
                        type: string
                        description: |
                          The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.
                      url_zoom:
                        type: string
                        description: |
                          The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
                      url_standard:
                        type: string
                        description: |
                          The standard URL for this image. By default, this is used for product-page images.
                      url_thumbnail:
                        type: string
                        description: |
                          The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
                      url_tiny:
                        type: string
                        description: |
                          The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
                      date_modified:
                        type: string
                        description: |
                          The date on which the product image was modified.
                        format: date-time
                      image_url:
                        type: string
                        description: |-
                          Publically available URL.
                          Use the image_url when creating a product.
                        example: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
            description: |
              Response payload for the BigCommerce API.
          example:
            data:
              id: 485
              product_id: 158
              is_thumbnail: false
              sort_order: 1
              description: ''
              image_file: o/381/product-image__98178.png
              url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
              url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
              url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
              url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
              date_modified: '2018-09-13T15:57:07+00:00'
            meta: {}
    ProductResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Product Response
            type: object
            properties:
              data:
                $ref: '#/components/schemas/product_Full'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
        example-1:
          example:
            name: Smith Journal 13
            type: physical
            sku: SM-13
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 0
            width: 0
            depth: 0
            height: 0
            price: 0
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: string
            categories:
              - 0
            brand_id: 0
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            fixed_cost_shipping_price: 0
            is_free_shipping: true
            is_visible: true
            is_featured: true
            related_products:
              - 0
            warranty: string
            bin_picking_number: string
            layout_file: string
            upc: string
            search_keywords: string
            availability: available
            availability_description: string
            gift_wrapping_options_type: any
            gift_wrapping_options_list:
              - 0
            sort_order: -2147483648
            condition: New
            is_condition_shown: true
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: string
            meta_keywords:
              - string
            meta_description: string
            view_count: 0
            preorder_release_date: '2019-08-24T14:15:22+00:00'
            preorder_message: string
            is_preorder_only: true
            is_price_hidden: true
            price_hidden_label: string
            custom_url:
              url: string
              is_customized: true
            open_graph_type: product
            open_graph_title: string
            open_graph_description: string
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            brand_name or brand_id: Common Good
            gtin: string
            mpn: string
            reviews_rating_sum: 3.2
            reviews_count: 4
            total_sold: 80
            custom_fields:
              - id: 6
                name: ISBN
                value: '1234567890123'
            bulk_pricing_rules:
              - id: 0
                quantity_min: 10
                quantity_max: 50
                type: price
                amount: 10
            images:
              - image_file: string
                is_thumbnail: true
                sort_order: -2147483648
                description: string
                image_url: string
                id: 0
                product_id: 0
                url_zoom: string
                url_standard: string
                url_thumbnail: string
                url_tiny: string
                date_modified: '2019-08-24T14:15:22+00:00'
            videos:
              - title: string
                description: string
                sort_order: -2147483648
                type: youtube
                video_id: string
                id: 0
                product_id: 0
                length: string
            date_created: '2018-08-15T14:49:05+00:00'
            date_modified: '2018-08-24T14:41:00+00:00'
            id: 1
            base_variant_id: 0
            calculated_price: 0
            options:
              - id: 55
                product_id: 4
                display_name: Add-a-$5-Donation1535042499-187
                type: radio_buttons
                config:
                  default_value: string
                  checked_by_default: true
                  checkbox_label: string
                  date_limited: true
                  date_limit_mode: range
                  date_earliest_value: '2019-08-24T00:00:00+00:00'
                  date_latest_value: '2019-08-24T00:00:00+00:00'
                  file_types_mode: specific
                  file_types_supported:
                    - 'images, documents, other'
                  file_types_other:
                    - pdf
                  file_max_size: 5
                  text_characters_limited: true
                  text_min_length: 1
                  text_max_length: 55
                  text_lines_limited: true
                  text_max_lines: 4
                  number_limited: true
                  number_limit_mode: lowest
                  number_lowest_value: 100
                  number_highest_value: 0
                  number_integers_only: false
                  product_list_adjusts_inventory: true
                  product_list_adjusts_pricing: true
                  product_list_shipping_calc: weight
                sort_order: 1
                option_values:
                  is_default: false
                  label: Green
                  sort_order: 0
                  value_data: {}
                  id: 0
            modifiers:
              - type: date
                required: true
                sort_order: 0
                config:
                  default_value: string
                  checked_by_default: true
                  checkbox_label: string
                  date_limited: true
                  date_limit_mode: range
                  date_earliest_value: '2019-08-24T00:00:00+00:00'
                  date_latest_value: '2019-08-24T00:00:00+00:00'
                  file_types_mode: specific
                  file_types_supported:
                    - 'images, documents, other'
                  file_types_other:
                    - pdf
                  file_max_size: 5
                  text_characters_limited: true
                  text_min_length: 1
                  text_max_length: 55
                  text_lines_limited: true
                  text_max_lines: 4
                  number_limited: true
                  number_limit_mode: lowest
                  number_lowest_value: 100
                  number_highest_value: 0
                  number_integers_only: false
                  product_list_adjusts_inventory: true
                  product_list_adjusts_pricing: true
                  product_list_shipping_calc: weight
                display_name: string
                id: 12
                product_id: 77
                name: Add-a-$5-Donation1535039590-191
                option_values:
                  - is_default: false
                    label: Green
                    sort_order: 0
                    value_data: {}
                    adjusters:
                      price:
                        adjuster: relative
                        adjuster_value: 5
                      weight:
                        adjuster: relative
                        adjuster_value: 5
                      image_url: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
                      purchasing_disabled:
                        status: true
                        message: string
                    id: 0
                    option_id: 0
            option_set_id: 0
            option_set_display: string
            variants:
              - cost_price: 0
                price: 0
                sale_price: 0
                retail_price: 0
                weight: 0
                width: 0
                height: 0
                depth: 0
                is_free_shipping: true
                fixed_cost_shipping_price: 0
                purchasing_disabled: true
                purchasing_disabled_message: string
                upc: string
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: string
                mpn: string
                gtin: '012345678905'
                id: 0
                product_id: 0
                sku: string
                sku_id: 0
                option_values:
                  - option_display_name: Color
                    label: Beige
                    id: 146
                    option_id: 151
                calculated_price: 0
                calculated_weight: 0
            meta: {}
    ProductReviewCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Product Review Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Product Review
                  type: object
                  description: |
                    A product review model.
                  allOf:
                    - title: Product Review Base
                      required:
                        - date_reviewed
                        - title
                      type: object
                      properties:
                        title:
                          maxLength: 255
                          minLength: 0
                          type: string
                          description: |-
                            The title for the product review.
                            Required in /POST.
                        text:
                          type: string
                          description: |
                            The text for the product review.
                        status:
                          type: string
                          description: |
                            The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                        rating:
                          type: integer
                          description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                        email:
                          type: string
                          description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                        name:
                          maxLength: 255
                          minLength: 0
                          type: string
                          description: The name of the reviewer.
                        date_reviewed:
                          type: string
                          description: |
                            Date the product was reviewed. Required in /POST.
                          format: date-time
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the product review; increments sequentially.
                        product_id:
                          type: integer
                          description: |
                            The unique numeric identifier for the product with which the review is associated.
                        date_created:
                          type: string
                          description: |
                            Date the product review was created.
                          format: date-time
                        date_modified:
                          type: string
                          description: |
                            Date the product review was modified.
                          format: date-time
              meta:
                $ref: '#/components/schemas/metaCollection_Full'
    ProductReviewResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Product Review Response
            type: object
            properties:
              data:
                title: Product Review
                type: object
                description: |
                  A product review model.
                allOf:
                  - title: Product Review Base
                    required:
                      - date_reviewed
                      - title
                    type: object
                    properties:
                      title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |-
                          The title for the product review.
                          Required in /POST.
                      text:
                        type: string
                        description: |
                          The text for the product review.
                      status:
                        type: string
                        description: |
                          The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
                      rating:
                        type: integer
                        description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
                      email:
                        type: string
                        description: 'The email of the reviewer. Must be a valid email, or an empty string.'
                      name:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: The name of the reviewer.
                      date_reviewed:
                        type: string
                        description: |
                          Date the product was reviewed. Required in /POST.
                        format: date-time
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the product review; increments sequentially.
                      product_id:
                        type: integer
                        description: |
                          The unique numeric identifier for the product with which the review is associated.
                      date_created:
                        type: string
                        description: |
                          Date the product review was created.
                        format: date-time
                      date_modified:
                        type: string
                        description: |
                          Date the product review was modified.
                        format: date-time
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
            description: |
              Response payload for the BigCommerce API.
          example:
            data:
              title: irur
              text: anim aute
              status: Lorem ad sed voluptate
              rating: -39218623
              email: esse Lorem laborum aute
              name: 'ut in '
              date_reviewed: '2011-12-31T13:40:42.971Z'
              id: 82495037
              product_id: 22609026
              date_created: '1985-01-17T07:37:20.439Z'
              date_modified: '2004-09-28T14:38:21.973Z'
            meta: {}
    ProductSortOrderResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
    ProductVideoCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Product Video Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  title: Product Video
                  type: object
                  description: |
                    A product video model.
                  allOf:
                    - title: Product Video Base
                      type: object
                      properties:
                        title:
                          maxLength: 255
                          minLength: 0
                          type: string
                          description: |
                            The title for the video. If left blank, this will be filled in according to data on a host site.
                        description:
                          type: string
                          description: |
                            The description for the video. If left blank, this will be filled in according to data on a host site.
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: |
                            The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                        type:
                          type: string
                          description: |
                            The video type (a short name of a host site).
                          enum:
                            - youtube
                      description: Common Product Video properties.
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: |
                            The unique numeric ID of the product video; increments sequentially.
                        video_id:
                          type: string
                          description: |
                            The ID of the video on a host site.
                        product_id:
                          type: integer
                          description: |
                            The unique numeric identifier for the product with which the image is associated.
                        length:
                          type: string
                          description: |
                            Length of the video. This will be filled in according to data on a host site.
              meta:
                title: Collection Meta
                type: object
                description: 'Data about the response, including pagination and collection totals.'
          example:
            data:
              - id: 6
                type: youtube
                video_id: PqBTp23RLhI
                product_id: 192
                sort_order: 1
                title: Creating and Editing Banners | BigCommerce Tutorials
                description: 'Learn how to create and edit marketing banners. Marketing banners are a great way to advertise sales, display coupon codes, and add design elements. Let’s take a look at how you can leverage banners to convert your store’s visitors into paying customers.'
                length: '01:54'
              - id: 7
                type: youtube
                video_id: EhYBjzqd-nI
                product_id: 192
                sort_order: 2
                title: BigCommerce Company Values
                description: |-
                  These are the core principles upon which BigCommerce was built, guiding what we do and how we do it. Each employee learns them, loves them and lives them. Our merchants benefit from them every time they use our product or get help from our support team.

                  Join the BigCommerce team and help us build software that changes lives!

                  https://www.bigcommerce.com/careers/
                length: '03:30'
              - id: 8
                type: youtube
                video_id: vAUdo4kRjrU
                product_id: 192
                sort_order: 3
                title: TOP WORKPLACES 2016 - Austin American Statesman + BigCommerce
                description: |-
                  We've been named one of Austin American-Statesman's Top WorkPlaces for the 5th year in a row! Here's what some employees have to say:

                  “I am given the freedom and trust to make a difference.”

                  “Everyone believes in the product and growing the company.”

                  “I'm appreciated for the work I do and there is room to grown within the company.”

                  Work With Us!
                  http://www.bigcommerce.com/careers.php
                length: '01:37'
            meta:
              pagination:
                total: 3
                count: 3
                per_page: 50
                current_page: 1
                total_pages: 1
                links:
                  current: '?page=1&limit=50'
    ProductVideoResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Product Video Response
            type: object
            properties:
              data:
                title: Product Video
                type: object
                description: |
                  A product video model.
                allOf:
                  - title: Product Video Base
                    type: object
                    properties:
                      title:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: |
                          The title for the video. If left blank, this will be filled in according to data on a host site.
                      description:
                        type: string
                        description: |
                          The description for the video. If left blank, this will be filled in according to data on a host site.
                      sort_order:
                        maximum: 2147483647
                        minimum: -2147483648
                        type: integer
                        description: |
                          The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
                      type:
                        type: string
                        description: |
                          The video type (a short name of a host site).
                        enum:
                          - youtube
                    description: Common Product Video properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The unique numeric ID of the product video; increments sequentially.
                      video_id:
                        type: string
                        description: |
                          The ID of the video on a host site.
                      product_id:
                        type: integer
                        description: |
                          The unique numeric identifier for the product with which the image is associated.
                      length:
                        type: string
                        description: |
                          Length of the video. This will be filled in according to data on a host site.
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
            description: |
              Response payload for the BigCommerce API.
          example:
            title: Your Video
            description: Company Values
            sort_order: 1
            type: youtube
            video_id: 123345AA
    VariantCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Variant Collection Response
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  allOf:
                    - title: Variant Base
                      type: object
                      properties:
                        cost_price:
                          minimum: 0
                          type: number
                          description: The cost price of the variant. Not affected by Price List prices.
                          format: double
                          x-nullable: true
                        price:
                          minimum: 0
                          type: number
                          description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                          format: double
                          x-nullable: true
                        sale_price:
                          minimum: 0
                          type: number
                          description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                          format: double
                          x-nullable: true
                        retail_price:
                          minimum: 0
                          type: number
                          description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                          format: double
                          x-nullable: true
                        weight:
                          minimum: 0
                          type: number
                          description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                          format: double
                          x-nullable: true
                        width:
                          minimum: 0
                          type: number
                          description: |
                            Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                          format: double
                          x-nullable: true
                        height:
                          minimum: 0
                          type: number
                          description: |
                            Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                          format: double
                          x-nullable: true
                        depth:
                          minimum: 0
                          type: number
                          description: |
                            Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                          format: double
                          x-nullable: true
                        is_free_shipping:
                          type: boolean
                          description: |
                            Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                        fixed_cost_shipping_price:
                          minimum: 0
                          type: number
                          description: |
                            A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                          format: double
                          x-nullable: true
                        purchasing_disabled:
                          type: boolean
                          description: 'If `true`, this variant will not be purchasable on the storefront.'
                        purchasing_disabled_message:
                          maxLength: 255
                          minLength: 0
                          type: string
                          description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                        upc:
                          type: string
                          description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                          x-nullable: true
                        inventory_level:
                          type: integer
                          description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
                          x-nullable: true
                        inventory_warning_level:
                          type: integer
                          description: 'When the variant hits this inventory level, it is considered low stock.'
                          x-nullable: true
                        bin_picking_number:
                          maxLength: 255
                          minLength: 0
                          type: string
                          description: Identifies where in a warehouse the variant is located.
                          x-nullable: true
                      description: Common Variant properties.
                    - type: object
                      properties:
                        id:
                          type: integer
                        product_id:
                          type: integer
                        sku:
                          type: string
                        sku_id:
                          type: integer
                          description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
                          x-nullable: true
                        option_values:
                          type: array
                          description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
                          items:
                            title: Option Value Variant
                            type: object
                            allOf:
                              - title: Option Value Product Base
                                type: object
                                properties:
                                  option_display_name:
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    description: |
                                      The name of the option.
                                    example: Color
                                    x-required:
                                      - post
                                  label:
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                    description: |
                                      The label of the option value.
                                    example: Beige
                                    x-required:
                                      - post
                                description: Common Option Value Product properties.
                              - type: object
                                properties:
                                  id:
                                    type: integer
                                  option_id:
                                    type: integer
                        calculated_price:
                          type: number
                          description: |
                            The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
                          format: double
              meta:
                title: Collection Meta
                type: object
                description: 'Data about the response, including pagination and collection totals.'
    VariantResponse:
      description: ''
      content:
        application/json:
          schema:
            title: Variant Response
            type: object
            properties:
              data:
                type: object
                allOf:
                  - title: Variant Base
                    type: object
                    properties:
                      cost_price:
                        minimum: 0
                        type: number
                        description: The cost price of the variant. Not affected by Price List prices.
                        format: double
                        x-nullable: true
                      price:
                        minimum: 0
                        type: number
                        description: 'This variant’s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product’s default price (set in the Product resource’s `price` field) will be used as the base price.'
                        format: double
                        x-nullable: true
                      sale_price:
                        minimum: 0
                        type: number
                        description: 'This variant’s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s sale price (set in the Product resource’s `price` field) will be used as the sale price.'
                        format: double
                        x-nullable: true
                      retail_price:
                        minimum: 0
                        type: number
                        description: 'This variant’s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product’s retail price (set in the Product resource’s `price` field) will be used as the retail price.'
                        format: double
                        x-nullable: true
                      weight:
                        minimum: 0
                        type: number
                        description: 'This variant’s base weight on the storefront. If this value is null, the product’s default weight (set in the Product resource’s weight field) will be used as the base weight.'
                        format: double
                        x-nullable: true
                      width:
                        minimum: 0
                        type: number
                        description: |
                          Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
                        format: double
                        x-nullable: true
                      height:
                        minimum: 0
                        type: number
                        description: |
                          Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
                        format: double
                        x-nullable: true
                      depth:
                        minimum: 0
                        type: number
                        description: |
                          Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
                        format: double
                        x-nullable: true
                      is_free_shipping:
                        type: boolean
                        description: |
                          Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
                      fixed_cost_shipping_price:
                        minimum: 0
                        type: number
                        description: |
                          A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
                        format: double
                        x-nullable: true
                      purchasing_disabled:
                        type: boolean
                        description: 'If `true`, this variant will not be purchasable on the storefront.'
                      purchasing_disabled_message:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
                      upc:
                        type: string
                        description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
                        x-nullable: true
                      inventory_level:
                        type: integer
                        description: 'Inventory level for the variant, which is used when the product’s inventory_tracking is set to `variant`.'
                        x-nullable: true
                      inventory_warning_level:
                        type: integer
                        description: 'When the variant hits this inventory level, it is considered low stock.'
                        x-nullable: true
                      bin_picking_number:
                        maxLength: 255
                        minLength: 0
                        type: string
                        description: Identifies where in a warehouse the variant is located.
                        x-nullable: true
                    description: Common Variant properties.
                  - type: object
                    properties:
                      id:
                        type: integer
                      product_id:
                        type: integer
                      sku:
                        type: string
                      sku_id:
                        type: integer
                        description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
                        x-nullable: true
                      option_values:
                        type: array
                        description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
                        items:
                          title: Option Value Variant
                          type: object
                          allOf:
                            - title: Option Value Product Base
                              type: object
                              properties:
                                option_display_name:
                                  maxLength: 255
                                  minLength: 1
                                  type: string
                                  description: |
                                    The name of the option.
                                  example: Color
                                  x-required:
                                    - post
                                label:
                                  maxLength: 255
                                  minLength: 1
                                  type: string
                                  description: |
                                    The label of the option value.
                                  example: Beige
                                  x-required:
                                    - post
                              description: Common Option Value Product properties.
                            - type: object
                              properties:
                                id:
                                  type: integer
                                option_id:
                                  type: integer
                      calculated_price:
                        type: number
                        description: |
                          The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
                        format: double
              meta:
                title: Meta
                type: object
                properties: {}
                description: Empty meta object; may be used later.
    betaCategoryCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            title: Category Base
            properties:
              data:
                type: array
                items: {}
              meta:
                $ref: '#/components/schemas/betametaCollection_Full'
          examples:
            response:
              value:
                data:
                  - id: 19
                    parent_id: 0
                    name: Garden
                    description: This is the garden description
                    views: 0
                    sort_order: 2
                    page_title: page title
                    meta_keywords:
                      - meta keyword
                    meta_description: meta description
                    layout_file: category.html
                    image_url: ''
                    is_visible: true
                    search_keywords: search keywords
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/
                      is_customized: false
                  - id: 20
                    parent_id: 0
                    name: Publications
                    description: ''
                    views: 0
                    sort_order: 4
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /publications/
                      is_customized: false
                  - id: 21
                    parent_id: 0
                    name: Kitchen
                    description: ''
                    views: 0
                    sort_order: 3
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /kitchen/
                      is_customized: false
                  - id: 22
                    parent_id: 0
                    name: Utility
                    description: ''
                    views: 0
                    sort_order: 5
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /utility/
                      is_customized: false
                  - id: 23
                    parent_id: 0
                    name: Shop All
                    description: ''
                    views: 0
                    sort_order: 0
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category_with_facets.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /shop-all/
                      is_customized: false
                  - id: 39
                    parent_id: 19
                    name: Bath
                    description: ''
                    views: 0
                    sort_order: 0
                    page_title: ''
                    meta_keywords:
                      - ''
                    meta_description: ''
                    layout_file: category.html
                    image_url: ''
                    is_visible: true
                    search_keywords: ''
                    default_product_sort: use_store_settings
                    custom_url:
                      url: /garden/bath/
                      is_customized: false
                meta:
                  pagination:
                    total: 6
                    count: 6
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    betaCategoryResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            title: Category Response
            properties:
              data:
                $ref: '#/components/schemas/betacategory_Full'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
  parameters:
    FilterTemplateFileParam:
      name: template_file
      in: query
      description: 'The template file, for example: `pages/home`.'
      schema:
        type: string
    FilterIdParam:
      name: id
      in: query
      description: |
        Filter items by id.
      schema:
        type: integer
    FilterSkuParam:
      name: sku
      in: query
      description: |
        Filter items by sku.
      schema:
        type: string
    FilterNameParam:
      name: name
      in: query
      description: |
        Filter items by name.
      schema:
        type: string
    FilterEmailParam:
      name: email
      in: query
      description: |
        Filter items by email.
      schema:
        type: string
    FilterSourceParam:
      name: source
      in: query
      description: |
        Filter items by source.
      schema:
        type: string
    FilterOrderIdParam:
      name: order_id
      in: query
      description: |
        Filter items by order_id.
      schema:
        type: integer
    FilterUpcParam:
      name: upc
      in: query
      description: |
        Filter items by upc.
      schema:
        type: string
    FilterPriceParam:
      name: price
      in: query
      description: |
        Filter items by price.
      schema:
        type: number
    FilterSalePriceParam:
      name: sale_price
      in: query
      description: |
        Filter items by sale_price.
      schema:
        type: number
    FilterRetailPriceParam:
      name: retail_price
      in: query
      description: |
        Filter items by retail_price.
      schema:
        type: number
    FilterMapPriceParam:
      name: map_price
      in: query
      description: |
        Filter items by map_price.
      schema:
        type: number
    FilterCalculatedPriceParam:
      name: calculated_price
      in: query
      description: |
        Filter items by calculated_price.
      schema:
        type: number
    FilterWeightParam:
      name: weight
      in: query
      description: |
        Filter items by weight.
      schema:
        type: number
    FilterConditionParam:
      name: condition
      in: query
      description: |
        Filter items by condition.
      schema:
        type: string
        enum:
          - new
          - used
          - refurbished
    FilterBrandIdParam:
      name: brand_id
      in: query
      description: |
        Filter items by brand_id.
      schema:
        type: integer
    FilterDateModifiedParam:
      name: date_modified
      in: query
      description: 'Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`'
      schema:
        type: string
        format: date-time
    FilterDateCreatedParam:
      name: date_created
      in: query
      description: |
        Filter items by date_created.
      schema:
        type: string
        format: date-time
    FilterDateLastImportedParam:
      name: date_last_imported
      in: query
      description: 'Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`'
      schema:
        type: string
        format: date-time
    FilterIsVisibleParam:
      name: is_visible
      in: query
      description: 'Filter items by if visible on the storefront. '
      schema:
        type: boolean
    FilterIsFeaturedParam:
      name: is_featured
      in: query
      description: |
        Filter items by is_featured.
      schema:
        type: integer
    FilterIsFreeShippingParam:
      name: is_free_shipping
      in: query
      description: |
        Filter items by is_free_shipping.
      schema:
        type: integer
    FilterInventoryLevelParam:
      name: inventory_level
      in: query
      description: |
        Filter items by inventory_level.
      schema:
        type: integer
    FilterInventoryLowParam:
      name: inventory_low
      in: query
      description: |
        Filter items by inventory_low. Values: 1, 0.
      schema:
        type: integer
    FilterOutOfStockParam:
      name: out_of_stock
      in: query
      description: |
        Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.
      schema:
        type: integer
    FilterTotalSoldParam:
      name: total_sold
      in: query
      description: |
        Filter items by total_sold.
      schema:
        type: integer
    ProductFilterTypeParam:
      name: type
      in: query
      description: 'Filter items by type: `physical` or `digital`.'
      schema:
        type: string
        enum:
          - digital
          - physical
    FilterCategoriesParam:
      name: categories
      in: query
      description: |-
        Filter items by categories.
         If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
      schema:
        type: integer
    FilterKeywordParam:
      name: keyword
      in: query
      description: 'Filter items by keywords. eg. new, towel, bath'
      schema:
        type: string
    ProductFilterKeywordParam:
      name: keyword
      in: query
      description: |
        Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.
      schema:
        type: string
    ProductFilterKeywordContextParam:
      name: keyword_context
      in: query
      description: Set context for a product search.
      schema:
        type: string
        enum:
          - shopper
          - merchant
    FilterStatusParam:
      name: status
      in: query
      description: |
        Filter items by status.
      schema:
        type: integer
    FilterIncludeParam:
      name: include
      in: query
      description: 'Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.'
      schema:
        type: string
        enum:
          - variants
          - images
          - custom_fields
          - bulk_pricing_rules
          - primary_image
          - modifiers
          - options
          - videos
    FilterIncludeFieldsParam:
      name: include_fields
      in: query
      description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
      schema:
        type: string
    FilterExcludeFieldsParam:
      name: exclude_fields
      in: query
      description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
      schema:
        type: string
    FilterParentIdParam:
      name: parent_id
      in: query
      description: 'Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. '
      schema:
        type: integer
    FilterPageTitleParam:
      name: page_title
      in: query
      description: |
        Filter items by page_title.
      schema:
        type: string
    FilterAvailabilityParam:
      name: availability
      in: query
      description: |
        Filter items by availability. Values are: available, disabled, preorder.
      schema:
        type: string
        enum:
          - available
          - disabled
          - preorder
    FilterProductIdParam:
      name: product_id
      in: query
      description: |
        A comma-separated list of ids of `Product`s whose prices were requested.
      schema:
        type: string
    FilterVariantIdParam:
      name: variant_id
      in: query
      description: |
        The ID of the `Variant` whose prices were requested.
      schema:
        type: integer
    FilterCurrencyParam:
      name: currency
      in: query
      description: |
        Filter items by currency.
      schema:
        type: string
        format: ISO-4217
    PageParam:
      name: page
      in: query
      description: Specifies the page number in a limited (paginated) list of products.
      schema:
        type: integer
    LimitParam:
      name: limit
      in: query
      description: Controls the number of items per page in a limited (paginated) list of products.
      schema:
        type: integer
    DirectionParam:
      name: direction
      in: query
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      schema:
        type: string
        enum:
          - asc
          - desc
    ProductSortParam:
      name: sort
      in: query
      description: |
        Field name to sort by.
      schema:
        type: string
        enum:
          - id
          - name
          - sku
          - price
          - date_modified
          - date_last_imported
          - inventory_level
          - is_visible
          - total_sold
    ProductIdParam:
      name: product_id
      in: path
      description: |
        The ID of the `Product` to which the resource belongs.
      required: true
      schema:
        type: integer
    ReviewIdParam:
      name: review_id
      description: |
        The ID of the `review` that is being operated on.
      required: true
      in: path
      schema:
        type: integer
    ImageIdParam:
      name: image_id
      description: |
        The ID of the `Image` that is being operated on.
      required: true
      in: path
      schema:
        type: integer
    VideoIdParam:
      name: id
      description: The BigCommerce ID of the `Video`
      required: true
      in: path
      schema:
        type: integer
    ComplexRuleIdParam:
      name: complex_rule_id
      description: |
        The ID of the `ComplexRule`.
      required: true
      in: path
      schema:
        type: integer
    ConfigurableFieldIdParam:
      name: configurable_field_id
      description: |
        The ID of the `ConfigurableField`.
      required: true
      in: path
      schema:
        type: integer
    CustomFieldIdParam:
      name: custom_field_id
      description: |
        The ID of the `CustomField`.
      required: true
      in: path
      schema:
        type: integer
    BulkPricingRuleIdParam:
      name: bulk_pricing_rule_id
      description: |
        The ID of the `BulkPricingRule`.
      required: true
      in: path
      schema:
        type: integer
    ModifierIdParam:
      name: modifier_id
      description: |
        The ID of the `Modifier`.
      required: true
      in: path
      schema:
        type: integer
    ValueIdParam:
      name: value_id
      description: |
        The ID of the `Modifier/Option Value`.
      required: true
      in: path
      schema:
        type: integer
    OptionIdParam:
      name: option_id
      description: |
        The ID of the `Option`.
      required: true
      in: path
      schema:
        type: integer
    VariantIdParam:
      name: variant_id
      in: path
      description: |
        ID of the variant on a product, or on an associated Price List Record.
      required: true
      schema:
        type: integer
    CategoryIdParam:
      name: category_id
      in: path
      description: |
        The ID of the `Category` to which the resource belongs.
      required: true
      schema:
        type: integer
    BrandIdParam:
      name: brand_id
      in: path
      description: |
        The ID of the `Brand` to which the resource belongs.
      required: true
      schema:
        type: integer
    MetafieldIdParam:
      name: metafield_id
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    MetafieldKeyParam:
      name: key
      in: query
      description: |
        Filter based on a metafield's key.
      schema:
        type: string
    MetafieldNamespaceParam:
      name: namespace
      in: query
      description: Filter based on a metafield's namespace.
      schema:
        type: string
    OrderIdParam:
      name: order_id
      in: path
      description: |
        The ID of the `Order` to which the transactions belong.
      required: true
      schema:
        type: integer
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    product_id:
      name: product_id
      in: query
      description: |-
        A comma-separated list of ids of Products whose prices were requested. For example:
        `?product_id=:id`
        `?product_id:in=77,80,81`
      schema:
        type: string
    FilterIdIn:
      name: 'id:in'
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterIdNotIn:
      name: 'id:not_in'
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterIdMax:
      name: 'id:max'
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterIdMin:
      name: 'id:min'
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterIdGreater:
      name: 'id:greater'
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    FilterIdLess:
      name: 'id:less'
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
    betaFilterTemplateFileParam:
      in: query
      name: template_file
      description: 'The template file, for example: `pages/home`.'
      required: false
      schema:
        type: string
    betaFilterIdParam:
      name: id
      description: |
        Filter items by id.
      required: false
      in: query
      schema:
        type: integer
    betaFilterSkuParam:
      name: sku
      description: |
        Filter items by sku.
      required: false
      in: query
      schema:
        type: string
    betaFilterNameParam:
      name: name
      description: |
        Filter items by name.
      required: false
      in: query
      schema:
        type: string
    betaFilterEmailParam:
      name: email
      description: |
        Filter items by email.
      required: false
      in: query
      schema:
        type: string
    betaFilterSourceParam:
      name: source
      description: |
        Filter items by source.
      required: false
      in: query
      schema:
        type: string
    betaFilterOrderIdParam:
      name: order_id
      description: |
        Filter items by order_id.
      required: false
      in: query
      schema:
        type: integer
    betaFilterUpcParam:
      name: upc
      description: |
        Filter items by upc.
      required: false
      in: query
      schema:
        type: string
    betaFilterPriceParam:
      name: price
      description: |
        Filter items by price.
      required: false
      in: query
      schema:
        type: number
    betaFilterSalePriceParam:
      name: sale_price
      description: |
        Filter items by sale_price.
      required: false
      in: query
      schema:
        type: number
    betaFilterRetailPriceParam:
      name: retail_price
      description: |
        Filter items by retail_price.
      required: false
      in: query
      schema:
        type: number
    betaFilterMapPriceParam:
      name: map_price
      description: |
        Filter items by map_price.
      required: false
      in: query
      schema:
        type: number
    betaFilterCalculatedPriceParam:
      name: calculated_price
      description: |
        Filter items by calculated_price.
      required: false
      in: query
      schema:
        type: number
    betaFilterWeightParam:
      name: weight
      description: |
        Filter items by weight.
      required: false
      in: query
      schema:
        type: number
    betaFilterConditionParam:
      name: condition
      description: |
        Filter items by condition.
      required: false
      in: query
      schema:
        type: string
        enum:
          - new
          - used
          - refurbished
    betaFilterBrandIdParam:
      name: brand_id
      description: |
        Filter items by brand_id.
      required: false
      in: query
      schema:
        type: integer
    betaFilterDateModifiedParam:
      name: date_modified
      description: 'Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`'
      required: false
      in: query
      schema:
        type: string
        format: date-time
    betaFilterDateCreatedParam:
      name: date_created
      description: |
        Filter items by date_created.
      required: false
      in: query
      schema:
        type: string
        format: date-time
    betaFilterDateLastImportedParam:
      name: date_last_imported
      description: 'Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`'
      required: false
      in: query
      schema:
        type: string
        format: date-time
    betaFilterIsVisibleParam:
      name: is_visible
      description: 'Filter items by if visible on the storefront. '
      required: false
      in: query
      schema:
        type: boolean
    betaFilterIsFeaturedParam:
      name: is_featured
      description: |
        Filter items by is_featured.
      required: false
      in: query
      schema:
        type: integer
    betaFilterIsFreeShippingParam:
      name: is_free_shipping
      description: |
        Filter items by is_free_shipping.
      required: false
      in: query
      schema:
        type: integer
    betaFilterInventoryLevelParam:
      name: inventory_level
      description: |
        Filter items by inventory_level.
      required: false
      in: query
      schema:
        type: integer
    betaFilterInventoryLowParam:
      name: inventory_low
      description: |
        Filter items by inventory_low. Values: 1, 0.
      required: false
      in: query
      schema:
        type: integer
    betaFilterOutOfStockParam:
      name: out_of_stock
      description: |
        Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.
      required: false
      in: query
      schema:
        type: integer
    betaFilterTotalSoldParam:
      name: total_sold
      description: |
        Filter items by total_sold.
      required: false
      in: query
      schema:
        type: integer
    betaProductFilterTypeParam:
      name: type
      description: 'Filter items by type: `physical` or `digital`.'
      required: false
      in: query
      schema:
        type: string
        enum:
          - digital
          - physical
    betaFilterCategoriesParam:
      name: categories
      description: |-
        Filter items by categories.
         If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
      required: false
      in: query
      schema:
        type: integer
    betaFilterKeywordParam:
      name: keyword
      description: 'Filter items by keywords. eg. new, towel, bath'
      required: false
      in: query
      schema:
        type: string
    betaProductFilterKeywordParam:
      name: keyword
      description: |
        Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.
      required: false
      in: query
      schema:
        type: string
    betaProductFilterKeywordContextParam:
      name: keyword_context
      description: Set context for a product search.
      required: false
      in: query
      schema:
        type: string
        enum:
          - shopper
          - merchant
    betaFilterStatusParam:
      name: status
      description: |
        Filter items by status.
      required: false
      in: query
      schema:
        type: integer
    betaFilterIncludeParam:
      name: include
      description: 'Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.'
      required: false
      in: query
      schema:
        type: string
        enum:
          - variants
          - images
          - custom_fields
          - bulk_pricing_rules
          - primary_image
          - modifiers
          - options
          - videos
    betaFilterIncludeFieldsParam:
      name: include_fields
      description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
      required: false
      in: query
      schema:
        type: string
    betaFilterExcludeFieldsParam:
      name: exclude_fields
      description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
      required: false
      in: query
      schema:
        type: string
    betaFilterParentIdParam:
      name: parent_id
      description: 'Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. '
      required: false
      in: query
      schema:
        type: integer
    betaFilterPageTitleParam:
      name: page_title
      description: |
        Filter items by page_title.
      required: false
      in: query
      schema:
        type: string
    betaFilterAvailabilityParam:
      name: availability
      description: |
        Filter items by availability. Values are: available, disabled, preorder.
      required: false
      in: query
      schema:
        type: string
        enum:
          - available
          - disabled
          - preorder
    betaFilterProductIdParam:
      name: product_id
      in: query
      required: false
      description: |
        A comma-separated list of ids of `Product`s whose prices were requested.
      schema:
        type: string
    betaFilterVariantIdParam:
      name: variant_id
      in: query
      required: false
      description: |
        The ID of the `Variant` whose prices were requested.
      schema:
        type: integer
    betaFilterCurrencyParam:
      name: currency
      description: |
        Filter items by currency.
      required: false
      in: query
      schema:
        type: string
        format: ISO-4217
    betaPageParam:
      name: page
      description: Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    betaLimitParam:
      name: limit
      description: Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    betaDirectionParam:
      name: direction
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
    betaProductSortParam:
      name: sort
      description: |
        Field name to sort by.
      required: false
      in: query
      schema:
        type: string
        enum:
          - id
          - name
          - sku
          - price
          - date_modified
          - date_last_imported
          - inventory_level
          - is_visible
          - total_sold
    betaFilterIdIn:
      in: query
      name: 'id:in'
      schema:
        type: array
        items:
          type: integer
    betaFilterIdNotIn:
      in: query
      name: 'id:not_in'
      schema:
        type: array
        items:
          type: integer
    betaFilterIdMax:
      in: query
      name: 'id:max'
      schema:
        type: array
        items:
          type: integer
    betaFilterIdMin:
      in: query
      name: 'id:min'
      schema:
        type: array
        items:
          type: integer
    betaFilterIdGreater:
      in: query
      name: 'id:greater'
      schema:
        type: array
        items:
          type: integer
    betaFilterIdLess:
      in: query
      name: 'id:less'
      schema:
        type: array
        items:
          type: integer
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Products | modify | `store_v2_products` |
        |  Products | read-only | `store_v2_products_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

