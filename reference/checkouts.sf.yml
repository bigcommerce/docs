openapi: '3.0.1'
info:
  title: Storefront Checkouts
  description: |-
    Manage checkout operations and data on BigCommerce-hosted storefronts. To work with headless storefronts, use the [GraphQL Storefront API](/graphql-storefront/reference).
    
    The REST Storefront API uses [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers for authentication, and therefore has no required scopes. You do not need to send any BigCommerce-specific tokens with your requests to these endpoints.
        
    For info about authenticating BigCommerce APIs, see [Authentication and Example Requests](/docs/start/authentication#same-origin-cors-authentication).
  version: ''
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://{store_domain}/api/storefront'
    variables:
      store_domain:
        default: your_store.example.com
        description: 'The [URL authority](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL#authority) of the storefront.'
tags:
  - name: Checkout
  - name: Checkout Billing Address
  - name: Checkout Cart Items
  - name: Checkout Consignments
  - name: Checkout Coupons
  - name: Checkout Gift Certificates
  - name: Checkout Spam Protection
  - name: Checkout Store Credit
paths:
  '/checkouts/{checkoutId}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/CheckoutIdPath'
    get:
      tags:
        - Checkout
      summary: Get a Checkout
      description: |-
        Returns a *Checkout*.

        The cart ID and checkout ID are the same.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: getCheckout
      parameters:
        - $ref: '#/components/parameters/IncludeShippingDefault'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example: 
                $ref: '#/components/examples/CheckoutResp'
        '400':
          description: When a problem arises, returns a generic response.
          content:
            application/json:
              schema:
                title: Checkout Error
                type: object
                properties:
                  errors:
                    type: array
                    description: ''
                    items:
                      title: Error Inner
                      type: object
                      properties:
                        status:
                          type: integer
                          description: ''
                          format: int32
                        title:
                          type: string
                          description: ''
                        type:
                          type: string
                          description: ''
                        detail:
                          type: string
                          description: ''
    put:
      tags:
        - Checkout
      summary: Update Customer Messages
      description: |-
        Updates *Checkout* customer messages.

        **Limits**

        * 2000 character limit

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: updateCheckout
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkout_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example: 
                $ref: '#/components/examples/CheckoutResp'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/carts/{cartId}/items/{itemId}':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/CartIdPath'
      - $ref: '#/components/parameters/ItemIdPath'
      - $ref: '#/components/parameters/Accept'
    put:
      tags:
        - Checkout Cart Items
      summary: Update a Line Item
      description: |-
        Updates a *Checkout Line Item*. Updates an existing, single line item in the cart.

        If a variant needs to be changed or updated, the product will need to be removed and re-added to the cart with the correct variants using the [Add Cart Line Items](/docs/rest-storefront/carts/cart-items#add-cart-line-items) endpoint or the [GraphQL Storefront API](/docs/storefront/cart-checkout/guide/graphql-storefront).

        > #### Notes
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
        > * Please note that this API endpoint is not concurrent safe, meaning multiple simultaneous requests could result in unexpected and inconsistent results.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: updateCheckoutLineItem
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart_Put'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Checkout Cart Items
      summary: Delete a Line Item
      description: |-
        Deletes a *Line Item* from the *Cart*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: deleteCheckoutLineItem
      responses:
        '200':
          description: 'NOTE: Discounted line items are re-evaluated on cart actions and may be automatically added back to your cart with a new line item ID to satisfy promotional requirements.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
  '/checkouts/{checkoutId}/billing-address':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      tags:
        - Checkout Billing Address
      summary: Add Checkout Billing Address
      description: |-
        Adds a billing address to an existing *Checkout*.

        **Required Fields**
        * country_code


        > #### Note
        > * The `email` property is only required if the customer is a guest shopper. Otherwise, it is set automatically.
        > * Sending `email` property as a payload in POST request triggers the abandoned cart notification process.
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: addCheckoutBillingAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAddressRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
        '403':
          description: The email trying to be set for the guest is associated with an account. The customer must sign in.
          content: {}
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
        '429':
          description: Unable to determine if provided email is associated with an account. The customer must sign in.
          content: {}
  '/checkouts/{checkoutId}/billing-address/{addressId}':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/AddressIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    put:
      tags:
        - Checkout Billing Address
      summary: Update Checkout Billing Address
      description: |-
        Updates an existing billing address on *Checkout*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint. 
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: updateCheckoutBillingAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAddressRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
        '403':
          description: The email trying to be set for the guest is associated with an account. The customer must sign in.
          content: {}
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
        '429':
          description: Unable to determine if provided email is associated with an account. The customer must sign in.
          content: {}
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/consignments':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/IncludeShippingDefault'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      tags:
        - Checkout Consignments
      summary: Create a Consignment
      description: |
        Adds a new *Consignment* to *Checkout*.

        Perform the following two steps to define the fulfillment of the items in the cart.
        ### For **shipping** consignments:
          1. Add a new Consignment to Checkout.
              * Send a `POST` request to `/consignments` with each shipping address, line item IDs, and quantities. Each address can have its own line item IDs.
              * Provide a full valid customer address before placing the order. If provided, the order placement will succeed. 
              * As part of the request URL make sure to add `include=consignments.availableShippingOptions` to return the available shipping options based on the items, the address, and the shipping location. This will return `availableShippingOptions` in the response.

              * Required Fields:
                * `shipping_address` (deprecated) or `address`
                * `lineItems`
              
          2. Update the Consignment with Shipping Options using the [REST Storefront API](/docs/rest-storefront/checkouts/checkout-consignments#update-a-consignment), the [REST Management API](/docs/rest-management/checkouts/checkout-consignments#update-checkout-consignment) or the [GraphQL Storefront API](/docs/storefront/cart-checkout/guide/graphql-storefront).
                
        ### For **pickup** consignments:
          1. Create a new consignment object. 
              - Send a `POST` request to `/consignments` with line item IDs and quantities.
              - Provide a `pickupMethodId`. This is the `id` of the Pickup Method provided in the response body of the Storefront Pickup Options API.
              - Required Fields:
                  * `pickupOption`
                  * `lineItems`

        To learn more about creating a Checkout Consignment, see the [Carts and Checkouts Tutorial](/docs/storefront/cart-checkout/guide/rest-storefront).

        > #### Notes
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
        > * Please note that this API endpoint is not concurrent safe, meaning multiple simultaneous requests could result in unexpected and inconsistent results.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: createCheckoutConsignment
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateConsignmentRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
  '/checkouts/{checkoutId}/consignments/{consignmentId}':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/ConsignmentIdPath'
      - $ref: '#/components/parameters/Accept'
    put:
      tags:
        - Checkout Consignments
      summary: Update a Consignment
      description: |-
        Updates an existing consignment. An update is either one of the following:

        1. Updates the consignment address and/or line items.
        2. Selects a specific fulfillment option.

        ### Update the consignment address and line items
        For this type of update, the payload is the same as when creating a new consignment.         Update each *Consignment* `shippingOptionId` (shipping address and line items) with the `availableShippingOption > id` from the POST `/consignment` response. 
        
        **Note:**
        Updating a consignment could invalidate the value for `selectedShippingOption` and `selectedPickupOption`.
        
        ### Select a specific fulfillment option
        Before placing an order, each consignment must have a `selectedShippingOption` or a `selectedPickupOption`.
        
        If the consignment already has a pick-up option selected and a shipping option is provided, the pick-up option will be deselected and the shipping option will be selected instead (and vice versa). The `PUT` request will fail if it contains a shipping option ID and a pickup option ID.
        
        Required Fields:
        * `shippingOptionId` or `pickupOptionId`
        * `lineItems`

        To learn more about creating a Checkout Consignment see [Checkout Consignment API](/docs/storefront/cart-checkout/guide/consignments).

        > #### Notes
        > * You cannot pass both an `address` and a `shippingOptionId` because the shipping option may not be available for the new address 
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.  
        > * Please note that this API endpoint is not concurrent safe, meaning multiple simultaneous requests could result in unexpected and inconsistent results.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: updateCheckoutConsignment
      parameters:
        - $ref: '#/components/parameters/IncludeShippingPickupDefault'
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUpdateConsignment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Checkout Consignments
      summary: Delete a Consignment
      description: |-
        Removes an existing *Consignment* from *Checkout*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: deleteCheckoutConsignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConsignmentRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
  '/checkouts/{checkoutId}/gift-certificates':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      tags:
        - Checkout Gift Certificates
      summary: Add Gift Certificate to Checkout
      description: |-
        Adds a *Gift Certificate Code* to *Checkout*.

        > #### Note
        > * *Gift Certificates* are treated as a payment methods.
        > * You are not able to purchase a gift certificate with a gift certificate.
        > * The rate limit is 20/hour (only for unique gift-certificate codes).
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint. 
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: addCheckoutGiftCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
        '404':
          description: Gift certificate code not found
          content:
            application/json:
              schema:
                type: object
                properties: {}
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/gift-certificates/{giftCertificateCode}':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/GiftCertificateCodePath'
      - $ref: '#/components/parameters/Accept'
    delete:
      tags:
        - Checkout Gift Certificates
      summary: Delete Gift Certificate
      description: |-
        Deletes an existing *Gift Certificate*.

        This removes the *Gift Certificate* payment method.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.  
      operationId: deleteCheckoutGiftCertificate
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
  '/checkouts/{checkoutId}/coupons':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      tags:
        - Checkout Coupons
      summary: Add Coupon to Checkout
      description: |-
        Adds a *Coupon Code* to *Checkout*.

        **Required Fields**
        * couponCode

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: addCheckoutCoupon
      requestBody:
        content:
          application/json:
            schema:
              title: Coupon Code Request
              type: object
              properties:
                couponCode:
                  type: string
                  description: ''
                version:
                  type: integer
                  description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
                  example: 1
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example:
                $ref: '#/components/examples/CheckoutResp'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
      x-codegen-request-body-name: body
  '/checkouts/{checkoutId}/coupons/{couponCode}':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/CouponCodePath'
      - $ref: '#/components/parameters/Accept'
    delete:
      tags:
        - Checkout Coupons
      summary: Delete Checkout Coupon
      description: |
        Deletes a *Coupon Code* from *Checkout*.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: deleteCheckoutCoupon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCouponCodeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
              example: 
                $ref: '#/components/examples/CheckoutResp'
        '409':
          $ref: '#/components/responses/CartConflictErrorResponse'
  '/checkouts/{checkoutId}/store-credit':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/Accept'
    post:
      tags:
        - Checkout Store Credit
      summary: Add Store Credit
      description: |-
        Applies any available store credit to a checkout. As on the storefront, all available store credit will be used (up to the value of the order) and no amount need be specified.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: addCheckoutStoreCredit
      parameters:
        - $ref: '#/components/parameters/ContentType'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
    delete:
      tags:
        - Checkout Store Credit
      summary: Remove Store Credit
      description: |-
        Removes store credit from a checkout.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: removeCheckoutStoreCredit
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
  '/checkouts/{checkoutId}/spam-protection':
    parameters:
      - $ref: '#/components/parameters/CheckoutIdPath'
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/ContentType'
    post:
      tags:
        - Checkout Spam Protection
      summary: Checkout Spam Protection
      description: |-
        Verifies if checkout is created by human.

        > #### Note
        > * Substitute your storefront domain for `yourstore.example.com`. 
        > * The Send a Test Request feature is not currently supported for this endpoint.
        > * This endpoint requires using Stencil CLI, a local session, and a csrf token to work.
      operationId: checkoutSpamProtection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpamProtectionRequest'
        required: true
      responses:
        '200':
          description: Returns Checkout Object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout_Full'
      deprecated: false
      x-codegen-request-body-name: body
components:
  examples:
    CheckoutResp:
      value:
        billingAddress:
          address1: 123 Main Street
          address2: ''
          city: Austin
          company: ''
          country: United States
          countryCode: US
          customFields:
            - fieldId: field_25
              fieldValue: Leave in backyard
          email: janedoe@example.com
          firstName: Jane
          id: 5ba11e4a10fb5
          lastName: Doe
          phone: '1234567890'
          postalCode: '78751'
          stateOrProvince: Texas
          stateOrProvinceCode: TX
        cart:
          baseAmount: 119.93
          cartAmount: 112.93
          createdTime: '2018-09-18T15:48:26+00:00'
          coupons:
            - id: 1
              code: S2549JM0Y
              displayName: $5.00 off the order total
              couponType: per_total_discount
              discountedAmount: 5
          currency:
            name: US Dollars
            code: USD
            symbol: $
            decimalPlaces: 2          
          customerId: 11
          discountAmount: 0
          discounts:
            - id: 1
              discountedAmount: 2.59
            - id: 2
              discountedAmount: 1.06
            - id: 3
              discountedAmount: 2.12
            - id: 4
              discountedAmount: 0.8
            - id: 5
              discountedAmount: 0.43
          email: janedoe@example.com
          id: b6fbd994-61a8-4f25-9167-6ec10489c448
          isTaxIncluded: false
          lineItems:
            physicalItems: 
              - addedByPromotion: false
                brand: OFS
                categoryNames: ["Essentials", "Just arrived"]
                comparisonPrice: 0
                couponAmount: 0
                discountAmount: 2
                discounts:
                  - id: 1
                    discountedAmount: 0.59
                  - id: 2
                    discountedAmount: 2
                extendedComparisonPrice: 0
                extendedListPrice: 15.99
                extendedSalePrice: 13.99
                giftWrapping: {}
                id: 69791a88-85c9-4c19-8042-e537621e8a55
                imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.330.500.jpg?c=2'
                isShippingRequired: true
                isTaxable: true
                listPrice: 15.99
                name: Canvas Laundry Cart
                options: 
                - name: "Color"
                  nameId: 1
                  value: "Red" 
                  valueId: "2"
                originalPrice: 17.99
                productId: 184
                parentId: ''
                quantity: 1
                variantId: 364
                salePrice: 13.99
                sku: SMA-RED
                url: 'https://{store_domain}/all/canvas-laundry-cart/'
              - addedByPromotion: false
                brand: OFS
                categoryNames: ["Essentials", "Just arrived"]
                comparisonPrice: 0
                extendedComparisonPrice: 0
                extendedListPrice: 25
                extendedSalePrice: 25
                couponAmount: 0
                discountAmount: 0
                discounts:
                  - id: 1
                    discountedAmount: 1.06
                id: ba2c619d-e6b4-48c2-8809-d88e424ed450
                imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.330.500.jpg?c=2'
                isShippingRequired: true
                isTaxable: true
                listPrice: 25
                name: Ceramic Measuring Spoons
                originalPrice: 25
                parentId: ''
                productId: 170 
                quantity: 1
                salePrice: 25
                sku: ''
                url: 'https://{store_domain}/all/ceramic-measuring-spoons/'
                variantId: 341                
                options: 
                - name: "Color"
                  nameId: 1
                  value: "Red" 
                  valueId: "2"
                giftWrapping: {}
              - addedByPromotion: false
                brand: OFS
                categoryNames: ["Essentials", "Just arrived"]
                comparisonPrice: 0
                couponAmount: 0
                discountAmount: 0
                discounts:
                  - id: 1
                    discountedAmount: 2.12
                extendedComparisonPrice: 0
                extendedListPrice: 49.99
                extendedSalePrice: 49.99
                giftWrapping: {}
                id: c72d6651-978d-45e5-881b-c2bb5f7ff1d5
                imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
                isShippingRequired: true
                isTaxable: true
                listPrice: 49.99
                name: Chambray Towel
                options: 
                - name: "Color"
                  nameId: 1
                  value: "Red" 
                  valueId: "2"
                originalPrice: 49.99
                parentId: ''
                productId: 158
                salePrice: 49.99
                sku: SKU-A0C8A203
                quantity: 1
                url: 'https://{store_domain}/all/chambray-towel/'
                variantId: 376
            digitalItems:
              - addedByPromotion: false
                brand: OFS
                categoryNames: ["Essentials", "Just arrived"]
                comparisonPrice: 0
                couponAmount: 0
                discountAmount: 0
                discounts:
                  - id: 1
                    discountedAmount: 0.8
                extendedComparisonPrice: 0
                extendedListPrice: 18.95
                extendedSalePrice: 18.95
                id: 6477a4a1-02cf-4287-8bf2-fd043bdd5234
                imageUrl: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/189/images/465/gather_1024x1024__17195__82620.1534344540.330.500.jpg?c=2'
                isShippingRequired: false
                isTaxable: true
                listPrice: 18.95
                name: Gather Journal Issue 7 - Digital
                options: 
                - name: "Color"
                  nameId: 1
                  value: "Red" 
                  valueId: "2"
                originalPrice: 18.95
                parentId: ''
                productId: 189
                quantity: 1
                salePrice: 18.95
                type: digital
                variantId: 360
                url: 'https://{store_domain}/all/gather-journal-issue-7/'        
            giftCertificates:
              - amount: 10
                id: 871f1f56-4c88-43c3-a6e5-0a647d83d6ac
                message: Thank you!
                name: $10.00 Gift Certificate
                recipient:
                  name: John Doe
                  email: johndoe@example.com
                sender:
                  name: Jane Doe
                  email: janedoe@example.com
                taxable: false
                theme: Celebration
                type: giftCertificate
            customItems: []
          locale: "en"
          updatedTime: '2018-09-18T16:59:45+00:00'
          version: 1
        channelId: 1
        createdTime: '2018-09-18T15:48:26+00:00'
        consignments:
          - address:
              address1: 123 Main Street
              address2: ''
              city: Austin
              company: ''
              country: United States
              countryCode: US
              customFields:
                - fieldId: field_25
                  fieldValue: Leave in backyard
              email: janedoe@example.com
              firstName: Jane
              lastName: Doe
              phone: '1234567890'
              postalCode: '78751'
              stateOrProvince: Texas
              stateOrProvinceCode: TX
            availableShippingOptions:
            - additionalDescription: Fragile items
              cost: 8
              description: Ship by Weight
              id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
              imageUrl: ''
              transitTime: '' 
              type: shipping_byweight       
            couponDiscounts: []
            discounts: []
            handlingCost: 0
            id: 5ba121929619b
            lineItemIds:
              - 69791a88-85c9-4c19-8042-e537621e8a55
              - ba2c619d-e6b4-48c2-8809-d88e424ed450
              - c72d6651-978d-45e5-881b-c2bb5f7ff1d5
            selectedShippingOption:
              additionalDescription: Fragile items
              id: bb3c818f-17ce-46fe-9475-65933095da0d
              type: shipping_upsready
              description: UPS® (UPS Next Day Air®)
              imageUrl: ''
              cost: 69.94
              transitTime: 1 business day
            shippingCost: 69.94
        coupons:
          - code: S2549JM0Y
            couponType: 2
            discountedAmount: 5
            displayName: $5.00 off the order total
            id: 1
        fees:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            type: custom_fee
            name: AAINS
            displayName: Package Protection Insurance
            cost: 12.02
            source: AA
            taxClassId: 12
        customer:
          addresses: [{}]
          customerGroup:
            id: 1
            name: Wholesale customers
          email: "string" 
          firstName: "string" 
          fullName: "string" 
          id: 1 
          isGuest: false 
          lastName: "string" 
          shouldEncourageSignIn: false 
          storeCredit: 1.00
        customerMessage: 'Thank you, BigCommerce'
        giftCertificates:
        - balance: 4.00
          code: '1234ABC'
          purchaseDate: "string"
          remaining: 2.00
          used: 5.00
        giftWrappingCostTotal: 0
        grandTotal: 211.49
        handlingCostTotal: 0
        id: b6fbd994-61a8-4f25-9167-6ec10489c448
        isStoreCreditApplied: false
        orderId: null
        outstandingBalance: 0
        payments: [{}]
        promotions: []
        shippingCostBeforeDiscount: 69.94
        shippingCostTotal: 69.94
        shouldExecuteSpamCheck: false
        subtotal: 117.93
        taxTotal: 28.62
        taxes:
          - name: Store Tax
            amount: 28.62
        updatedTime: '2018-09-18T16:59:45+00:00'
        version: 1
  schemas:
    SpamProtectionRequest:
      title: SpamProtectionRequest
      type: object
      properties:
        token:
          type: string
    checkout_Full:
      title: checkout_Full
      type: object
      properties:
        billingAddress:
          $ref: '#/components/schemas/address_Base'
        cart:
          $ref: '#/components/schemas/checkoutCart'
        channelId:
          type: integer
          description: Channel ID.
        consignments:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/consignment_Full'
        coupons:
          type: array
          description: Coupons applied at the checkout level.
          items:
            $ref: '#/components/schemas/CheckoutCoupon'
        fees:
          type: array
          description: Fees applied at the checkout level.
          items:
            $ref: '#/components/schemas/CheckoutFee'
        createdTime:
          type: string
          description: Time when the cart was created.
        customer: 
          $ref: '#/components/schemas/Customer'
        customerMessage:
          type: string
          description: Shopperʼs message provided as details for the order to be created from this cart
        giftCertificates:
          type: array
          description: Applied gift certificate (as a payment method).
          items:
            $ref: '#/components/schemas/checkoutGiftCertificates'
        giftWrappingCostTotal:
          type: number
          description: Gift wrapping cost for all items, including or excluding tax.
        grandTotal:
          type: number
          description: The total payable amount, before applying any store credit or gift certificate.
          format: float
        handlingCostTotal:
          type: number
          description: Handling cost for all consignments including or excluding tax.
          format: float
        id:
          type: string
          description: ''
          format: uuid
        isStoreCreditApplied:
          type: boolean
          description: |
            `true` value indicates StoreCredit has been applied.
        orderId:
          type: string
          description: ''
          nullable: true
        outstandingBalance:
          type: number
          description: |
            `grandTotal` subtract the store-credit amount
        payments: 
          type: array
          items:
            type: object
            properties:
              providerId:
                description: Payment provider ID.
                type: string
              gatewayId:
                description: Payment gateway ID.
                type: string 
                nullable: true 
              providerType: 
                description: Type of payment provider.
                type: string 
                enum:
                  - PAYMENT_TYPE_HOSTED
              detail: 
                type: array
                description: Details regarding which checkout steps a shopper has completed.
                items:
                  type: string
                  enum: 
                  - FINALIZE
                  - INITIALIZE
                  - ACKNOWLEDGE
        promotions: 
          type: array
          items: 
            type: object 
            properties: 
              type: 
                type: string 
                enum: 
                - promotion
                - upsell
                - eligible 
                - applied
              text: 
                type: string
                description: Text displayed on the storefront for the promotion.
        shippingCostBeforeDiscount:
          type: number
          description: The shipping cost before discounts are applied.
        shippingCostTotal:
          type: number
          description: Shipping cost before any discounts are applied.
          format: float
        shouldExecuteSpamCheck: 
          type: boolean
        subtotal:
          type: number
          description: Subtotal of the checkout before applying item-level discounts. Tax inclusive based on the store settings.
          format: float
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/checkoutTax'
        taxTotal:
          type: number
          description: ''
          format: float
        updatedTime:
          type: string
          description: Time when the cart was last updated.
        version:
          type: integer
          description: The current version of the checkout increments with each successful update. You can use it to enable optimistic concurrency control for subsequent updates.
          example: 1
      description: ''
    CartCoupon:
      title: Cart Coupon
      required:
        - code
      type: object
      properties:
        id:
          type: integer
          description: The coupon ID.
        code:
          type: string
          description: the coupon code
        displayName:
          type: string
          description: The coupon title based on different types provided in control panel section.
        couponType:
          type: string
          description: Key name to identify the type of coupon.
          enum:
            - per_item_discount
            - percentage_discount
            - per_total_discount
            - shipping_discount
            - free_shipping
            - promotion
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: double
    CheckoutCoupon:
      title: Checkout Coupon
      required:
        - code
      type: object
      properties:
        id:
          type: integer
          description: The coupon ID.
        code:
          type: string
          description: the coupon code
        displayName:
          type: string
          description: The coupon title based on different types provided in control panel section.
        couponType:
          type: integer
          description: |-
            |Type `int`|Type Name|
            |-|-|
            |`0`|`per_item_discount`|
            |`1`|`percentage_discount`|
            |`2`|`per_total_discount`|
            |`3`|`shipping_discount`|
            |`4`|`free_shipping`|
            |`5`|`promotion`|
        discountedAmount:
          type: number
          description: The discounted amount applied within a given context.
          format: double
    CheckoutFee:
      title: Checkout Fee
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The fee ID.
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        type:
          type: string
          description: The type of the fee.
          enum:
            - custom_fee
        name:
          type: string
          description: Name of the fee.
          example: AAINS
        displayName:
          type: string
          description: Display name of the fee targeting customers/shoppers.
          example: Package Protection Insurance
        cost:
          type: number
          description: Cost of the fee (include or exclude tax dependent on tax settings, same as shipping cost).
          example: 10.0
        source:
          type: string
          description: The source of the request.
          example: AA
        taxClassId:
          type: integer
          description: The tax class ID.
          example: 1
      x-internal: false
    Customer:
      type: object
      description: Customer details.
      properties:
        addresses: 
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                description: ''
              firstName: 
                type: string 
                description: ''
              lastName:
                type: string
                description: ''
              company:
                type: string
                description: ''
              address1:
                type: string
                description: ''
              address2:
                type: string
                description: ''
              city:
                type: string
                description: ''
              stateOrProvince:
                type: string
                description: State or province.
              stateOrProvinceCode:
                type: string
                description: ''
              countryCode:
                type: string
                description: '[ISO 3166-1 alpha-2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for the country.'
              postalCode:
                type: string
                description: ''
              phone:
                pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
                type: string
                description: ''
              type:
                type: string
                description: 'Address type.'
              customFields:
                type: array
                items:
                  $ref: '#/components/schemas/customFields'              
        customerGroup: 
          type: object
          properties:
            id: 
              type: integer
              description: ID of the customer group.
            name: 
              type: string
              description: Name of the customer group.
        email: 
          type: string
          description: Customer email.
        firstName:
          type: string
          description: Customer's first name.
        fullName:
          type: string
          description: Customer's full name.
        id:
          type: integer
          description: Customer ID.
        isGuest: 
          type: boolean 
          description: Whether the shopper is a guest or a logged-in customer. 
        lastName:
          type: string
          description: Customer's last name.
        shouldEncourageSignIn:
          type: boolean
        storeCredit: 
          type: number
          description: The amount of store credit a customer has.  
    contactEntity:
      title: contactEntity
      type: object
      properties:
        name:
          type: string
          description: ''
        email:
          type: string
          description: ''
      description: Model for sender and receiver objects.
    address_Full:
      title: address_Full
      description: ''
      allOf:
        - $ref: '#/components/schemas/address_Base'
        - type: object
          properties:
            id:
              type: string
              description: ''
            shouldSaveAddress:
              type: boolean
              description: Indicates whether we should add this address to the customer address book.
    address_Base:
      title: address_Base
      required:
        - countryCode
      type: object
      properties:
        address1:
          type: string
          description: ''
        address2:
          type: string
          description: ''
        city:
          type: string
          description: ''
        company:
          type: string
          description: ''
        country:
          type: string
          description: Country name.
        countryCode:
          type: string
          description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customFields'
        email:
          type: string
          description: ''
        firstName:
          type: string
          description: ''
        lastName:
          type: string
          description: ''
        stateOrProvince:
          type: string
          description: Represents state or province.
        stateOrProvinceCode:
          type: string
          description: ''
        phone:
          pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
          type: string
          description: ''
        postalCode:
          type: string
          description: ''
    customFields:
      title: customFields
      type: object
      properties:
        fieldId:
          type: string
        fieldValue:
          type: string
          description: This can also be an array for fields that need to support list of values; for example, a set of checkboxes. When doing a PUT or POST to the `fieldValue` with a pick list, the input must be a number. The response will be a string.
      description: 'When doing a PUT or POST to the `fieldValue` with a pick list, the input must be a number. The response will be a string.'
    BillingAddressRequest:
      title: Billing address request
      allOf:
        - $ref: '#/components/schemas/address_Base'
        - type: object
          properties:
            version:
              type: integer
              description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
              example: 1
    consignment_Full:
      title: consignment_Full
      type: object
      properties:
        address:
          $ref: '#/components/schemas/address_Full'
        availableShippingOptions:
          type: array
          description: 'This is available only when "include=consignments.availableShippingOptions" is present in the URL.'
          items:
            $ref: '#/components/schemas/consignmentAvailableShippingOptions'
        couponDiscounts:
          type: array
          description: List of consignment discounts applied through coupons.
          items:
            title: Consignment Coupon Discount
            type: object
            properties:
              amount:
                type: number
                description: ''
                format: double
              code:
                type: string
                description: Coupon code that applied this discount.
        discounts:
          type: array
          description: List of consignment discounts applied through cart level discounts.
          items:
            title: Consignment Discount
            type: object
            properties:
              id:
                type: string
                description: Discount rule ID that applied this discount.
        handlingCost:
          type: number
          description: The handling cost of shipping for this consignment.
          format: double
        id:
          type: string
          description: ''
        selectedPickupOption:
          $ref: '#/components/schemas/PickupOption'
        selectedShippingOption:
          title: Selected Shipping Option
          type: object
          properties:
            description:
              type: string
              description: Read only.
              readOnly: true
            id:
              type: string
              description: ''
            type:
              type: string
              description: Specifies the type of shipping option; for example, flat rate, UPS, etc.
            imageUrl:
              type: string
              description: ''
            cost:
              type: number
              description: ''
              format: double
            transitTime:
              type: string
              description: An estimate of the arrival time.
            additionalDescription:
              type: string
              description: Read only. Field used for Shipping Provider API.
              readOnly: true
        shippingAddress:
          type: object
          properties: {}
          deprecated: true
          description: Use the `address` field instead.
        shippingCost:
          type: number
          description: The shipping cost for this consignment.
          format: double
        lineItemIds:
          type: array
          description: ''
          items:
            type: string
      description: This allows us to have multiple shipping addresses. Where there is only one shipping address, this array will contain only one value, with all the items.
    consignmentAvailableShippingOptions:
      title: consignmentAvailableShippingOptions
      allOf:
        - $ref: '#/components/schemas/consignmentShippingOption_Base'
        - type: object
          properties:
            isRecommended:
              type: boolean
              description: Is this shipping method the recommended shipping option or not.
            additionalDescription:
              type: string
    checkoutTax:
      title: checkoutTax
      type: object
      properties:
        name:
          type: string
          description: Name of the tax.
        amount:
          type: number
          description: ''
          format: double
    checkout_Put:
      title: checkout_Put
      type: object
      properties:
        customerMessage:
          type: string
          description: ''
        version:
          type: integer
          description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
          example: 1
    cartLineItemPut:
      title: cartLineItemPut
      type: object
      properties:
        quantity:
          type: number
          description: ''
          format: double
        productId:
          type: number
          description: ''
          format: double
        variantId:
          type: number
          description: ''
          format: double
        giftWrapping:
          $ref: '#/components/schemas/cartLineItemGiftWrapping_Put'
    cartLineItemGiftCertificate_Put:
      title: cartLineItemGiftCertificate_Put
      required:
        - amount
        - quantity
        - recipient
        - sender
        - theme
      type: object
      properties:
        theme:
          type: string
          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
        amount:
          maximum: 1000
          minimum: 1
          type: number
          description: ''
          format: double
        sender:
          $ref: '#/components/schemas/contactEntity'
        recipient:
          $ref: '#/components/schemas/contactEntity'
        message:
          type: string
          description: Message shown to recipient, as provided by sender.
        quantity:
          type: number
          description: ''
          format: double
    cartLineItemGiftWrapping_Put:
      title: Gift Wrapping Request Data
      required:
            - wrapTogether
            - wrapDetails
      type: object
      nullable: true
      description: if passing null, it will remove the current gift wrapping for the item
      properties:
        wrapTogether:
          type: boolean
          description: Boolean value that specifies whether items whether items should be wrapped together or wrapped individually.
          example: true
        wrapDetails:
          type: array
          description: |-
            Details for the gift wrapping option selected. This can be specified for each line item or together based on wrapTogether value.
            If wrapTogether is false, each element in the wrapDetails array determines each item's specific wrapping. 
            (e.g if this line item has 6 quantity, you can pass at maximum 6 elements for the array to spefified each one's wrapping)  
            If wrapTogether is true, we will only use 1st element in the wrapDetails array to determine what to be wrapped
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: integer
                description: Identifier of the gift wrapping option selected.
                example: 0
              message:
                type: string
                description: Custom gift message.
                example: Happy Birthday
    CreateConsignmentRequest:
      title: Create Consignment Request
      type: object
      properties:
        shippingAddress:
          type: object
          properties: {}
          x-deprecated: true
        address:
          title: Address Properties
          required:
            - countryCode
          type: object
          properties:
            firstName:
              type: string
              description: ''
            lastName:
              type: string
              description: ''
            email:
              type: string
              description: ''
            company:
              type: string
              description: ''
            address1:
              type: string
              description: ''
            address2:
              type: string
              description: ''
            city:
              type: string
              description: ''
            stateOrProvince:
              type: string
              description: Represents state or province.
            stateOrProvinceCode:
              type: string
              description: ''
            countryCode:
              type: string
              description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
            postalCode:
              type: string
              description: ''
            phone:
              pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
              type: string
              description: ''
            customFields:
              type: array
              items:
                type: object
                properties:
                  fieldId:
                    type: string
                  fieldValue:
                    type: string
            shouldSaveAddress:
              type: boolean
              description: Indicates whether we should add this address to the customer address book.
        lineItems:
          type: array
          description: ''
          items:
            title: Consignment Line Item
            required:
              - itemId
              - quantity
            type: object
            properties:
              itemId:
                type: string
                description: The ID of a line item.
              quantity:
                type: integer
                description: The quantity of the line item.
                format: int32
        shippingOptionId:
          type: string
          description: ''
        pickupOption:
          type: object
          properties:
            pickupMethodId:
              type: integer
        version:
          type: integer
          description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
          example: 1
    DeleteCouponCodeRequest:
      title: Delete Coupon Request
      type: object
      properties:
        version:
          type: integer
          description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
          example: 1
    DeleteConsignmentRequest:
      title: Delete Consignment Request
      type: object
      properties:
        version:
          type: integer
          description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
          example: 1
    GiftCertificateRequest:
      title: Gift Certificate Request
      type: object
      properties:
        giftCertificateCode:
          type: string
          description: ''
    cart_Put:
      title: cart_Put
      type: object
      properties:
        lineItem:
          $ref: '#/components/schemas/cartLineItemPut'
        giftCertificate:
          $ref: '#/components/schemas/cartLineItemGiftCertificate_Put'
    NewUpdateConsignment:
      title: Update Consignment Request
      type: object
      properties:
        shippingAddress:
          type: object
          properties: {}
          x-deprecated: true
        address:
          title: Address Properties
          required:
            - countryCode
          type: object
          properties:
            firstName:
              type: string
              description: ''
            lastName:
              type: string
              description: ''
            email:
              type: string
              description: ''
            company:
              type: string
              description: ''
            address1:
              type: string
              description: ''
            address2:
              type: string
              description: ''
            city:
              type: string
              description: ''
            stateOrProvince:
              type: string
              description: Represents state or province.
            stateOrProvinceCode:
              type: string
              description: ''
            countryCode:
              type: string
              description: 'ISO 3166-1 alpha-2 country code. (See: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
            postalCode:
              type: string
              description: ''
            phone:
              pattern: '^\+?[1-9]\d{1,14}(x\d{1-5})?$'
              type: string
              description: ''
            customFields:
              type: array
              items:
                type: object
                properties:
                  fieldId:
                    type: string
                  fieldValue:
                    type: string
            shouldSaveAddress:
              type: boolean
              description: Indicates whether we should add this address to the customer address book.
        lineItems:
          type: array
          description: ''
          items:
            title: Consignment Line Item
            required:
              - itemId
              - quantity
            type: object
            properties:
              itemId:
                type: string
                description: The ID of a line item.
              quantity:
                type: integer
                description: The quantity of a line item.
                format: int32
        shippingOptionId:
          type: string
          description: ''
        pickupOption:
          type: object
          properties:
            pickupMethodId:
              type: integer
        version:
          type: integer
          description: The cart version that you expect to apply the updates. If the provided version doesn't match the current cart version, you will receive a conflict error. This field is optional; if not provided, optimistic concurrency control will not apply.
          example: 1
      description: One or more of these three fields is mandatory. You can update address and line items in one request. You have to update shipping option ID or pickup option ID in a separate request since changing the address or line items can invalidate the previously available shipping options.
    checkoutCart:
      title: checkoutCart
      type: object
      properties:
        baseAmount:
          type: number
          description: Cost of cart’s contents, before applying discounts.
          format: double
        cartAmount:
          type: number
          description: Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes, where applicable.
          format: double
        createdTime:
          type: string
          description: Time when the cart was created.
        coupons:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/CartCoupon'
        currency:
          title: Currency
          type: object
          properties:
            code:
              type: string
              description: 'ISO-4217 currency code. (See: https://www.iso.org/iso-4217-currency-codes.html.)'
            decimalPlaces:
              type: number
              description: The number of decimal places for the currency. For example, the USD currency has two decimal places.
              format: double
            name:
              type: string
              description: The currency name.
            symbol:
              type: string
              description: The currency symbol.
          description: The currency in which prices are displayed; the store default currency.
        customerId:
          type: integer
          description: ID of the customer to which the cart belongs.
          format: int32
        discountAmount:
          type: number
          description: Order-based discounted amount only - Excludes coupon discounts and product-based discounts.
          format: double
        discounts:
          type: array
          description: ''
          items:
            title: Applied Discount
            type: object
            properties:
              id:
                type: integer
                description: Discount ID.
              discountedAmount:
                type: number
                description: The discounted amount applied within a given context.
                format: double
        email:
          type: string
          description: The cartʼs email. This is the same email that is used in the billing address.
        id:
          type: string
          description: Cart ID, provided after creating a cart with a POST.
          format: uuid
        isTaxIncluded:
          type: boolean
          description: Boolean representing whether tax information is included.
        lineItems:
          type: object
          description: ''
          title: Line Items
          required:
            - digitalItems
            - physicalItems
          properties:
            customItems:
                type: array
                items:
                  title: Item Custom
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID of the custom item.
                    listPrice:
                      type: string
                      description: The net item price before discounts and coupons. BigCommerce derives an item's list price from the product default price or, if applicable, the sale price configured in the admin panel.
                    name:
                      type: string
                      description: Item name.
                    quantity:
                      type: string
                    sku:
                      type: string
                      description: Custom item SKU.
                  description: |-
                    Add a custom item to the shoppers cart.
                    * Custom items are not added to the catalog.
                    * The price should be set to match the store settings for taxes.
            digitalItems:
              type: array
              description: ''
              items:
                $ref: '#/components/schemas/lineItemPhysicalDigital'
            giftCertificates:
              type: array
              description: ''
              items:
                title: Item Gift Certificate
                required:
                  - amount
                  - recipient
                  - sender
                  - theme
                type: object
                properties:
                  amount:
                    type: number
                    description: 'Value must be between $1.00 and $1,000.00.'
                    format: double
                  id:
                    type: string
                    description: Gift certificate identifier
                  message:
                    type: string
                    description: Limited to 200 characters.
                  name:
                    type: string
                    description: 'The name of the purchased gift certificate; for example, `$20 Gift Certificate`.'
                  recipient:
                    title: Contact Entity
                    type: object
                    properties:
                      name:
                        type: string
                        description: ''
                      email:
                        type: string
                        description: ''
                  sender:
                    title: Contact Entity
                    type: object
                    properties:
                      name:
                        type: string
                        description: ''
                      email:
                        type: string
                        description: ''
                  taxable:
                    type: boolean
                    description: ''
                  theme:
                    type: string
                    description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'
                  type:
                    type: string
                    description: Explicitly specifying the gift certificate type.
            physicalItems:
              type: array
              description: ''
              items:
                $ref: '#/components/schemas/lineItemPhysicalDigital'
        locale:
          type: string
          description: Shopper's locale.
          example: "en"
        updatedTime:
          type: string
          description: Time when the cart was last updated.
        version:
          type: integer 
          description: Cart version.
      description: A cart contains a collection of items, prices, discounts, etc. It does not contain customer-related data.
    lineItemPhysicalDigital: 
      type: object
      required:
        - quantity
      properties:
        addedByPromotion:
          type: boolean
          description: If the item was added automatically by a promotion, such as a coupon or buy one, get one.
        categoryNames: 
          type: array
          items: 
            type: string
        comparisonPrice:
          type: number
          description: The itemʼs comparison price
        couponAmount:
          type: number
          description: The total value of all coupons applied to this item.
          format: double
        discounts:
          type: array
          description: A list of discounts applied to this item, as an array of AppliedDiscount objects.
          items:
            title: Applied Discount
            type: object
            properties:
              id:
                type: integer
                description: Discount ID.
              discountedAmount:
                type: number
                description: The discounted amount applied within a given context.
                format: double
        discountAmount:
          type: number
          description: The total value of all discounts applied to this item (excluding coupon).
          format: double
        extendedComparisonPrice:
          type: number
          description: The itemʼs comparison price multiplied by the quantity.
        extendedListPrice:
          type: number
          description: The itemʼs list price multiplied by the quantity.
          format: double
        extendedSalePrice:
          type: number
          description: The itemʼs sale price multiplied by the quantity.
          format: double
        giftWrapping:
          title: Gift Wrapping
          type: object
          properties:
            name:
              type: string
              description: ''
            message:
              type: string
              description: ''
            amount:
              type: number
              description: ''
              format: double
        id:
          type: string
          description: The line-item ID.
        imageUrl:
          type: string
          description: A publicly-accessible URL for an image of this item.
        isMutable:
          type: boolean
          description: ''
        isShippingRequired:
          type: boolean
          description: Whether this item requires shipping to a physical address.
        isTaxable:
          type: boolean
          description: Whether the item is taxable.
        listPrice:
          type: number
          description: The net item price before discounts and coupons. BigCommerce derives an item's list price from the product default price or, if applicable, the sale price configured in the admin panel.
          format: double
        name:
          type: string
          description: The itemʼs product name.
        options: 
          type: array
          items: 
            type: object
            properties:
              name: 
                type: string
                description: Option name.
              nameId:
                type: integer
                description: Option ID.
              value: 
                type: string
                description: Option value.
              valueId:
                type: string
                description: Option value ID.
        originalPrice:
          type: number
          description: The item’s original price is the same as the product’s default price.
        parentId:
          type: string
          description: The product is part of a bundle such as a product pick list, then the parentId or the main product ID will populate.
        productId:
          type: integer
          description: ID of the product.
        sku:
          type: string
          description: SKU of the variant.
        quantity:
          type: number
          description: Quantity of this item.
          format: double
        salePrice:
          type: number
          description: The itemʼs price after all discounts are applied. The final price before tax calculation.
          format: double
        type:
          type: string
          description: the product type - physical or digital
        url:
          type: string
          description: The product URL.
        variantId:
          type: integer
          description: ID of the variant.
    checkoutGiftCertificates:
      title: checkoutGiftCertificates
      description: Applied gift certificate (as a payment method).
      type: object
      properties:
        balance:
          type: number
          description: ''
          format: double
        code:
          type: string
          description: ''
        purchaseDate:
          type: string
          description: ''
          format: date
        remaining:
          type: number
          description: ''
          format: double
        used:
          type: number
          description: ''
          format: double
    consignmentShippingOption_Base:
      title: consignmentShippingOption_Base
      type: object
      properties:
        cost:
          type: number
          description: ''
          format: double
        description:
          type: string
          description: Read only.
          readOnly: true
        id:
          type: string
          description: ''
        imageUrl:
          type: string
          description: ''
        transitTime:
          type: string
          description: An estimate of the arrival time.
        type:
          type: string
          description: Specifies the type of shipping option; for example, flat rate, UPS, etc.
    PickupOption:
      type: object
      title: Pickup Option
      description: An option that represents a location where customers can pick up items.
      properties:
        pickupMethodId:
          type: integer  
  responses:
    CartConflictErrorResponse:
      description: 'Cart conflict'
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              title:
                type: string
              type:
                type: string
          example:
            status: 409
            title: The request cannot be processed due to a possible conflict. Please review the changes and try again.
            type: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    CheckoutIdPath:
      name: checkoutId
      in: path
      required: true
      description: The ID of the subject checkout. Identical to the cart ID.
      schema:
        type: string
        format: uuid
    CartIdPath:
      name: cartId
      in: path
      required: true
      description: The ID of the cart associated with this checkout. Identical to the checkout ID.
      schema:
        type: string
        format: uuid
    ItemIdPath:
      name: itemId
      in: path
      required: true
      description: The ID of an item being purchased.
      schema:
        type: string
    AddressIdPath:
      name: addressId
      in: path
      required: true
      description: The ID of the subject address.
      schema:
        exclusiveMaximum: false
        exclusiveMinimum: false
        type: number
        format: double
    ConsignmentIdPath:
      name: consignmentId
      in: path
      required: true
      description: The ID of the subject consignment.
      schema:
        type: string
    GiftCertificateCodePath:
      name: giftCertificateCode
      in: path
      required: true
      description: The code of the subject gift certificate.
      schema:
        type: string
    CouponCodePath:
      name: couponCode
      in: path
      required: true
      description: The code of the subject coupon.
      schema:
        type: string
    IncludeShippingDefault:
      name: include
      in: query
      description: |-
        * `cart.lineItems.physicalItems.options` - physical options
        * `cart.lineItems.digitalItems.options` - digital options
        * `cart.lineItems.physicalItems.categoryNames` - physical categories
        * `cart.lineItems.digitalItems.categoryNames` - digital categories
        * `cart.lineItems.customItems.categoryNames` - custom categories
        * `customer` - customer
        * `customer.customerGroup` - customer group
        * `payments` - payments
        * `promotions` - promotions
        * `consignments.availableShippingOptions` - shipping options
        * `consignments.availablePickupOptions` - pickup options
      style: form
      explode: false
      schema:
        type: array
        default: 
          - consignments.availableShippingOptions
        items:
          type: string
          enum:
            - cart.lineItems.physicalItems.options
            - cart.lineItems.digitalItems.options
            - cart.lineItems.physicalItems.categoryNames
            - cart.lineItems.digitalItems.categoryNames
            - cart.lineItems.customItems.categoryNames
            - customer
            - customer.customerGroup
            - payments
            - promotions
            - consignments.availableShippingOptions
            - consignments.availablePickupOptions
    IncludeShippingPickupDefault:
      name: include
      in: query
      description: |-
        * `cart.lineItems.physicalItems.options` - physical options
        * `cart.lineItems.digitalItems.options` - digital options
        * `cart.lineItems.physicalItems.categoryNames` - physical categories
        * `cart.lineItems.digitalItems.categoryNames` - digital categories
        * `cart.lineItems.customItems.categoryNames` - custom categories
        * `customer` - customer
        * `customer.customerGroup` - customer group
        * `payments` - payments
        * `promotions` - promotions
        * `consignments.availableShippingOptions` - shipping options
        * `consignments.availablePickupOptions` - pickup options
      style: form
      explode: false
      schema:
        type: array
        default:
          - consignments.availableShippingOptions
          - consignments.availablePickupOptions
        items:
          type: string
          enum:
            - cart.lineItems.physicalItems.options
            - cart.lineItems.digitalItems.options
            - cart.lineItems.physicalItems.categoryNames
            - cart.lineItems.digitalItems.categoryNames
            - cart.lineItems.customItems.categoryNames
            - customer
            - customer.customerGroup
            - payments
            - promotions
            - consignments.availableShippingOptions
            - consignments.availablePickupOptions
