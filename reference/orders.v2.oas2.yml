openapi: '3.0.0'
info:
  version: ''
  title: Orders V2
  description: |-
    Manage order coupons, messages, products, shipping addresses, statuses, taxes, shipments, and shipping address quotes.
    
    ## Order
    
    The Order object contains a record of the purchase agreement between a shopper and a merchant. To learn more about creating orders, see [Orders API Guide](/docs/store-operations/orders).
    
    ### Currency Fields
    
    The **default** currency refers to the transactional currency which is the currency the shopper pays in.
    
    The **display** currency refers to the presentational currency used to present prices to the shopper on the storefront.
    
    * `currency_id` - the display currency ID. Depending on the currency selected, the value may be different from the transactional currency.
    * `currency_code` - the currency code of the display currency used to present prices to the shopper on the storefront. Depending on the currency selected, the value may be different from the transactional currency.
    * `currency_exchange_rate` - the exchange rate between the store’s default currency and the display currency. For orders created using the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1).
    * `default_currency_id` - the transactional currency ID.
    * `default_currency_code` - the currency code of the transactional currency the shopper pays in.
    
    The following additional fields are returned on orders when Multi-Currency is enabled on the store:
    
    * `store_default_currency_code` - the currency code of the store’s default currency.
    * `store_default_to_transactional_exchange_rate` - the exchange rate between the store’s default currency and the transactional currency used in the order.
    
    **Example:**
    
    ```json
    {
      ...
      "currency_id": 4,
      "currency_code": "EUR",
      "currency_exchange_rate": 1,
      "default_currency_id": 4,
      "default_currency_code": "EUR",
      "store_default_currency_code": "USD",
      "store_default_to_transactional_exchange_rate": "100.0000000000"
      ...
    }
    ```
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
security:
  - X-Auth-Token: []
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
tags:
  - name: Orders
  - name: Order Coupons
  - name: Order Products
  - name: Order Taxes
  - name: Order Status
  - name: Order Shipments
  - name: Order Shipping Addresses
  - name: Order Messages
  - name: Order Shipping Addresses Quotes
  - name: Order Consignments
paths:
  '/orders/{order_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: Gets an *Order*. To learn more about creating or updating orders, see [Orders Overview](/docs/store-operations/orders).
      summary: Get an Order
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/order_includes'
      responses:
        '200':
          $ref: '#/components/responses/order_Resp'
        '404':
          description: "The requested resource was not found."
          content:
            application/json:
              schema: {}
      operationId: getOrder
    put:
      description: |-
        Updates an *Order*. 
        
        To add a product to an existing order, don't include `id` in the body. Include `product_options` if adding a product with variants.
        
        To update a product in an order, include `id` in the body. The body should only contain the fields that need to be updated. Those fields that are omitted will not be changed.
        
        To remove a product from an order, set that product’s `quantity` to `0`.

        After the update, the PUT request clears all discounts and promotions applied to the changed order line items. Since the order data syncs with other ERP systems, like Amazon or eBay, the updated order returns to the default setting, removing any applied discounts.
        
        To learn more about creating or updating orders, see [Orders Overview](/docs/store-operations/orders).
      summary: Update an Order
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_Put'
            examples:
              application/json:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - name: BigCommerce Poster
                      quantity: 1
                      price_inc_tax: 10.98
                      price_ex_tax: 10
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 50
                      price_ex_tax: 45
                    - product_id: 184
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: '192'
                  customer_locale: en
              Adding an existing product to order:
                value:
                  products:
                    - product_id: 123
                      quantity: 5
                      product_options:
                        - id: 56
                          value: 12
                      price_inc_tax: 12.45
                      price_ex_tax: 10.12
              Adding a new product to order:
                value:
                  products:
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 12.45
                      price_ex_tax: 10.12
                      sku: MUG-GRY
              Removing a product from an order:
                value:
                  products:
                    - id: 117
                      product_id: 123
                      quantity: 1
                      product_options:
                        - id: 56
                          value: 12
                      price_inc_tax: 12.45
                      price_ex_tax: 10.12
        required: true
      responses:
        '200':
          $ref: '#/components/responses/order_Resp'
      operationId: updateOrder
    delete:
      description: Archives an order. To remove a single product from an order, see `PUT /orders/{order_id}`.
      summary: Archive an Order
      tags:
        - Orders
      responses:
        '204':
          description: ''
      operationId: deleteOrder
  '/orders/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: Gets an array of orders in the store organized by order status.
      summary: Get a Count of Orders
      tags:
        - Orders
      responses:
        '200':
          $ref: '#/components/responses/ordersCount_Resp'
      operationId: getOrdersCount
  '/orders':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: |-
        Gets a list of orders using the filter query.
        
        **Notes**
        
        * The default sort is by order id, from lowest to highest.
        * By default, requests sent without parameters will only return 50 orders. 

      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/min_id'
        - $ref: '#/components/parameters/max_id'
        - $ref: '#/components/parameters/min_total'
        - $ref: '#/components/parameters/max_total'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/status_id'
        - $ref: '#/components/parameters/cart_id'
        - $ref: '#/components/parameters/payment_method'
        - $ref: '#/components/parameters/min_date_created'
        - $ref: '#/components/parameters/max_date_created'
        - $ref: '#/components/parameters/min_date_modified'
        - $ref: '#/components/parameters/max_date_modified'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/channel_id'
        - $ref: '#/components/parameters/order_includes'
        - $ref: '#/components/parameters/external_order_id'
      responses:
        '200':
          $ref: '#/components/responses/orderCollection_Resp'
      summary: Get All Orders
      operationId: getOrders
    post:
      description: |-
        Creates an *Order*. To learn more about creating or updating orders, see [Orders Overview](/docs/store-operations/orders).

        Create an order with an existing catalog product or a custom product.

        **Required Fields**

        * `products` or `consignments`
        * `billing_address`

        When you create an order, the `consignment(s)` array allows you to create pickup consignments.
        - An order can have either a pickup or a shipping fulfillment method, but not both.
        - An order can have only one pickup consignment.

        Choose from one of the following:
        1. Create order with a shipping fulfillment method using `shipping_addresses` and `products`, i.e. legacy mode
        2. Create order with a pickup fulfillment method using `consignments`, i.e. Consignment mode

        You can fulfill an order with shipping or pickup, but not both.
        
        This means that if the `consignments` array is present in the request, then _none_ of the following may be present and vice-versa:
        - `shipping_addresses`
        - `products`
      summary: Create an Order
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/order_includes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_Post'
            examples:
              Product with Variants:
                value:
                  status_id: 0
                  customer_id: 1
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  products:
                    - product_id: 118
                      quantity: 1
                      variant_id: 93
              Custom Product:
                value:
                  status_id: 0
                  customer_id: 1
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@email.com
                  products:
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 50
                      price_ex_tax: 45
              Product with Options:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - product_id: 184
                      quantity: 5
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: '192'
              Product with a Drop Down and a Text Field Modifier:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - product_id: 184
                      quantity: 5
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: Custom Message
              Multiple Products:
                value:
                  status_id: 0
                  customer_id: 11
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    street_1: 123 Main Street
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    email: janedoe@example.com
                  shipping_addresses:
                    - first_name: Trish
                      last_name: Test
                      company: Acme Pty Ltd
                      street_1: 666 Sussex St
                      city: Austin
                      state: Texas
                      zip: '78751'
                      country: United States
                      country_iso2: US
                      email: elsie@example.com
                  products:
                    - name: BigCommerce Poster
                      quantity: 1
                      price_inc_tax: 10.98
                      price_ex_tax: 10
                    - name: BigCommerce Coffee Mug
                      quantity: 1
                      price_inc_tax: 50
                      price_ex_tax: 45
                    - product_id: 184
                      product_options:
                        - id: 200
                          value: '180'
                        - id: 230
                          value: '192'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/order_Resp'
      operationId: createOrder
    delete:
      description: Archives all orders.
      summary: Delete All Orders
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/limit'
      responses:
        '204':
          description: ''
      operationId: deleteOrders
  '/orders/{order_id}/coupons':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: |-
        Lists all order coupons. Optional parameters can be passed in.
        
        |Type `int`|Type Name|
        |-|-|
        |`0`|`per_item_discount`|
        |`1`|`percentage_discount`|
        |`2`|`per_total_discount`|
        |`3`|`shipping_discount`|
        |`4`|`free_shipping`|
        |`5`|`promotion`|
      summary: List Order Coupons
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderCouponsCollection_Resp'
      tags:
        - Order Coupons
      operationId: getOrderCoupons
  '/orders/{order_id}/products':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: |- 
        Lists 50 order products on an order using `order_id`. By default, items are sorted from lowest to highest according to a newly created ID, separate from the `order_id` and the `product_id`.
        
        **Note**: The response `id` is required when you [create order shipments](/docs/store-operations/orders#creating-order-shipments).
      summary: List Order Products
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderProductsCollection_Resp'
      tags:
        - Order Products
      operationId: getOrderProducts
  '/orders/{order_id}/shipping_addresses':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: |-
        Get all shipping addresses on an order using the `order_id`.
        
        Returned in the response is shipping_quotes object. Please use the Get Shipping Quotes Endpoint. Using the response will return a 204 for the shipping quote.
      summary: Get Order Shipping Addresses
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderShippingAddressCollection_Resp'
      tags:
        - Order Shipping Addresses
      operationId: getOrderShippingAddresses
  '/order_statuses':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      description: |-
        Returns a Collection of All Order Statuses.
        
        **Order Status Descriptions:**
        |Status ID | Name  | Description |
        |--|--|--|
        | 0 | Incomplete  | An incomplete order happens when a shopper reached the payment page, but did not complete the transaction. |
        | 1 | Pending |Customer started the checkout process, but did not complete it. |
        | 2 | Shipped | Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action. |
        | 3 | Partially Shipped | Only some items in the order have been shipped, due to some products being pre-order only or other reasons. |
        | 4 | Refunded | Seller has used the Refund action. |
        | 5 | Cancelled | Seller has cancelled an order, due to a stock inconsistency or other reasons. |
        | 6 |Declined | Seller has marked the order as declined for lack of manual payment, or other reasons. |
        | 7 | Awaiting Payment | Customer has completed checkout process, but payment has yet to be confirmed. |
        | 8 | Awaiting Pickup | Order has been pulled, and is awaiting customer pickup from a seller-specified location. |
        | 9 | Awaiting Shipment | Order has been pulled and packaged, and is awaiting collection from a shipping provider. |
        | 10 | Completed | Client has paid for their digital product and their file(s) are available for download. |
        | 11 | Awaiting Fulfillment | Customer has completed the checkout process and payment has been confirmed. |
        | 12 | Manual Verification Required | Order is on hold while some aspect needs to be manually confirmed. |
        | 13 | Disputed | Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order. |
        | 14 | Partially Refunded | Seller has partially refunded the order. |
      summary: Get All Order Statuses
      responses:
        '200':
          $ref: '#/components/responses/orderStatusCollection_Resp'
      tags:
        - Order Status
      operationId: getOrderStatuses
  '/order_statuses/{status_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/status_id_path'
    get:
      description: |-
        Returns a single order status.
        
        **Order Status Descriptions**
        |Status ID | Name  | Description |
        |:--|:--|:--|
        | 0 | Incomplete  | An incomplete order happens when a shopper reached the payment page, but did not complete the transaction. |
        | 1 | Pending |Customer started the checkout process, but did not complete it. |
        | 2 | Shipped | Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action. |
        | 3 | Partially Shipped | Only some items in the order have been shipped, due to some products being pre-order only or other reasons. |
        | 4 | Refunded | Seller has used the Refund action. |
        | 5 | Cancelled | Seller has cancelled an order, due to a stock inconsistency or other reasons. |
        | 6 |Declined | Seller has marked the order as declined for lack of manual payment, or other reasons. |
        | 7 | Awaiting Payment | Customer has completed checkout process, but payment has yet to be confirmed. |
        | 8 | Awaiting Pickup | Order has been pulled, and is awaiting customer pickup from a seller-specified location. |
        | 9 | Awaiting Shipment | Order has been pulled and packaged, and is awaiting collection from a shipping provider. |
        | 10 | Completed | Client has paid for their digital product and their file(s) are available for download. |
        | 11 | Awaiting Fulfillment | Customer has completed the checkout process and payment has been confirmed. |
        | 12 | Manual Verification Required | Order is on hold while some aspect needs to be manually confirmed. |
        | 13 | Disputed | Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order. |
        | 14 | Partially Refunded | Seller has partially refunded the order. |
      summary: Get a Single Order Status by ID
      responses:
        '200':
          $ref: '#/components/responses/orderStatus_Resp'
      tags:
        - Order Status
      operationId: getOrderStatusesStatus
  '/orders/{order_id}/taxes':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: |-
        Gets all order taxes using `order_id`.
        Each tax applied to an order. This information can be useful for reporting purposes.
        Pass in the query parameter `?details=true` to return extra details about order taxes.
        `order_product_id` and `line_item_type` are also returned.
        
        All values are read-only.
      summary: Get All Order Taxes
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: details
          description: To return detailed tax information, pass in the details query.
          schema:
            type: string
            default: 'true'
      responses:
        '200':
          $ref: '#/components/responses/orderTaxes_Resp'
      tags:
        - Order Taxes
      operationId: getOrderTaxes
  '/orders/{order_id}/shipments':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: Gets a list of all shipments on an order.
      summary: Get Order Shipments
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/orderShipmentCollection_Resp'
        '204':
          description: No Content (No shipments exist)
          content: {}
      tags:
        - Order Shipments
      operationId: getOrderShipments
    post:
      description: |
        Creates an *Order Shipment*. For more details, see [Shipping an Order](/docs/store-operations/orders#creating-order-shipments).
        
        **Required Fields**
        *   order_address_id
        *   items
        
        **Usage notes**

        There are three methods for generating a tracking link for a shipment:

        1. Use `shipping_provider` and `tracking_number`: This generates an automatic tracking link that you can click from the BigCommerce control panel and customer-facing emails. The `generated_tracking_link` property in the API response represents this tracking link. The `tracking_link` property in the API response will remain empty.

        2. Use `tracking_carrier` and `tracking_number`: This also creates an automatic tracking link that you can click in both the BigCommerce control panel and customer-facing emails. Like the previous method, the `generated_tracking_link` property in the API response represents this tracking link. The `tracking_link` property in the API response will remain empty.

        3. Supply a custom `tracking_link`: By providing a value for the `tracking_link` property, you can use your own tracking link within the BigCommerce control panel and in customer-facing emails. The API response will return your supplied tracking link as part of the `tracking_link` property in the response. In situations when there isn't a `generated_tracking_link`, the property in the API response will remain empty. 
        
        Acceptable values for `shipping_provider` include the following, and this list may be updated at any time: 
         - `""`, an empty string
         - `auspost`
         - `canadapost`
         - `endicia`
         - `usps`
         - `fedex`
         - `royalmail`
         - `ups`
         - `upsready`
         - `shipperhq`
         - `carrier_{your_carrier_id}`, when the carrier is a [third-party Shipping Provider](/docs/integrations/shipping) 
        
        Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
      summary: Create Order Shipment
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderShipment_Post'
            examples: {}
        required: true
      responses:
        '201':
          $ref: '#/components/responses/orderShipment_Resp'
      tags:
        - Order Shipments
      operationId: createOrderShipments
    delete:
      description: Deletes all shipments associated with an order.
      summary: Delete Order Shipments
      responses:
        '204':
          description: ''
      tags:
        - Order Shipments
      operationId: deleteOrderShipments
  '/orders/{order_id}/shipments/count':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      description: Gets a count of the number of shipments that have been made for a single order.
      summary: Get Count of Order Shipments
      responses:
        '200':
          $ref: '#/components/responses/orderCount_Resp'
      tags:
        - Order Shipments
      operationId: getOrderShipmentsCount
  '/orders/{order_id}/shipments/{shipment_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - $ref: '#/components/parameters/shipment_id_path'
    get:
      tags:
        - Order Shipments
      responses:
        '200':
          $ref: '#/components/responses/orderShipment_Resp'
      operationId: getOrderShipment
      summary: Get a Shipment
      description: Gets an order shipment.
    put:
      description: Updates an existing shipment associated with an order.
      summary: Update a Shipment
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderShipment_Put'
            examples:
              application/json:
                value:
                  tracking_number: EJ958083578US
                  merchant_shipping_cost: '1.0000'
                  order_address_id: 1
                  shipping_provider: fedex
        required: true
      responses:
        '200':
          $ref: '#/components/responses/orderShipment_Resp'
      tags:
        - Order Shipments
      operationId: updateOrderShipment
    delete:
      description: Deletes a shipment associated with an order.
      summary: Delete an Order Shipment
      responses:
        '204':
          description: ''
      tags:
        - Order Shipments
      operationId: deleteOrderShipment
  '/orders/{order_id}/messages':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
    get:
      responses:
        '200':
          $ref: '#/components/responses/orderMessagesCollection_Resp'
      summary: Get Order Messages
      description: Gets the messages associated with an order.
      tags:
        - Order Messages
      parameters:
        - $ref: '#/components/parameters/min_id'
        - $ref: '#/components/parameters/max_id'
        - $ref: '#/components/parameters/customer_id'
        - $ref: '#/components/parameters/min_date_created'
        - $ref: '#/components/parameters/max_date_created'
        - $ref: '#/components/parameters/is_flagged'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      operationId: getOrderMessages
  '/orders/{order_id}/products/{product_id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - $ref: '#/components/parameters/product_id_path'
    get:
      responses:
        '200':
          $ref: '#/components/responses/orderProductLineItem_Resp'
      summary: Get an Order Product
      description: Gets a product line item associated with the order.
      tags:
        - Order Products
      operationId: getOrderProduct
  '/orders/{order_id}/shipping_addresses/{id}':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - name: id
        in: path
        description: Shipping address ID.
        required: true
        schema:
          type: string
    get:
      responses:
        '200':
          $ref: '#/components/responses/orderShippingAddress_Resp'
      summary: Get a Shipping Address
      description: |-
        Gets a shipping address associated with an order.
        
        Returned in the response is shipping_quotes object. Please use the Get Shipping Quotes Endpoint. Using the response will return a 204 for the shipping quote.
      tags:
        - Order Shipping Addresses
      operationId: getOrderShippingAddress
    put:
      summary: Update a Shipping Address
      operationId: updateOrderShippingAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderShippingAddress'
              examples:
                response:
                  value:
                    id: 1
                    order_id: 100
                    first_name: first
                    last_name: last
                    company: company
                    street_1: street 1
                    street_2: street 2
                    city: Sydney
                    zip: '2000'
                    country: Australia
                    country_iso2: AU
                    state: New South Wales
                    email: email@bigcommerce.com
                    phone: phone
                    items_total: 1
                    items_shipped: 0
                    shipping_method: Flat Rate
                    base_cost: '15.0000'
                    cost_ex_tax: '15.0000'
                    cost_inc_tax: '15.0000'
                    cost_tax: '0.0000'
                    cost_tax_class_id: 2
                    base_handling_cost: '0.0000'
                    handling_cost_ex_tax: '0.0000'
                    handling_cost_inc_tax: '0.0000'
                    handling_cost_tax: '0.0000'
                    handling_cost_tax_class_id: 2
                    shipping_zone_id: 1
                    shipping_zone_name: United States
                    shipping_quotes:
                      url: 'https://api-proxy.service.bcdev/stores/17hoqh4ddx/v2/orders/100/shipping_addresses/1/shipping_quotes'
                      resource: /orders/100/shipping_addresses/1/shipping_quotes
                    form_fields: []
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: integer
                    message:
                      type: string
              examples:
                response:
                  value:
                    - status: 404
                      message: The field 'item_total' cannot be written to. Please remove it from your request before trying again.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: integer
                    message:
                      type: string
              examples:
                response:
                  value:
                    - status: 404
                      message: The requested resource was not found.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shippingAddress_Put'
            examples:
              application/json:
                value:
                  first_name: first
                  last_name: last
                  company: company
                  street_1: street 1
                  street_2: street 2
                  city: Sydney
                  zip: '2000'
                  country: Australia
                  country_iso2: AU
                  state: New South Wales
                  email: email2@bigcommerce.com
                  phone: '468444123'
      description: |-
        Update a shipping address associated with an order.
        
        **Note**: Updating a shipping address will NOT trigger the recalculation of shipping cost and tax
      tags:
        - Order Shipping Addresses
  '/orders/{order_id}/shipping_addresses/{shipping_address_id}/shipping_quotes':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/order_id_path'
      - $ref: '#/components/parameters/shipping_address_id_path'
    get:
      responses:
        '200':
          $ref: '#/components/responses/shippingQuotes_Resp'
      summary: Get Order Shipping Quotes
      description: |-
        Gets all shipping quotes persisted on an order.
        
        This is a read-only endpoint and the output can vary based on the shipping quote. A shipping quote can only be generated using the storefront at this time. Orders that are created in the control panel or using the API return a 204 for this endpoint since a shipping quote is not generated during that process.
      tags:
        - Order Shipping Addresses Quotes
      operationId: getOrderShippingAddressShippingQuotes
  '/orders/{order_id}/consignments':
    parameters:
      - name: include
        in: query
        description: |-
          * `consignments.line_items` - include the response returned from the request to the `/orders/{order_id}/products` endpoint in consignments.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
              - consignments.line_items
    get:
      summary: Get Consignments
      tags:
        - Order Consignments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderConsignment_Get'
              examples:
                Pickup Consignments:
                  value:
                    pickups:
                      - id: 99
                        pickup_method_id: 1
                        pickup_method_display_name: Pick Up
                        collection_instructions: Bring your ID
                        collection_time_description: 9am - 6pm
                        location:
                          id: 1
                          name: Location 1
                          code: LOCATION-1
                          address_line_1: 123 Main Street
                          address_line_2: Suite 101
                          city: Austin
                          state: Texas
                          postal_code: '78726'
                          country_alpha2: US
                          email: location1@example.com
                          phone: +1 111-111-1111
                        line_items:
                          - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                            resource: /orders/129/products/12
        '404':
          $ref: '#/components/responses/404_Resp'
      operationId: getOrderConsignments
      description: 'Get all consignments for an order. '
      parameters:
        - $ref: '#/components/parameters/order_id_path'
  '/orders/{order_id}/consignments/shipping/{shipping_consignment_id}/shipping_quotes':
    get:
      summary: Get Consignment Shipping Quotes
      tags:
        - Order Consignments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shippingQuotes_Base'
              examples:
                Fixed Shipping:
                  value:
                    id: '42'
                    uuid: 7c65e0a0-cf46-4438-934e-c7b4edb31e18
                    timestamp: 'Fri, 24 Jun 2022 01:45:27 +0000'
                    shipping_provider_id: bcstatic
                    shipping_provider_quote: []
                    provider_code: peritem
                    carrier_code: ''
                    rate_code: ''
                    rate_id: ''
                    method_id: 2
                Fedex:
                  value:
                    id: '43'
                    uuid: 551404b9-beeb-4e49-922b-3b8d85002863
                    timestamp: 'Fri, 24 Jun 2022 03:52:03 +0000'
                    shipping_provider_id: bcrealtime
                    shipping_provider_quote:
                      - rate:
                          value: '107.32'
                          unit: USD
                        transitTime: '1'
                        name: Priority Overnight
                        signatureConfirmationFee: {}
                        carrierName: ''
                        carrierCode: {}
                        code: {}
                        deliveryMessage: ''
                        labelSizes: []
                        insuredMailFee: {}
                        dates: []
                        rateId: {}
                        description: ''
                        additionalInfo: {}
                    provider_code: fedex
                    carrier_code: ''
                    rate_code: ''
                    rate_id: ''
                    method_id: 5
        '404':
          $ref: '#/components/responses/404_Resp'
      operationId: getOrderConsignmentShippingQuotes
      description: |-
        Get all shipping quotes persisted on an order for a shipping consignment.
        This is a read-only endpoint whose response depends on the shipping quote. You can only generate a shipping quote using the storefront at this time. Orders that are created in the control panel, or using the API, return a 204 status response since you can't generate a shipping quote during that process.
      parameters:
        - $ref: '#/components/parameters/order_id_path'
        - $ref: '#/components/parameters/shipping_consignment_id'
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
      schema:
        type: string
        default: 'application/json'
    external_order_id:
      name: external_order_id
      in: query
      description: The order ID in another system, such as the Amazon Order ID if this is an Amazon order. After setting it, you can update this field using a POST or PUT request.
      schema:
        type: string
    min_id:
      name: min_id
      in: query
      description: The minimum order ID.
      schema:
        type: integer
    max_id:
      name: max_id
      in: query
      description: The maximum order ID.
      schema:
        type: integer
    min_total:
      name: min_total
      in: query
      description: The minimum order total in floating point format. eg. 12.50
      schema:
        type: number
        format: float
    max_total:
      name: max_total
      in: query
      description: The maximum order total in floating point format. eg. 12.50
      schema:
        type: number
    customer_id:
      name: customer_id
      in: query
      description: Customer ID.
      schema:
        type: integer
    email:
      name: email
      in: query
      description: The email of the customer.
      schema:
        type: string
    status_id:
      name: status_id
      in: query
      description: The status ID of the order. You can get the status id from the `/orders` endpoints.
      schema:
        type: integer
    status_id_path:
      name: status_id
      in: path
      description: The status ID of the order. You can get the status id from the `/orders` endpoints.
      required: true
      schema:
        type: integer
        format: int32
    cart_id:
      name: cart_id
      in: query
      description: The cart ID of the order.
      schema:
        type: string
    payment_method:
      name: payment_method
      in: query
      description: The display name of the payment method used on the order.
      schema:
        type: string
        enum:
          - Manual
          - Cash on Delivery
          - Credit Card
          - Test Payment Gateway
          - Pay In Store
    min_date_created:
      name: min_date_created
      in: query
      description: |-
        Minimum date the order was created in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    max_date_created:
      name: max_date_created
      in: query
      description: |-
        Maximum date the order was created in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    min_date_modified:
      name: min_date_modified
      in: query
      description: |-
        Minimum date the order was modified in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    max_date_modified:
      name: max_date_modified
      in: query
      description: |-
        Maximum date the order was modified in RFC-2822 or ISO-8601.
        
        RFC-2822: `Thu, 20 Apr 2017 11:32:00 -0400`
        
        ISO-8601: `2017-04-20T11:32:00.000-04:00`
      schema:
        type: string
    page:
      name: page
      in: query
      description: The page to return in the response.
      schema:
        type: number
    limit:
      name: limit
      in: query
      description: Number of results to return.
      schema:
        type: number
    sort:
      in: query
      name: sort
      description: Field and direction to sort orders. To specify the direction, add `:asc` or `:desc` to the end of the query parameter. e.g., `sort=date_created:desc`.
      schema:
        type: string
        enum:
          - id
          - customer_id
          - date_created
          - date_modified
          - status_id
          - channel_id
          - external_id
    status:
      name: status
      in: query
      description: Status of the order message.
      schema:
        type: string
        enum:
          - read
          - unread
    is_flagged:
      name: is_flagged
      in: query
      description: 'Whether the message is [flagged](https://support.bigcommerce.com/s/article/Communicating-with-Customers#Messages).'
      schema:
        type: boolean
    order_id_path:
      name: order_id
      in: path
      description: ID of the order.
      required: true
      schema:
        type: integer
    product_id_path:
      name: product_id
      in: path
      required: true
      description: ID of the product.
      schema:
        type: integer
    shipping_address_id_path:
      name: shipping_address_id
      in: path
      required: true
      description: Shipping address ID.
      schema:
        type: integer
    shipment_id_path:
      name: shipment_id
      in: path
      required: true
      description: Shipment ID.
      schema:
        type: integer
    channel_id:
      name: channel_id
      in: query
      description: The channel ID of the sales channel the shopper used to place the order.
      schema:
        type: integer
    shipping_consignment_id:
      name: shipping_consignment_id
      in: path
      required: true
      description: Shipping consignment ID.
      schema:
        type: integer
    order_includes:
      name: include
      in: query
      description: |-
        * `consignments` - include the response returned from the request to the `/orders/{order_id}/consignments` endpoint.
        
        * `consignments.line_items` - include the response returned from the request to the `/orders/{order_id}/products` endpoint in consignments. This implies `include=consignments`.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - consignments
            - consignments.line_items
  responses:
    orderStatusCollection_Resp:
      description: Get All Order Status Collection Response.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderStatus_Base'
          examples:
            response:
              value:
                - id: 0
                  name: Incomplete
                  system_label: Incomplete
                  custom_label: Incomplete - Testing
                  system_description: An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.
                  order: 0
                - id: 1
                  name: Pending
                  system_label: Pending
                  custom_label: Pending
                  system_description: Customer started the checkout process, but did not complete it.
                  order: 1
                - id: 2
                  name: Shipped
                  system_label: Shipped
                  custom_label: Shipped
                  system_description: Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.
                  order: 8
                - id: 3
                  name: Partially Shipped
                  system_label: Partially Shipped
                  custom_label: Partially Shipped
                  system_description: Only some items in the order have been shipped, due to some products being pre-order only or other reasons.
                  order: 6
                - id: 4
                  name: Refunded
                  system_label: Refunded
                  custom_label: Refunded
                  system_description: Seller has used the Refund action.
                  order: 11
                - id: 5
                  name: Cancelled
                  system_label: Cancelled
                  custom_label: Cancelled
                  system_description: Seller has cancelled an order, due to a stock inconsistency or other reasons.
                  order: 9
                - id: 6
                  name: Declined
                  system_label: Declined
                  custom_label: Declined
                  system_description: Seller has marked the order as declined for lack of manual payment, or other reasons.
                  order: 10
                - id: 7
                  name: Awaiting Payment
                  system_label: Awaiting Payment
                  custom_label: Awaiting Payment
                  system_description: Customer has completed checkout process, but payment has yet to be confirmed.
                  order: 2
                - id: 8
                  name: Awaiting Pickup
                  system_label: Awaiting Pickup
                  custom_label: Awaiting Pickup
                  system_description: Order has been pulled, and is awaiting customer pickup from a seller-specified location.
                  order: 5
                - id: 9
                  name: Awaiting Shipment
                  system_label: Awaiting Shipment
                  custom_label: Awaiting Shipment
                  system_description: Order has been pulled and packaged, and is awaiting collection from a shipping provider.
                  order: 4
                - id: 10
                  name: Completed
                  system_label: Completed
                  custom_label: Completed - Testing
                  system_description: Client has paid for their digital product and their file(s) are available for download.
                  order: 7
                - id: 11
                  name: Awaiting Fulfillment
                  system_label: Awaiting Fulfillment
                  custom_label: Awaiting Fulfillment
                  system_description: Customer has completed the checkout process and payment has been confirmed.
                  order: 3
                - id: 12
                  name: Manual Verification Required
                  system_label: Manual Verification Required
                  custom_label: Manual Verification Required
                  system_description: Order is on hold while some aspect needs to be manually confirmed.
                  order: 13
                - id: 13
                  name: Disputed
                  system_label: Disputed
                  custom_label: Disputed
                  system_description: Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.
                  order: 12
                - id: 14
                  name: Partially Refunded
                  system_label: Partially Refunded
                  custom_label: Partially Refunded
                  system_description: Seller has partially refunded the order.
                  order: 14
    orderStatus_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderStatus_Base'
          examples:
            response:
              value:
                id: 11
                name: Awaiting Fulfillment
                system_label: Awaiting Fulfillment
                custom_label: Awaiting Fulfillment
                system_description: Customer has completed the checkout process and payment has been confirmed.
                order: 3
    orderCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/order_Resp'
          examples:
            response:
              value:
                - id: 100
                  customer_id: 20
                  date_created: 'Wed, 10 Jan 2018 21:05:30 +0000'
                  date_modified: 'Wed, 05 Dec 2018 20:16:55 +0000'
                  date_shipped: ''
                  status_id: 11
                  status: Awaiting Fulfillment
                  subtotal_ex_tax: '336.3200'
                  subtotal_inc_tax: '361.9500'
                  subtotal_tax: '25.6300'
                  base_shipping_cost: '0.0000'
                  shipping_cost_ex_tax: '0.0000'
                  shipping_cost_inc_tax: '0.0000'
                  shipping_cost_tax: '0.0000'
                  shipping_cost_tax_class_id: 2
                  base_handling_cost: '0.0000'
                  handling_cost_ex_tax: '0.0000'
                  handling_cost_inc_tax: '0.0000'
                  handling_cost_tax: '0.0000'
                  handling_cost_tax_class_id: 2
                  base_wrapping_cost: '0.0000'
                  wrapping_cost_ex_tax: '0.0000'
                  wrapping_cost_inc_tax: '0.0000'
                  wrapping_cost_tax: '0.0000'
                  wrapping_cost_tax_class_id: 3
                  total_ex_tax: '361.9500'
                  total_inc_tax: '361.9500'
                  total_tax: '0.0000'
                  items_total: 17
                  items_shipped: 0
                  payment_method: Credit Card
                  payment_provider_id: ''
                  payment_status: authorized
                  refunded_amount: '0.0000'
                  order_is_digital: false
                  store_credit_amount: '0.0000'
                  gift_certificate_amount: '0.0000'
                  ip_address: 00.000.000.000
                  ip_address_v6: ''
                  geoip_country: United States
                  geoip_country_iso2: US
                  currency_id: 1
                  currency_code: USD
                  currency_exchange_rate: '1.0000000000'
                  default_currency_id: 1
                  default_currency_code: USD
                  staff_notes: ''
                  customer_message: ''
                  discount_amount: '0.0000'
                  coupon_discount: '0.0000'
                  shipping_address_count: 1
                  ebay_order_id: '0'
                  cart_id: a8458391-ef68-4fe5-9ec1-442e6a767364
                  billing_address:
                    first_name: Jane
                    last_name: Doe
                    company: ''
                    street_1: 455 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                    form_fields: []
                  is_email_opt_in: false
                  credit_card_type: null
                  order_source: manual
                  channel_id: 1
                  external_source: POS
                  products:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/products'
                    resource: /orders/100/products
                  shipping_addresses:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/shippingaddresses'
                    resource: /orders/100/shippingaddresses
                  coupons:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/100/coupons'
                    resource: /orders/100/coupons
                  external_id: null
                  external_merchant_id: null
                  tax_provider_id: BasicTaxProvider
                  store_default_currency_code: ''
                  store_default_to_transactional_exchange_rate: '1.0000000000'
                  custom_status: Awaiting Fulfillment
                  customer_locale: en
                  external_order_id: external-order-id
    ordersCount_Resp:
      description: Order Counter response collection.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ordersCount_Full'
          examples:
            response:
              value:
                statuses:
                  - id: 0
                    name: Incomplete
                    system_label: Incomplete
                    custom_label: Incomplete - Testing
                    system_description: An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.
                    count: 15
                    sort_order: 0
                  - id: 1
                    name: Pending
                    system_label: Pending
                    custom_label: Pending
                    system_description: Customer started the checkout process, but did not complete it.
                    count: 4
                    sort_order: 1
                  - id: 7
                    name: Awaiting Payment
                    system_label: Awaiting Payment
                    custom_label: Awaiting Payment
                    system_description: Customer has completed checkout process, but payment has yet to be confirmed.
                    count: 48
                    sort_order: 2
                  - id: 11
                    name: Awaiting Fulfillment
                    system_label: Awaiting Fulfillment
                    custom_label: Awaiting Fulfillment
                    system_description: Customer has completed the checkout process and payment has been confirmed.
                    count: 31
                    sort_order: 3
                  - id: 9
                    name: Awaiting Shipment
                    system_label: Awaiting Shipment
                    custom_label: Awaiting Shipment
                    system_description: Order has been pulled and packaged, and is awaiting collection from a shipping provider.
                    count: 1
                    sort_order: 4
                  - id: 8
                    name: Awaiting Pickup
                    system_label: Awaiting Pickup
                    custom_label: Awaiting Pickup
                    system_description: Order has been pulled, and is awaiting customer pickup from a seller-specified location.
                    count: 0
                    sort_order: 5
                  - id: 3
                    name: Partially Shipped
                    system_label: Partially Shipped
                    custom_label: Partially Shipped
                    system_description: Only some items in the order have been shipped, due to some products being pre-order only or other reasons.
                    count: 1
                    sort_order: 6
                  - id: 10
                    name: Completed
                    system_label: Completed
                    custom_label: Completed - Testing
                    system_description: Client has paid for their digital product and their file(s) are available for download.
                    count: 11
                    sort_order: 7
                  - id: 2
                    name: Shipped
                    system_label: Shipped
                    custom_label: Shipped
                    system_description: Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.
                    count: 14
                    sort_order: 8
                  - id: 5
                    name: Cancelled
                    system_label: Cancelled
                    custom_label: Cancelled
                    system_description: Seller has cancelled an order, due to a stock inconsistency or other reasons.
                    count: 5
                    sort_order: 9
                  - id: 6
                    name: Declined
                    system_label: Declined
                    custom_label: Declined
                    system_description: Seller has marked the order as declined for lack of manual payment, or other reasons.
                    count: 0
                    sort_order: 10
                  - id: 4
                    name: Refunded
                    system_label: Refunded
                    custom_label: Refunded
                    system_description: Seller has used the Refund action.
                    count: 2
                    sort_order: 11
                  - id: 13
                    name: Disputed
                    system_label: Disputed
                    custom_label: Disputed
                    system_description: Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.
                    count: 0
                    sort_order: 12
                  - id: 12
                    name: Manual Verification Required
                    system_label: Manual Verification Required
                    custom_label: Manual Verification Required
                    system_description: Order is on hold while some aspect needs to be manually confirmed.
                    count: 0
                    sort_order: 13
                  - id: 14
                    name: Partially Refunded
                    system_label: Partially Refunded
                    custom_label: Partially Refunded
                    system_description: Seller has partially refunded the order.
                    count: 1
                    sort_order: 14
                count: 133
    order_Resp:
      description: Order Response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/order_Resp'
          examples:
            response:
              value:
                id: 218
                customer_id: 11
                date_created: 'Tue, 05 Mar 2019 21:40:11 +0000'
                date_modified: 'Mon, 11 Mar 2019 15:17:25 +0000'
                date_shipped: ''
                status_id: 7
                status: Awaiting Payment
                subtotal_ex_tax: '62.6793'
                subtotal_inc_tax: '67.8400'
                subtotal_tax: '4.4000'
                base_shipping_cost: '12.0000'
                shipping_cost_ex_tax: '11.0900'
                shipping_cost_inc_tax: '12.0000'
                shipping_cost_tax: '0.9100'
                shipping_cost_tax_class_id: 0
                base_handling_cost: '0.0000'
                handling_cost_ex_tax: '0.0000'
                handling_cost_inc_tax: '0.0000'
                handling_cost_tax: '0.0000'
                handling_cost_tax_class_id: 0
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_cost_tax_class_id: 0
                total_ex_tax: '64.5300'
                total_inc_tax: '69.8400'
                total_tax: '5.3100'
                items_total: 4
                items_shipped: 0
                payment_method: Cash
                payment_provider_id: ''
                payment_status: authorized
                refunded_amount: '0.0000'
                order_is_digital: false
                store_credit_amount: '0.0000'
                gift_certificate_amount: '0.0000'
                ip_address: ''
                ip_address_v6: ''
                geoip_country: ''
                geoip_country_iso2: ''
                currency_id: 1
                currency_code: USD
                currency_exchange_rate: '1.0000000000'
                default_currency_id: 1
                default_currency_code: USD
                staff_notes: ''
                customer_message: ''
                discount_amount: '5.0000'
                coupon_discount: '5.0000'
                shipping_address_count: 1
                ebay_order_id: '0'
                cart_id: 7e48f7ef-2e88-4817-aea4-b0ed01490114
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 555 East Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: '78108'
                  country: United States
                  country_iso2: US
                  phone: '1234567890'
                  email: janedoe@example.com
                  form_fields:
                    - name: Delivery Instructions
                      value: Leave in backyard
                is_email_opt_in: false
                credit_card_type: null
                order_source: external
                channel_id: 1
                external_source: null
                products:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/products'
                  resource: /orders/218/products
                shipping_addresses:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/shippingaddresses'
                  resource: /orders/218/shippingaddresses
                coupons:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/218/coupons'
                  resource: /orders/218/coupons
                external_id: null
                external_merchant_id: null
                tax_provider_id: BasicTaxProvider
                store_default_currency_code: ''
                store_default_to_transactional_exchange_rate: '1.0000000000'
                custom_status: Awaiting Payment
                customer_locale: en
                external_order_id: external-order-id
            'Multiple Items':
              value:
                id: 247
                customer_id: 11
                date_created: 'Thu, 20 Jun 2019 16:07:08 +0000'
                date_modified: 'Thu, 20 Jun 2019 16:07:08 +0000'
                date_shipped: ''
                status_id: 11
                status: Awaiting Fulfillment
                subtotal_ex_tax: '924.47'
                subtotal_inc_tax: '1000.74'
                subtotal_tax: '76.27'
                base_shipping_cost: '8'
                shipping_cost_ex_tax: '7.39'
                shipping_cost_inc_tax: '8'
                shipping_cost_tax: '0.61'
                shipping_cost_tax_class_id: 0
                base_handling_cost: '0'
                handling_cost_ex_tax: '0'
                handling_cost_inc_tax: '0'
                handling_cost_tax: '0'
                handling_cost_tax_class_id: 0
                base_wrapping_cost: '0'
                wrapping_cost_ex_tax: '0'
                wrapping_cost_inc_tax: '0'
                wrapping_cost_tax: '0'
                wrapping_cost_tax_class_id: 0
                total_ex_tax: '931.86'
                total_inc_tax: '1008.74'
                total_tax: 76.88
                items_total: 11
                items_shipped: 0
                payment_method: Test Payment Gateway
                payment_provider_id: ''
                payment_status: captured
                refunded_amount: '0'
                order_is_digital: false
                store_credit_amount: '0'
                gift_certificate_amount: '0'
                ip_address: 70.112.53.67
                geoip_country: United States
                geoip_country_iso2: US
                currency_id: 1
                currency_code": USD
                currency_exchange_rate: '1'
                default_currency_id: 1
                default_currency_code: USD
                staff_notes: BIN-45
                customer_message: Custom Journal Added
                discount_amount: '0'
                coupon_discount": 0
                shipping_address_count: 1
                ebay_order_id: '0'
                cart_id: 8b84f622-faf1-4c10-887b-f5dff2f9eaf4
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 555 East Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: '78108'
                  country: United States
                  country_iso2: US
                  phone: '1234567890'
                  email: janedoe@email.com
                  form_fields:
                    - name: Delivery Instructions
                      value: Leave in backyard
                is_email_opt_in: false
                credit_card_type: {}
                order_source: manual
                channel_id: 1
                external_source: ''
                products:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/products'
                  resource: /orders/247/products
                shipping_addresses:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/shippingaddresses'
                  resource: /orders/247/shippingaddresses
                coupons:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/247/coupons'
                  resource: /orders/247/coupons
                external_id: null
                external_merchant_id: null
                tax_provider_id: BasicTaxProvider
                store_default_currency_code: USD
                store_default_to_transactional_exchange_rate: '1'
                custom_status: Awaiting Fulfillment
                customer_locale: en
                external_order_id: external-order-id
    orderCouponsCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderCoupons_Base'
          examples:
            response:
              value:
                - id: 3
                  coupon_id: 1
                  order_id: 120
                  code: S2549JM0Y
                  amount: 5
                  type: 2
                  discount: 5
    orderMessagesCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderMessages'
          examples:
            response:
              value:
                - id: 2
                  order_id: 181
                  staff_id: 1
                  customer_id: 11
                  type: admin
                  subject: 'Re: Order #181'
                  message: Thank you again!
                  status: unread
                  is_flagged: false
                  date_created: 'Wed, 26 Sep 2018 15:52:03 +0000'
                  customer: {}
    orderProductsCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderProducts'
          examples:
            response:
              value:
                - id: 65
                  order_id: 149
                  product_id: 77
                  order_address_id: 51
                  name: Fog Linen Chambray Towel - Beige Stripe
                  name_customer: Fog Linen Chambray Towel - Beige Stripe
                  name_merchant: Fog Linen Chambray Towel - Beige Stripe
                  sku: S-ORAN
                  upc: '1234567891112'
                  type: physical
                  base_price: '55.9900'
                  price_ex_tax: '55.9900'
                  price_inc_tax: '65.2300'
                  price_tax: '9.2400'
                  base_total: '55.9900'
                  total_ex_tax: '55.9900'
                  total_inc_tax: '65.2300'
                  total_tax: '9.2400'
                  weight: '1.0000'
                  width: '1.0000'
                  height: '1.0000'
                  depth: '1.0000'
                  quantity: 1
                  base_cost_price: '50.0000'
                  cost_price_inc_tax: '50.0000'
                  cost_price_ex_tax: '50.0000'
                  cost_price_tax: '0.0000'
                  is_refunded: false
                  quantity_refunded: 0
                  refund_amount: '0.0000'
                  return_id: 0
                  wrapping_id: 0
                  wrapping_name: ''
                  base_wrapping_cost: '0.0000'
                  wrapping_cost_ex_tax: '0.0000'
                  wrapping_cost_inc_tax: '0.0000'
                  wrapping_cost_tax: '0.0000'
                  wrapping_message: ''
                  quantity_shipped: 0
                  fixed_shipping_cost: '5.0000'
                  ebay_item_id: ''
                  ebay_transaction_id: ''
                  option_set_id: 19
                  parent_order_product_id: null
                  is_bundled_product: false
                  bin_picking_number: ''
                  external_id: null
                  brand: BigCommerce
                  applied_discounts:
                    - id: manual-discount
                      amount: '1.5900'
                      name: Manual Discount
                      code: null
                      target: order
                  product_options:
                    - id: 45
                      option_id: 18
                      order_product_id: 65
                      product_option_id: 120
                      display_name: Size
                      display_name_customer: Size
                      display_name_merchant: Size
                      display_value: S
                      display_value_customer: S
                      display_value_merchant: S
                      value: '69'
                      type: Multiple choice
                      name: Apparel sizes
                      display_style: Rectangle
                    - id: 46
                      option_id: 3
                      order_product_id: 65
                      product_option_id: 121
                      display_name: Color
                      display_value: Orange
                      display_value_customer: S
                      display_value_merchant: S
                      value: '112'
                      type: Swatch
                      name: Colors
                      display_style: ''
                    - id: 47
                      option_id: 37
                      order_product_id: 65
                      product_option_id: 122
                      display_name: Add Letters
                      display_value: Text Field
                      value: Text Field
                      type: Text field
                      name: Add Letters
                      display_style: ''
                    - id: 48
                      option_id: 38
                      order_product_id: 65
                      product_option_id: 123
                      display_name: Is this a gift?
                      display_value: 'Yes'
                      value: '104'
                      type: Checkbox
                      name: Gift Wrapping $5
                      display_style: ''
                    - id: 49
                      option_id: 39
                      order_product_id: 65
                      product_option_id: 124
                      display_name: PickList
                      display_value: Able Brewing System
                      value: '106'
                      type: Product Pick List
                      name: PickList
                      display_style: Pick list
                  configurable_fields: []
                  gift_certificate_id: null
                  discounted_total_inc_tax: '63.6400'
                - id: 66
                  order_id: 149
                  product_id: 86
                  order_address_id: 51
                  name: Able Brewing System
                  sku: ABS
                  type: physical
                  base_price: '0.0000'
                  price_ex_tax: '0.0000'
                  price_inc_tax: '0.0000'
                  price_tax: '0.0000'
                  base_total: '0.0000'
                  total_ex_tax: '0.0000'
                  total_inc_tax: '0.0000'
                  total_tax: '0.0000'
                  weight: '0.0000'
                  width: '1.0000'
                  height: '1.0000'
                  depth: '1.0000'
                  quantity: 1
                  base_cost_price: '50.0000'
                  cost_price_inc_tax: '50.0000'
                  cost_price_ex_tax: '50.0000'
                  cost_price_tax: '0.0000'
                  is_refunded: false
                  quantity_refunded: 0
                  refund_amount: '0.0000'
                  return_id: 0
                  wrapping_id: 0
                  wrapping_name: ''
                  base_wrapping_cost: '0.0000'
                  wrapping_cost_ex_tax: '0.0000'
                  wrapping_cost_inc_tax: '0.0000'
                  wrapping_cost_tax: '0.0000'
                  wrapping_message: ''
                  quantity_shipped: 0
                  event_name: null
                  event_date: null
                  fixed_shipping_cost: '0.0000'
                  ebay_item_id: ''
                  ebay_transaction_id: ''
                  option_set_id: null
                  parent_order_product_id: 65
                  is_bundled_product: true
                  bin_picking_number: BIN
                  external_id: null
                  brand: BigCommerce
                  applied_discounts: []
                  product_options: []
                  configurable_fields: []
                  gift_certificate_id: null
                  discounted_total_inc_tax: '0.0000'
    orderProductLineItem_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderProducts'
          examples:
            Product:
              value:
                id: 116
                order_id: 181
                product_id: 188
                order_address_id: 81
                name: Dustpan & Brush
                name_customer: Dustpan & Brush
                name_merchant: Dustpan & Brush
                sku: DUST1
                upc: '1234567891112'
                type: physical
                base_price: '31.9500'
                price_ex_tax: '31.9500'
                price_inc_tax: '37.2300'
                price_tax: '5.2800'
                base_total: '31.9500'
                total_ex_tax: '31.9500'
                total_inc_tax: '37.2300'
                total_tax: '5.2800'
                weight: '2.0000'
                width: '1.0000'
                height: '1.0000'
                depth: '1.0000'
                quantity: 1
                base_cost_price: '50.0000'
                cost_price_inc_tax: '50.0000'
                cost_price_ex_tax: '50.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: null
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: null
                parent_order_product_id: null
                is_bundled_product: false
                bin_picking_number: ''
                external_id: null
                brand: BigCommerce
                applied_discounts: []
                product_options: []
                configurable_fields: []
                discounted_total_inc_tax: '37.2300'
            Product with file upload:
              value:
                id: 35
                order_id: 125
                product_id: 127
                variant_id: 99
                order_address_id: 18
                name: Journal
                name_customer: Journal
                name_merchant: Journal
                sku: Jour-BLK
                upc: ''
                type: physical
                base_price: '45.0000'
                price_ex_tax: '41.5700'
                price_inc_tax: '45.0000'
                price_tax: '3.4300'
                base_total: '45.0000'
                total_ex_tax: '41.5700'
                total_inc_tax: '45.0000'
                total_tax: '3.4300'
                weight: '0.0000'
                width: '0.0000'
                height: '0.0000'
                depth: '0.0000'
                quantity: 1
                base_cost_price: '50.0000'
                cost_price_inc_tax: '50.0000'
                cost_price_ex_tax: '50.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: null
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: null
                parent_order_product_id: null
                is_bundled_product: false
                bin_picking_number: ''
                external_id: null
                brand: BigCommerce
                applied_discounts: []
                product_options:
                  - id: 18
                    option id: 38
                    order_product_id: 35
                    product_option_id: 121
                    display_name: Custom Logo Engraving
                    display_name_customer: Custom Logo Engraving
                    display_name_merchant: Custom Logo Engraving
                    display_value: BigCommerceLogo.jpeg
                    display_value_customer: BigCommerceLogo.jpeg
                    display_value_merchant: BigCommerceLogo.jpeg
                    value: "{\"originalName\":\"BigCommerceLogo.jpeg\",\"temporaryPath\":\"121_fbfb71dfc5a5d911f62d8e35dedd6e45.jpeg\",\"path\":\"f606efcae7e179970b19c3658142c5d0.jpeg\"}"
                    type: File Upload
                    name: Custom Logo Engraving
                    display_style: ""
                configurable_fields: []
                gift_certificate_id: null
            Custom Product:
              value:
                id: 238
                order_id: 247
                product_id: 0
                variant_id: 0
                order_address_id: 151
                name: Journal
                name_customer: Journal
                name_merchant: Journal
                sku: Jour-BLK
                upc: ''
                type: physical
                base_price: '45.0000'
                price_ex_tax: '41.5700'
                price_inc_tax: '45.0000'
                price_tax: '3.4300'
                base_total: '45.0000'
                total_ex_tax: '41.5700'
                total_inc_tax: '45.0000'
                total_tax: '3.4300'
                weight: '0.0000'
                width: '0.0000'
                height: '0.0000'
                depth: '0.0000'
                quantity: 1
                base_cost_price: '50.0000'
                cost_price_inc_tax: '50.0000'
                cost_price_ex_tax: '50.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: null
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: null
                parent_order_product_id: null
                is_bundled_product: false
                bin_picking_number: ''
                external_id: null
                brand: BigCommerce
                applied_discounts: []
                product_options: []
                configurable_fields: []
                gift_certificate_id: null
            Product with Variants:
              value:
                id: 240
                order_id: 247
                product_id: 201
                variant_id: 477
                order_address_id: 151
                name: BigCommerce T-Shirt
                name_customer: BigCommerce T-Shirt
                name_merchant: BigCommerce T-Shirt
                sku: SKU-201-Red-Small T-Shirt-Able Brewing System
                upc: ''
                type: physical
                base_price: '235.0000'
                price_ex_tax: '217.0900'
                price_inc_tax: '235.0000'
                price_tax: '17.9100'
                base_total: '940.0000'
                total_ex_tax: '868.3600'
                total_inc_tax: '940.0000'
                total_tax: '71.6400'
                weight: '3.0000'
                width: '3.0000'
                height: '3.0000'
                depth: '3.0000'
                quantity: 4
                base_cost_price: '50.0000'
                cost_price_inc_tax: '50.0000'
                cost_price_ex_tax: '50.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: null
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: 68
                parent_order_product_id: null
                is_bundled_product: false
                bin_picking_number: ''
                external_id: null
                configurable_fields: []
                brand: BigCommerce
                applied_discounts: []
    orderShipmentCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderShipment'
          examples:
            application/json:
              value:
                - id: 6
                  order_id: 225
                  customer_id: 11
                  order_address_id: 127
                  date_created: 'Mon, 11 Mar 2019 17:22:08 +0000'
                  tracking_number: EJ958083578US
                  merchant_shipping_cost: '0.0000'
                  shipping_method: None
                  comments: Ready to go...
                  shipping_provider: usps
                  tracking_carrier: ''
                  tracking_link: ''
                  billing_address:
                    first_name: Jane
                    last_name: Does
                    company: ''
                    street_1: 123 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                  shipping_address:
                    first_name: Trishy
                    last_name: Test
                    company: Acme Pty Ltd
                    street_1: 666 Sussex St
                    street_2: ''
                    city: Anywhere
                    state: Some State
                    zip: '12345'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: elsie@example.com
                  items:
                    - order_product_id: 188
                      product_id: 0
                      quantity: 1
                  shipping_provider_display_name: USPS
                  generated_tracking_link: http://trkcnfrm1.smi.usps.com/PTSInternetWeb/InterLabelInquiry.do?strOrigTrackNum=EJ958083578US
                - id: 7
                  order_id: 225
                  customer_id: 11
                  order_address_id: 128
                  date_created: 'Mon, 11 Mar 2019 17:22:31 +0000'
                  tracking_number: EJ958083578UK
                  merchant_shipping_cost: '0.0000'
                  shipping_method: None
                  comments: Janes Order
                  shipping_provider: usps
                  tracking_carrier: ''
                  tracking_link: ''
                  billing_address:
                    first_name: Jane
                    last_name: Does
                    company: ''
                    street_1: 123 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                  shipping_address:
                    first_name: Jane
                    last_name: Doe
                    company: ''
                    street_1: 555 Main Street
                    street_2: ''
                    city: Austin
                    state: Texas
                    zip: '78751'
                    country: United States
                    country_iso2: US
                    phone: ''
                    email: janedoe@example.com
                  items:
                    - order_product_id: 189
                      product_id: 0
                      quantity: 1
                  shipping_provider_display_name: USPS
                  generated_tracking_link: http://trkcnfrm1.smi.usps.com/PTSInternetWeb/InterLabelInquiry.do?strOrigTrackNum=EJ958083578US
    orderShipment_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderShipment'
          examples:
            application/json:
              value:
                id: 11
                order_id: 228
                customer_id: 11
                order_address_id: 131
                date_created: 'Wed, 13 Mar 2019 16:35:37 +0000'
                tracking_number: EJ958083578US
                merchant_shipping_cost: '0.0000'
                shipping_method: None
                comments: Ready to go...
                shipping_provider: usps
                tracking_carrier: ''
                tracking_link: ''
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 123 Main Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: '78751'
                  country: United States
                  country_iso2: US
                  phone: ''
                  email: janedoe@example.com
                shipping_address:
                  first_name: Trishy
                  last_name: Test
                  company: Acme Pty Ltd
                  street_1: 666 Sussex St
                  street_2: ''
                  city: Anywhere
                  state: Some State
                  zip: '12345'
                  country: United States
                  country_iso2: US
                  phone: ''
                  email: elsie@example.com
                items:
                  - order_product_id: 194
                    product_id: 0
                    quantity: 1
                  - order_product_id: 195
                    product_id: 0
                    quantity: 1
                shipping_provider_display_name: USPS
                generated_tracking_link: http://trkcnfrm1.smi.usps.com/PTSInternetWeb/InterLabelInquiry.do?strOrigTrackNum=EJ958083578US
    orderCount_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderCount'
          examples:
            response:
              value:
                count: 27
    orderShippingAddressCollection_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderShippingAddress'
          examples:
            response:
              value:
                - id: 132
                  order_id: 229
                  first_name: Trishy
                  last_name: Test
                  company: Acme Pty Ltd
                  street_1: 666 Sussex St
                  street_2: ''
                  city: San Antonio
                  zip: '78251'
                  country: United States
                  country_iso2: US
                  state: Texas
                  email: janedoe@example.com
                  phone: ''
                  items_total: 2
                  items_shipped: 2
                  shipping_method: None
                  base_cost: '12.9900'
                  cost_ex_tax: '12.0000'
                  cost_inc_tax: '12.9900'
                  cost_tax: '0.9900'
                  cost_tax_class_id: 0
                  base_handling_cost: '0.0000'
                  handling_cost_ex_tax: '0.0000'
                  handling_cost_inc_tax: '0.0000'
                  handling_cost_tax: '0.0000'
                  handling_cost_tax_class_id: 0
                  shipping_zone_id: 1
                  shipping_zone_name: United States -1
                  shipping_quotes:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/229/shippingaddresses/132/shippingquotes'
                    resource: /orders/229/shippingaddresses/132/shippingquotes
                  form_fields: []
                - id: 133
                  order_id: 229
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 555 Main Street
                  street_2: ''
                  city: Austin
                  zip: '78751'
                  country: United States
                  country_iso2: US
                  state: Texas
                  email: janedoe@example.com
                  phone: ''
                  items_total: 0
                  items_shipped: 0
                  shipping_method: None
                  base_cost: '12.9900'
                  cost_ex_tax: '12.0000'
                  cost_inc_tax: '12.9900'
                  cost_tax: '0.9900'
                  cost_tax_class_id: 0
                  base_handling_cost: '0.0000'
                  handling_cost_ex_tax: '0.0000'
                  handling_cost_inc_tax: '0.0000'
                  handling_cost_tax: '0.0000'
                  handling_cost_tax_class_id: 0
                  shipping_zone_id: 1
                  shipping_zone_name: United States -1
                  shipping_quotes:
                    url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/229/shippingaddresses/133/shippingquotes'
                    resource: /orders/229/shippingaddresses/133/shippingquotes
                  form_fields: []
    orderShippingAddress_Resp:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderShippingAddress'
          examples:
            response:
              value:
                id: 42
                order_id: 140
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 MainStreet
                street_2: ''
                city: Austin
                zip: '78751'
                country: United States
                country_iso2: US
                state: Texas
                email: jane@example.com
                phone: '1234567890'
                items_total: 2
                items_shipped: 0
                shipping_method: Fixed Shipping
                base_cost: '5.0000'
                cost_ex_tax: '4.0000'
                cost_inc_tax: '4.3200'
                cost_tax: '0.3200'
                cost_tax_class_id: 2
                base_handling_cost: '0.0000'
                handling_cost_ex_tax: '0.0000'
                handling_cost_inc_tax: '0.0000'
                handling_cost_tax: '0.0000'
                handling_cost_tax_class_id: 2
                shipping_zone_id: 1
                shipping_zone_name: United States
                shipping_quotes:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/140/shippingaddresses/42/shippingquotes'
                  resource: /orders/140/shippingaddresses/42/shippingquotes
                form_fields:
                  - name: Wholesale ID
                    value: '12345566'
    shippingQuotes_Resp:
      description: This response can vary depending on the shipping provider.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/shippingQuotes_Base'
        Fixed Shipping:
          examples:
            response:
              value:
                id: '16'
                uuid: 18aaa5eb-3c7a-4bf8-bfaa-d14d155606f1
                timestamp: 'Mon, 30 Jul 2018 15:32:35 +0000'
                shipping_provider_id: bcproductbased
                shipping_provider_quote: []
                provider_code: productfixedshipping
                carrier_code: ''
                rate_code: ''
                rate_id: ''
        UPS Example:
          examples:
            response:
              value:
                id: '19'
                uuid: 6c21e6ba-3080-4def-991b-ae79ace4dfac
                timestamp: 'Mon, 20 Aug 2018 14:47:13 +0000'
                shipping_provider_id: bcrealtime
                shipping_provider_quote:
                  - rate:
                      value: '44.11'
                      unit: USD
                    transitTime: 1 business day
                    name: UPS Next Day Air®
                    signatureConfirmationFee: {}
                    carrierName: ''
                    carrierCode: {}
                    code: {}
                    deliveryMessage: ''
                    labelSizes: []
                    insuredMailFee: {}
                    dates: []
                    rateId: {}
                provider_code: upsready
                carrier_code: ''
                rate_code: ''
                rate_id: ''
    orderTaxes_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/orderTaxes_Base'
          examples:
            response:
              value:
                - id: 13
                  order_id: 138
                  order_address_id: 39
                  tax_rate_id: 1
                  tax_class_id: 0
                  name: Tax
                  class: Default Tax Class
                  rate: '8.0000'
                  priority: 0
                  priority_amount: '17.6400'
                  line_amount: '17.6400'
                - id: 14
                  order_id: 138
                  order_address_id: 40
                  tax_rate_id: 1
                  tax_class_id: 0
                  name: Tax
                  class: Default Tax Class
                  rate: '8.0000'
                  priority: 0
                  priority_amount: '4.4000'
                  line_amount: '4.4000'
    404_Resp:
      description: Not Found
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                status:
                  type: integer
                message:
                  type: string
          examples:
            response:
              value:
                - status: 404
                  message: The requested resource was not found.
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Orders | modify | `store_v2_orders` |
        |  Orders | read-only | `store_v2_orders_read_only` |
        
        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/docs/start/authentication/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/docs/start/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/docs/start/authentication/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/docs/start/about/status-codes).
      type: apiKey
      in: header
  schemas:
    shipping_provider_standard:
      title: Standard Shipping Provider
      type: string
      description: An enum identifying one of several core shipping providers.
      enum:
        - auspost
        - canadapost
        - endicia
        - usps
        - fedex
        - ups
        - upsready
        - upsonline
        - shipperhq
        - royalmail
        - ''
      example: shipperhq
    shipping_provider_custom:
      title: Custom Shipping Provider
      type: string
      description: A string identifying the shipping provider. Some shipping providers may not be listed in the preceding enum list. In addition, if the carrier is a [third-party Shipping Provider](/docs/integrations/shipping), the string takes the form `carrier_{your_carrier_id}`.
      example: carrier_1234567
    order_Resp:
      title: order_Resp
      description: Order object returned in responses.
      allOf:
        - $ref: '#/components/schemas/order_RespOnly'
        - $ref: '#/components/schemas/order_Shared'
      x-internal: false
    ordersCount_Full:
      title: ordersCount_Full
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/ordersCountStatus'
        count:
          description: Total number of orders in the store.
          example: 45
          type: number
      x-internal: false
    orderCoupons_Base:
      title: orderCoupons_Base
      type: object
      properties:
        id:
          description: Numeric ID of the coupon code.
          example: 3
          type: integer
        coupon_id:
          description: Numeric ID of the associated coupon.
          example: 1
          type: integer
        order_id:
          description: Numeric ID of the associated order.
          example: 120
          type: integer
        code:
          description: Coupon code, as a string.
          example: S2549JM0Y
          nullable: true
          type: string
        amount:
          description: Amount of the discount. This information is returned as in integer. Dollar and percentage discounts will return the same. For example, $3 returns as `3` while 5% will return as `5`. Check the discount type to see what type of discount is available.
          anyOf:
            - type: string
            - type: number
            - type: integer
          example: 5
          format: float
        type:
          type: integer
          title: Order Coupon Discount Type
          description: |-
            0: per_item_discount
            1: percentage_discount
            2: per_total_discount
            3: shipping_discount
            4: free_shipping
            5: promotions
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        discount:
          description: |-
            The amount off the order the discount is worth. For example, if an order subtotal is $90 and the discount is $3 then it will return as 3.000. If the discount is
            3% then will return as 2.7000 or the amount of the order. (Float, Float-As-String, Integer)
          example: 2.7
          type: number
      x-internal: false
    orderProducts:
      title: orderProducts
      type: object
      description: ''
      x-internal: false
      properties:
        id:
          description: Numeric ID of this product within this order.
          example: 25
          type: integer
        order_id:
          description: Numeric ID of the associated order.
          example: 120
          type: integer
        product_id:
          description: Numeric ID of the product.
          example: 20
          type: integer
        order_pickup_method_id:
          type: integer
          example: 0
          description: ID of the pickup fulfillment method for this item. Default value is 0 when the item is not fulfilled by pickup method.
        order_address_id:
          description: Numeric ID of the associated order address. Value is `0` for items that are not fulfilled by a pickup method.
          example: 20
          type: integer
        name:
          description: Alias for name_customer - The product name that is shown to customer in storefront.
          example: Fog Linen Chambray Towel - Beige Stripe
          type: string
          minLength: 1
        sku:
          description: User-defined product code/stock keeping unit (SKU).
          example: S-GREE
          type: string
        type:
          type: string
          enum:
            - physical
            - digital
          example: physical
          description: Type of product.
        base_price:
          description: The product’s base price. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        price_ex_tax:
          description: The product’s price excluding tax. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        price_inc_tax:
          description: The product’s price including tax. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        price_tax:
          description: |-
            Amount of tax applied to a single product.
            
            Price tax is calculated as:
            `price_tax = price_inc_tax - price_ex_tax`
            
            (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        base_total:
          description: |-
            Total base price. (Float, Float-As-String, Integer)

            **Note**: The `base_total` is affected by the tax options set up in the control panel and is altered on tax-free orders. See more details on how `base_total` is affected by visiting the [Responsive Tax Display Settings](https://support.bigcommerce.com/s/article/Manual-Tax-Setup) overview. If the `base_total` is `$0`, it's due to the store's tax settings. To learn more about tax settings in the control panel, check out this [Tax Settings](https://support.bigcommerce.com/s/article/Tax-Overview?language=en_US#tax-settings) support article.
          example: '54.0000'
          type: string
        total_ex_tax:
          description: Total base price excluding tax. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        total_inc_tax:
          description: Total base price including tax. (Float, Float-As-String, Integer)
          example: '54.0000'
          type: string
        total_tax:
          description: |-
            Total tax applied to products.
            For example, if quantity if 2, base price is 5 and tax rate is 10%. price_tax will be $.50 and total_tax will be $1.00.

            If there is a manual discount applied total_tax is calculated as the following:
            `(price_ex_tax - discount)*tax_rate=total_tax`.
            (Float, Float-As-String, Integer)
          example: '0.5200'
          type: string
        quantity:
          description: Quantity of the product ordered.
          example: 1
          type: integer
        base_cost_price:
          description: The product’s cost price.  This can be set using the Catalog API. (Float, Float-As-String, Integer)
          example: '50.0000'
          type: string
        cost_price_inc_tax:
          description: |-
            The product’s cost price including tax. (Float, Float-As-String, Integer)
            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes.
          example: '50.0000'
          type: string
        cost_price_ex_tax:
          description: |-
            The product cost price excluding tax. (Float, Float-As-String, Integer)
            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes.
          example: '50.0000'
          type: string
        weight:
          description: Weight of the product. (Float, Float-As-String, Integer)
          example: 1
          oneOf:
            - type: number
            - type: string
        width: 
          description: Product width.
          type: string
          example: "1.0000"
        height: 
          description: Product height.
          type: string
          example: "1.0000"
        depth: 
          description: Product depth.
          type: string
          example: "1.0000"
        cost_price_tax:
          description: |-
            Tax applied to the product’s cost price. (Float, Float-As-String, Integer)
            The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only
          example: '54.0000'
          type: string
        is_refunded:
          type: boolean
          description: Whether the product has been refunded.
          example: false
        quantity_refunded:
          type: number
          description: The total quantity of product refunded from this transaction.
          example: 0
        refund_amount:
          type: string
          description: The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer)
          example: '0.0000'
          deprecated: true
        return_id:
          description: Numeric ID for the refund.
          example: 0
          type: number
        wrapping_id: 
          description: ID of the gift wrapping option.
          example: 0
          type: integer
        wrapping_name:
          description: Name of gift-wrapping option.
          example: null
          type: string
          nullable: true
        base_wrapping_cost:
          description: The value of the base wrapping cost. (Float, Float-As-String, Integer)
          example: '0.0000'
          oneOf:
            - type: string
            - type: number
        wrapping_cost_ex_tax:
          description: The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_inc_tax:
          description: The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_tax:
          description: Tax applied to gift-wrapping option. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_message:
          description: Message to accompany gift-wrapping option.
          type: string
        quantity_shipped:
          description: Quantity of this item shipped.
          example: 0
          type: number
        event_name:
          description: Name of promotional event/delivery date.
          example: null
          type: string
          nullable: true
        event_date:
          description: Date of the promotional event/scheduled delivery.
          type: string
          format: date
          nullable: true
        fixed_shipping_cost:
          description: Fixed shipping cost for this product. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        ebay_item_id:
          description: Item ID for this product on eBay.
          type: string
        ebay_transaction_id:
          description: Transaction ID for this product on eBay.
          type: string
        option_set_id:
          description: Numeric ID of the option set applied to the product.
          example: 5
          type: integer
          nullable: true
        parent_order_product_id:
          description: ID of a parent product.
          type: integer
          nullable: true
        is_bundled_product:
          description: Whether this product is bundled with other products.
          example: false
          type: boolean
        bin_picking_number:
          description: Bin picking number for the physical product.
          type: string
        external_id:
          description: (Read-only) ID of the order in another system. For example, the Amazon order ID if this is an Amazon order.
          type: string
          nullable: true
          readOnly: true
        brand:
          description: The productʼs brand.
          type: string
        applied_discounts:
          description: Array of objects containing discounts applied to the product.
          type: array
          items:
            $ref: '#/components/schemas/orderProductAppliedDiscounts'
        product_options:
          description: Array of product option objects.
          type: array
          items:
            $ref: '#/components/schemas/orderProductOptions'
        configurable_fields: 
          type: array
          description: Available for only [Catalog V2 stores](/docs/store-operations/catalog/migration).
          items:
            type: object
            properties:
              name:
                type: string
                example: Engraving
              value:
                type: string
                example: Rabin
        upc:
          type: string
          maxLength: 255
          description: Universal Product Code. Can be written to for custom products and catalog products.
        variant_id:
          type: integer
          description: Products `variant_id`. PUT or POST. This field is not available for custom products.
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront.
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in Control Panel.
        gift_certificate_id:
          type: integer
          example: 52
          description: ID of the associated gift certificate.
          nullable: true
        discounted_total_inc_tax:
          type: string
          example: '0.0000'
          description: |-
            Represent the correct total amount of the line item after deducting all the discounts and including the tax. This number can be used for accounting purpose.
            
            This makes it easier to have the "shopper paid" value for a line item and api user doesn't have to do any calculation to deduct discount on the client side.

            This field includes all types of discounts (automatic, coupon, manual) and therefore if you use this value, you don't need to deduct any more discounts at line item level or order level.
    orderCount:
      title: orderCount
      example:
        count: 27
      type: object
      properties:
        count:
          description: ''
          example: 27
          type: number
      x-internal: false
    orderShippingAddress:
      title: orderShippingAddress
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 1
              description: ID of this shipping address.
            order_id:
              type: integer
              description: ID of the order.
              example: 100
            items_total:
              type: number
              example: 1
              description: The total number of items in the order.
            items_shipped:
              type: number
              description: The number of items that have been shipped.
              example: 0
            base_cost:
              type: string
              description: The base value of the order’s items. (Float, Float-As-String, Integer)
              example: '5.0000'
            cost_ex_tax:
              type: string
              example: '0.0000'
              description: The value of the order’s items, excluding tax. (Float, Float-As-String, Integer)
            cost_inc_tax:
              type: string
              description: The value of the order’s items, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
            cost_tax:
              type: string
              description: The tax amount on the order. (Float, Float-As-String, Integer)
              example: '0.0000'
            cost_tax_class_id:
              type: integer
              description: |-
                The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)
              example: 2
            base_handling_cost:
              type: string
              description: The base handling charge. (Float, Float-As-String, Integer)
              example: '0.0000'
            handling_cost_ex_tax:
              type: string
              description: The handling charge, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
            handling_cost_inc_tax:
              type: string
              description: The handling charge, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
            handling_cost_tax:
              type: string
              example: '0.0000'
            handling_cost_tax_class_id:
              type: integer
              description: |-
                A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
              example: 2
            shipping_zone_id:
              type: number
              description: Numeric ID of the shipping zone.
              example: 1
            shipping_zone_name:
              type: string
              description: Name of the shipping zone.
              example: United States
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
            shipping_quotes:
              $ref: '#/components/schemas/shippingQuotes_Resource'
        - $ref: '#/components/schemas/shippingAddress_Base'
        - type: object
          properties:
            shipping_method:
              type: string
              description: Text code identifying the BigCommerce shipping module selected by the customer.
              example: Free Shipping
      x-internal: false
    orderTaxes_Base:
      title: orderTaxes_Base
      type: object
      properties:
        id:
          description: The unique numeric identifier of the taxes object.
          example: 1
          type: integer
        order_id:
          description: |-
            The unique numeric identifier of the order to which the tax was applied. NOTE: Not included if the store was using the automatic tax feature.
          example: 129
          type: integer
        order_address_id:
          description: |-
            The unique numeric identifier of the order address object associated with the order. NOTE: Not included if the store was using the automatic tax feature.
          example: 29
          type: integer
        tax_rate_id:
          description: The unique numeric identifier of the tax rate.
          example: 1
          type: integer
        tax_class_id:
          description: |-
            The unique numeric identifier of the tax class object. NOTE: Will be 0 if automatic tax was enabled, or if the default tax class was used.
          example: 0
          type: integer
        name:
          description: The name of the tax class object.
          example: "State Tax"
          type: string
        class:
          description: |-
            The name of the type of tax that was applied. NOTE: It will be "Automatic Tax" if automatic tax was enabled. It will be "API Tax Override" if the order was created with V2 Orders API.
          example: Gift Wrapping
          type: string
        rate:
          description: The tax rate.  The priority order in which the tax is applied (Float, Float-As-String, Integer)
          example: '8.0000'
          type: string
        priority:
          description: The order in which the tax is applied.
          example: 0
          type: number
        priority_amount:
          description: The amount of tax calculated on the order. (Float, Float-As-String, Integer)
          example: '1.5200'
          type: string
        line_amount:
          description: (Float, Float-As-String, Integer)
          example: '1.5200'
          type: string
        order_product_id:
          type: string
          description: If the `line_item_type` is `item` or `handling` then this field will be the order product id. Otherwise the field will return as null.
        line_item_type:
          type: string
          enum:
            - item
            - shipping
            - handling
            - gift-wrapping
          description: Type of tax on item.
      x-internal: false
    orderShipment:
      title: orderShipment
      type: object
      description: ''
      properties:
        id:
          description: Shipment ID.
          example: 1
          type: integer
        order_id:
          description: ID of the order associated with this shipment.
          example: 120
          type: integer
        customer_id:
          description: ID of this order’s customer.
          example: 5
          type: integer
        order_address_id:
          description: ID of the desired `shipping_address` associated with the shipment.
          example: 20
          type: integer
        date_created:
          type: string
          description: Creation date for the shipment.
        tracking_number:
          description: Tracking number of the shipment.
          example: w4se4b6ASFEW4T
          type: string
        merchant_shipping_cost:
          description: Shipping cost for the merchant.
          example: "1.0000"
          type: string
        shipping_method:
          description: |-
            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.
            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.
          example: Ship by Weight
          type: string
        shipping_provider:
          anyOf:
            - $ref: '#/components/schemas/shipping_provider_standard'
            - $ref: '#/components/schemas/shipping_provider_custom'
        tracking_carrier:
          type: string
          title: Tracking Carrier
          description: |-
            Tracking carrier for the shipment.
            Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
          example: ""
        tracking_link:
          type: string
          description: The custom tracking link supplied on POST or PUT shipments. For the auto-generated tracking link see the `generated_tracking_link` property.
        comments:
          type: string
          description: Comments the shipper wishes to add.
          maxLength: 65535
        billing_address:
          $ref: '#/components/schemas/billingAddress_Base'
        shipping_address:
          $ref: '#/components/schemas/shippingAddress_Base'
        items:
          description: |-
            The items in the shipment. This object has the following members, all integer: order_product_id (required), quantity (required), product_id (read-only). A sample items value might be: [ {"order_product_id":16,"product_id": 0,"quantity":2} ]
          type: array
          items:
            type: object
            properties:
              order_product_id:
                type: integer
                example: 5
              product_id:
                type: integer
                example: 87
              quantity:
                type: integer
                example: 2
        shipping_provider_display_name:
          type: string
          description: The human-readable name for the `shipping_provider`.
          readOnly: true
        generated_tracking_link:
          type: string
          description: The tracking link that is generated using the combination of either the `tracking_number` and `shipping_provider` or `tracking_number` and `tracking_carrier`. This will be empty if the custom `tracking_link` value is provided.
      x-internal: false
    orderConsignments_Resource:
      title: orderConsignments_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: URL where you can use a GET request to get the order consignments.
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/101/consignments'
          type: string
        resource:
          description: Path where you can use a GET request to get the order consignments.
          readOnly: true
          example: /orders/101/consignments
          type: string
    products_Resource:
      title: products_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: ''
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products'
          type: string
        resource:
          description: ''
          readOnly: true
          example: /orders/129/products
          type: string
      x-internal: false
    shippingAddresses_Resource:
      title: shippingAddress_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: URL of the shipping address for API requests.
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses'
          type: string
        resource:
          description: ''
          readOnly: true
          example: /orders/129/shippingaddresses
          type: string
      x-internal: false
    coupons_Resource:
      title: coupons_Resource
      type: object
      readOnly: true
      properties:
        url:
          description: URL of the coupons for API requests.
          readOnly: true
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons'
          type: string
        resource:
          description: Resource of the coupons.
          readOnly: true
          example: /orders/129/coupons
          type: string
      x-internal: false
    orderProductAppliedDiscounts:
      title: orderProductAppliedDiscounts
      type: object
      description: |-
        When applying a manual discount to an order (not a product level discount), the discount is distributed across products in proportion to the products price.
        `(total_manual_discount*price_ex_tax)/subtotal_ex_tax`
      properties:
        id:
          description: Name of the coupon applied to order.
          example: total-coupon
          type: string
        amount:
          description: Amount of the discount.(Float, Float-As-String, Integer)
          example: '1.2100'
          type: string
        name:
          description: |-
            Name of the coupon.
            `Manual Discount` when creating a manual discount.
          example: $5 off
          type: string
        code:
          description: |-
            Coupon Code.
            There is no code when creating a manual discount.
          example: S2549JM0Y
          nullable: true
          type: string
        target:
          type: string
          enum:
            - order
            - product
          description: Determines if the discount if discount was applied at the Order or Product level. Read Only.
      x-internal: false
    orderProductOptions:
      title: orderProductOptions
      type: object
      properties:
        id:
          description: The unique numerical ID of the option; increments sequentially.
          example: 16
          type: integer
        option_id:
          description: Numeric ID of the associated option.
          example: 18
          type: integer
        order_product_id:
          description: ''
          example: 53
          type: integer
        product_option_id:
          description: Numeric ID of an option applied to the product from a list of options available to the product.
          example: 120
          type: integer
        display_name:
          description: Alias for display_name_customer. The product option name that is shown to customer in the storefront.
          example: Size
          type: string
        display_value:
          description: Alias for display_value_customer. The product option value that is shown to customer in storefront.
          example: S
          type: string
        value:
          description: For file-upload type, itʼs a unique string describing the properties of the file upload. For other types, itʼs the value of the property.
          example: "{\"originalName\":\"BigCommerceLogo.jpeg\",\"temporaryPath\":\"121_fbfb71dfc5a5d911f62d8e35dedd6e45.jpeg\",\"path\":\"f606efcae7e179970b19c3658142c5d0.jpeg\"}"
          type: string
        type:
          enum:
            - Checkbox
            - Date field
            - File Upload
            - Multi-line text field
            - Multiple choice
            - Product Pick List
            - Swatch
            - Text field
          example: Checkbox
          description: Option Type
        name:
          description: The option’s name, as used internally. Must be unique.
          example: Apparel sizes
          type: string
        display_style:
          description: 'How it is displayed on the storefront. Examples include Drop-down, radio buttons, or rectangles.'
          example: Rectangle
          type: string
        display_name_customer:
          type: string
          example: couleur
          description: The product option name that is shown to customer in storefront.
        display_name_merchant:
          type: string
          example: color
          description: The product option name that is shown to merchant in Control Panel.
        display_value_customer:
          type: string
          example: bleu
          description: The product option value that is shown to customer in storefront.
        display_value_merchant:
          type: string
          example: blue
          description: The product option value that is shown to merchant in Control Panel.
      x-internal: false
    formFields:
      title: formFields
      type: object
      x-internal: false
      properties:
        name:
          type: string
          example: License ID
          description: The form field name.
        value:
          description: The form field value.
          oneOf:
            - type: number
            - type: string
            - type: array
              items: {}
          example: 123BAF
          items:
            type: string
      x-examples:
        Example 1:
          name: License ID
          value: 123BAF
        Example 2:
          name: Borrowing Amount
          value: 12.2
        Example 3:
          name: Acceptable Sizes
          value:
            - Small
            - Medium
        Capture Custom Billing Address Form Fields:
          data:
            billing_address:
              form_fields:
                - name: picklist1
                  value: picklist-value-2
                - name: textfield1
                  value: text2
                - name: radiobutton1
                  value: radio-value-2
                - name: checkbox1
                  value: checkbox-value-2
                - name: multilinetextfield
                  value: line1\line2
                - name: numberonlyfield
                  value: 123.2
                - name: passwordfield1
                  value: password2
        Capture Custom Shipping Address Form Fields:
          data:
            shipping_address:
              id: 23
              form_fields:
                - name:  picklist1
                  value: picklist-value-3
        Capture Custom Consignment Shipping Form Fields:
          data:
            consignments:
              Shipping:
                id: 23
                form_fields:
                  - name: picklist1
                    value: picklist-value-2
    orderMessages:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          order_id:
            type: integer
          staff_id:
            type: integer
          customer_id:
            type: integer
          type:
            type: string
          subject:
            type: string
          message:
            type: string
          status:
            type: string
          is_flagged:
            type: boolean
          date_created:
            type: string
          customer:
            type: object
            properties: {}
      title: orderMessages
      x-internal: false
    shippingQuotes_Resource:
      type: object
      title: shippingQuotes_Resource
      readOnly: true
      properties:
        url:
          type: string
          readOnly: true
          description: |-
            This URL will return a 204 for shipping quotes. To return shipping quotes:
            `/shipping_addresses/shipping_address_id/shipping_quotes`
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/shippingaddresses/64/shippingquotes'
        resource:
          type: string
          readOnly: true
          example: orders/163/shippingaddresses/64/shippingquotes
          description: |-
            This URL will return a 204 for shipping quotes. To return shipping quotes:
            `/shipping_addresses/shipping_address_id/shipping_quotes`
      x-internal: false
    shippingQuotes_Base:
      type: object
      title: shippingQuotes_Base
      properties:
        id:
          type: string
          description: ID of the shipping quote.
          example: '24'
        uuid:
          type: string
          description: UUID of the shipping quote.
          example: a72acc8d-504b-4a40-8534-7c54d997ed59
        timestamp:
          type: string
          description: Time the order was created in RFC 2822 format.
        shipping_provider_id:
          type: string
          example: bcstatic
          description: ID of the shipping provider.
        shipping_provider_quote:
          type: array
          description: This can vary based on the shipping provider. Manual shipping methods such as fixed will return an empty array. Shipping providers such as UPS will return an object with the shipping information. Since the shipping quote is tied to a shipping address only one quote will return in the response.
          items:
            type: object
            properties: {}
            additionalProperties: true
        provider_code:
          type: string
          example: shipping_byweight
          description: Code of the shipping provider.
        carrier_code:
          type: string
          description: Code of the shipping carrier.
        rate_code:
          type: string
          description: Type of delivery. This can vary based on shipping quote.
        rate_id:
          type: string
          description: This can vary based on shipping quote.
        method_id:
          type: integer
          description: Shipping method ID
      x-internal: false
    orderShipment_Post:
      type: object
      title: orderShipment_Post
      x-internal: false
      properties:
        order_address_id:
          description: ID of the desired `shipping_address` associated with the shipment.
          example: 20
          type: integer
        tracking_number:
          type: string
          description: Tracking number of the shipment.
          example: w4se4b6ASFEW4T
          maxLength: 50
        tracking_link:
          type: string
          description: The custom tracking link supplied on POST or PUT shipments. For the auto-generated tracking link see the `generated_tracking_link` property.
          example: https://www.mycustomtrackinglink.com/tracking
          maxLength: 500
        merchant_shipping_cost: 
          type: string
          description: Shipping cost for the merchant.
          example: "1.0000"
        shipping_method:
          description: |
            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.
            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.
          example: Ship by Weight
          type: string
        shipping_provider:
          anyOf:
            - $ref: '#/components/schemas/shipping_provider_standard'
            - $ref: '#/components/schemas/shipping_provider_custom'
        tracking_carrier:
          type: string
          title: Tracking Carrier
          description: |-
            Tracking carrier for the shipment.
            Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
          example: ""
        comments:
          type: string
          description: Comments the shipper wishes to add.
          maxLength: 65535
        items:
          description: |-
            The items in the shipment. This object has the following members, all integer: order_product_id (required), quantity (required), product_id (read-only). A sample items value might be: [ {"order_product_id":16,"product_id": 0,"quantity":2} ]
          type: array
          items:
            type: object
            properties:
              order_product_id:
                type: integer
                example: 5
              quantity:
                type: integer
                example: 2
    orderShipment_Put:
      type: object
      title: orderShipment_Put
      properties:
        order_address_id:
          description: ID of the desired `shipping_address` associated with the shipment.
          example: 20
          type: integer
        tracking_number:
          description: Tracking number of the shipment.
          example: w4se4b6ASFEW4T
          type: string
        merchant_shipping_cost: 
          type: string
          description: Shipping cost for the merchant.
          example: "1.0000"
        shipping_method:
          description: |
            Additional information to describe the method of shipment (ex. Standard, Ship by Weight, Custom Shipment). Can be used for live quotes from certain shipping providers.
            If different from `shipping_provider`, `shipping_method` should correspond to `tracking_carrier`.
          example: Ship by Weight
          type: string
        shipping_provider:
          anyOf:
            - $ref: '#/components/schemas/shipping_provider_standard'
            - $ref: '#/components/schemas/shipping_provider_custom'
        tracking_carrier:
          type: string
          title: Tracking Carrier
          description: |-
            Tracking carrier for the shipment.
            Acceptable values for `tracking_carrier` include an empty string (`""`) or one of the valid [tracking-carrier values](https://github.com/bigcommerce/dev-docs/blob/master/assets/csv/tracking_carrier_values.csv).
          example: ""
        tracking_link:
          type: string
          description: The custom tracking link supplied on POST or PUT shipments. For the auto-generated tracking link see the `generated_tracking_link` property.
          example: https://www.mycustomtrackinglink.com/tracking
          maxLength: 500
        comments:
          type: string
          description: Comments the shipper wishes to add.
          maxLength: 65535
      x-internal: false
    orderStatus_Base:
      title: orderStatus_Base
      type: object
      properties:
        id:
          description: The ID of the type of order status.
          example: 0
          type: integer
        name:
          description: Name of the type of order status.
          example: Incomplete
          type: string
        system_label:
          description: System name of the type of order status.
          example: Incomplete
          type: string
        custom_label:
          description: Custom order status label given in the Control Panel.
          example: Incomplete- Waiting on Shipment
          type: string
        system_description:
          description: System description of the order status.
          example: An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.
          type: string
      x-internal: false
    ordersCountStatus:
      title: ordersCountStatus
      allOf:
        - $ref: '#/components/schemas/orderStatus_Base'
        - type: object
          properties:
            count:
              description: Number of orders that exist with this status.
              example: 6
              type: integer
            sort_order:
              description: The sort order of the order status from the Control Panel.
              example: 0
              type: integer
      x-internal: false
    order_Shared:
      title: order_Shared
      description: Order properties used in `PUT` and `POST` requests and responses.
      type: object
      x-internal: false
      properties:
        base_handling_cost:
          description: The value of the base handling cost. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        base_shipping_cost:
          description: The value of the base shipping cost. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        base_wrapping_cost:
          description: The value of the base wrapping cost expressed as a floating point number to four decimal places in string format.
          example: '0.0000'
          type: string
        channel_id:
          description: Shows where the order originated. The channel_id will default to 1.
          example: 1
          type: integer
        customer_id:
          type: number
        customer_message:
          description: Message that the customer entered (number, options) -o the `Order Comments` box during checkout.
          example: Thank you
          type: string
        date_created:
          description: The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`.
          type: string
        discount_amount:
          description: Amount of discount for this transaction. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        ebay_order_id:
          description: If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.
          example: '0'
          type: string
        external_id:
          description: (Read-only) The order ID in another system, such as the Amazon order ID if this is an Amazon order.
          example: null
          type: string
          nullable: true
          readOnly: true
        external_merchant_id:
          description: The merchant ID represents an upstream order from an external system. It is the source of truth for orders. After setting it, you cannot write to or update the `external_merchant_id`. For example, you can update the Facebook by Meta page ID in a POST request, but a PUT request to update the order will return a 400 error. Please remove it from your request before trying again.
          example: null
          type: string
          nullable: true
        external_source:
          description: |-
            This value identifies an external system that generated the order and submitted it to BigCommerce with the Orders API.
            * When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).
            * If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.
            * If you do not provide a value, then it will default to null.
          example: null
          type: string
          nullable: true
        geoip_country:
          description: The full name of the country where the customer made the purchase, based on the IP.
          example: United States
          type: string
        geoip_country_iso2:
          description: The country where the customer made the purchase, in ISO2 format, based on the IP.
          example: US
          type: string
        handling_cost_ex_tax:
          description: The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        handling_cost_inc_tax:
          description: The value of the handling cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        ip_address:
          type: string
          description: |-
            IPv4 Address of the customer, if known.

            Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address` value will reset the `ip_address_v6` value and vice versa.
          example: 12.345.678.910
          maxLength: 30
        ip_address_v6:
          type: string
          description: |-
            IPv6 Address of the customer, if known.

            Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address_v6` value will reset the `ip_address` value and vice versa.
          example: '2001:db8:3333:4444:5555:6666:7777:8888'
          maxLength: 39
        items_shipped:
          description: The number of items that have been shipped.
          example: 0
          type: number
        items_total:
          description: The total number of items in the order.
          example: 1
          type: number
        order_is_digital:
          description: Whether this is an order for digital products.
          example: false
          type: boolean
        payment_method:
          description: 'The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.'
          type: string
        payment_provider_id:
          description: The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).
          example: ''
          oneOf:
            - type: string
            - type: number
        refunded_amount:
          description: The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_ex_tax:
          description: The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_inc_tax:
          description: The value of shipping cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        staff_notes:
          type: string
          description: Any additional notes for staff.
          example: Send Saturday
          maxLength: 65535
        status_id:
          description: The status ID of the order.
          type: integer
        subtotal_ex_tax:
          description: Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        subtotal_inc_tax:
          description: Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        tax_provider_id:
          description: |
            Read-only.
            BasicTaxProvider - Tax is set to manual and order is created in the store.
            
            AvaTaxProvider - Tax is set to automatic and order is created in the store. Used for Avalara.
            
            "" (empty string) - The order is created with the API, or the tax provider is unknown.
          type: string
        customer_locale:
          type: string
          example: en
          description: The customer’s locale.
        external_order_id:
          type: string
          example: external-order-id
          description: The order ID in another system, such as the Amazon Order ID if this is an Amazon order. After setting it, you can update this field using a POST or PUT request.
        total_ex_tax:
          description: Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        total_inc_tax:
          description: Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)
          example: '225.0000'
          type: string
        wrapping_cost_ex_tax:
          description: The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_inc_tax:
          description: The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
    billingAddress_Base:
      type: object
      title: billingAddress_Base
      properties:
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        company:
          type: string
        street_1:
          type: string
          example: 123 Main Street
        street_2:
          type: string
        city:
          type: string
          example: Austin
        state:
          type: string
          example: TX
        zip:
          type: string
          example: '12345'
          description: The billing address must include the ZIP code. The ZIP code must be two or more characters.
        country:
          type: string
          example: United States
        country_iso2:
          type: string
          example: US
        phone:
          type: string
        email:
          type: string
          example: janedoe@example.com
      required:
        - zip
      x-internal: false
    shippingAddress_Base:
      type: object
      title: shippingAddress_Base
      description: Shipping Address properties common to all requests and responses.
      properties:
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        company:
          type: string
        street_1:
          type: string
          example: 123 Main Street
          description: Street address (first line).
        street_2:
          type: string
          description: Street address (second line).
        city:
          type: string
          example: Austin
        state:
          type: string
          example: Texas
        zip:
          type: string
          example: '12345'
          description: Zip or postal code, as a string.
        country:
          type: string
          example: United States
        country_iso2:
          type: string
          example: US
          description: 2-letter ISO Alpha-2 code for the country.
        phone:
          type: string
          description: Recipient’s telephone number.
        email:
          type: string
          example: janedoe@example.com
          description: 'Recipient’s email address. '
      x-internal: false
    order_RespOnly:
      title: order_RespOnly
      type: object
      description: Properties that are only for order response bodies.
      properties:
        id:
          type: integer
          description: Read-only. The ID of the order.
          example: 118
        date_modified:
          type: string
          description: A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT request. RFC-2822
        date_shipped:
          type: string
          description: A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT request. RFC-2822
        cart_id:
          description: The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a read-only field; do not set or modify its value in a POST or PUT request.
          example: a8458391-ef68-4fe5-9ec1-442e6a767364
          type: string
        status:
          type: string
          description: The status will include one of the (string, options) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.
          example: Awaiting Fulfillment
        subtotal_tax:
          description: A read-only value. Do not attempt to set or modify this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_tax:
          description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        shipping_cost_tax_class_id:
          description: |-
            Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (NOTE: Value ignored if automatic tax is enabled on the store.)
          example: 2
          type: integer
        handling_cost_tax:
          description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        handling_cost_tax_class_id:
          description: |-
            A read-only value. Do not attempt to set or modify this value in a POST or PUT request. 

            (NOTE: Value ignored if automatic tax is enabled on the store.)
          example: 2
          type: integer
        wrapping_cost_tax:
          description: A read-only value. Do not attempt to modify or set this value in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        wrapping_cost_tax_class_id:
          description: |-
            A read-only value. Do not attempt to set or modify this value in a POST or PUT request.  

            NOTE: Value ignored if automatic tax is enabled on the store.
          example: 3
          type: integer
        payment_status:
          type: string
          description: A read-only value. Do not attempt to set or modify this value in a POST or PUT request.
          enum:
            - authorized
            - captured
            - capture pending
            - declined
            - held for review
            - paid
            - partially refunded
            - pending
            - refunded
            - void
            - void pending
        store_credit_amount:
          description: Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        gift_certificate_amount:
          description: A read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '0.0000'
          type: string
        currency_id:
          description: The display currency ID. Depending on the currency selected, the value can be different from the transactional currency. A read-only value. Do not pass in a POST or PUT request. In v2 display currency is set to the transactional currency, ''default_currency_id''.
          example: 1
          type: integer
        currency_code:
          description: The currency code of the display currency used to present prices to the shopper on the storefront. Depending on the currency selected, the value can be different from the transactional currency. A read-only value. Do not pass in a POST or PUT request.
          example: USD
          type: string
        currency_exchange_rate:
          description: The exchange rate between the store’s default currency and the display currency. A read-only value. Do not pass in a POST or PUT request. For orders created using the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1). (Float, Float-As-String, Integer)
          example: '1.0000000000'
          type: string
        default_currency_id:
          description: The transactional currency ID. A read-only value. Do not pass in a POST or PUT request.
          example: 1
          type: integer
        default_currency_code:
          description: The currency code of the transactional currency the shopper pays in.
          example: EUR
          type: string
        store_default_currency_code:
          description: The currency code of the storeʼs default currency.
          example: USD
          type: string
        store_default_to_transactional_exchange_rate:
          description: The exchange rate between the storeʼs default currency and the transactional currency used in the order.
          example: '100.0000000000'
          type: string
        coupon_discount:
          description: A read-only value. Do not pass in a POST or PUT request. (Float, Float-As-String, Integer)
          example: '5.0000'
          type: string
        shipping_address_count:
          type: number
          description: The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT.
        is_email_opt_in:
          description: Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.
          example: false
          type: boolean
        order_source:
          description: |-
            The `order_source` is set upon order creation and reflects the origin of the order. It will indicate whether the order was created by one of the following:
            * storefront 
            * control panel
            * manual order
            * /v2/orders API
            * Checkout API
            * or by an integration with an external platform such as Facebook by Meta or Amazon.
          type: string
        consignments:
          $ref: '#/components/schemas/orderConsignments_Resource'
        products:
          $ref: '#/components/schemas/products_Resource'
        shipping_addresses:
          $ref: '#/components/schemas/shippingAddresses_Resource'
        coupons:
          $ref: '#/components/schemas/coupons_Resource'
        status_id:
          type: integer
          example: 7
          description: The status ID of the order.
        billing_address:
          $ref: '#/components/schemas/billingAddress_Resp'
    orderCustomProduct_Put:
      type: object
      title: Custom product
      description: |-
        **Usage notes:**

        To `add` a custom product to an existing order, don't include `id` in the payload. You must provide a non-empty value for at least one of these fields: `name`, `name_customer`, or `name_merchant`.
        To `update` an order product line, `id` is required. The payload should only contain the fields that need to be updated. You cannot change omitted fields.

        Note the following constraints and default field values:
         - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.
         - `name` and `name_customer` always hold the same value; updating either `name` or `name_customer` will change the value for both of those fields.
         - If both fields `name` and `name_customer` are present, they must have the same value.
         - When updating an existing order product, if you omit both fields `name` and `name_customer` from the request, they will not be updated.
         - When updating an existing order product, if you omit `name_merchant` from the request, it will not be updated.
         - When adding a product, if you omit `name_merchant`, it will be set to the value of `name` (or `name_customer`).
         - When adding a new product to an existing order, if you omit both fields `name` and `name_customer`, they will be set to the value of `name_merchant`.
      properties:
        name:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: |
            Alias for name_customer. The product name that is shown to customer in storefront.
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront.
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in control panel.
        quantity:
          type: integer
        price_ex_tax:
          type: number
        price_inc_tax:
          type: number
        sku:
          type: string
        upc:
          type: string
        id:
          type: integer
          description: ID of the product line.
      required:
        - name
        - quantity
        - price_ex_tax
        - price_inc_tax
      x-internal: false
    orderCatalogProduct_Put:
      title: Catalog product
      description: |
        **Usage notes**
        
         To `add` a product to an existing order, don't include `id` in the payload. When adding a product with variants, `product_options` are required.
         To `update` an order product line, `id` is required. The payload should only contain the fields that need to be updated. The fields that you omit will not be changed.

         Note the following constraints and default field values:
         - `xxx` and `xxx_customer` always hold the same value. Updating either `xxx` or `xxx_customer` will change the value of both fields.
         - If both fields `xxx` and `xxx_customer` are present, they must have same value.
         - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer`, and `xxx_merchant`.
         - When updating an existing order product without changing the variant, product, or product options, requests that do not contain `xxx_merchant` will fail.
         - When updating an existing order product, requests that do not contain both fields `xxx` and `xxx_customer` will fail.
         - Empty strings `''` and `null` are invalid for `xxx`, `xxx_customer, and `xxx_merchant`. If `xxx_merchant` is omitted, it will default to have the catalog value.
         - If both fields `xxx` and `xxx_customer` are omitted from the request, they will default to the catalog value.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: The order product `id`. To add a product to an existing order, donʼt include `id` in the payload. `id` is required when updating an order product.
        - $ref: '#/components/schemas/orderCatalogProduct_Post'
      x-internal: false
    orderRemoveProduct_Put:
      title: Remove Product from Order
      type: object
      properties:
        id:
          type: integer
          description: |-
            The `id` returned from a request to the [List order products](/docs/rest-management/orders/order-products#list-order-products) or the [Get an order product](/docs/rest-management/orders/order-products#get-an-order-product) endpoint.
          example: 123
        product_id:
          type: integer
          description: The numeric ID of the product.
          example: 117
        quantity:
          type: integer
          description: The quantity of product being removed.
          example: 1
        product_options:
          type: array
          description: List of product variant options and modifiers. `product_options` are required when removing a product with variants and not specifying the `variant_id`, or when products have mandatory modifiers.
          items:
            type: object
            properties:
              cost_price_inc_tax:
                type: string
                description: |-
                  The product’s cost price including tax. (Float, Float-As-String, Integer)
                  The cost of your products to you; this is never shown to customers, but can be used for accounting purposes.
                example: '50.0000'
              price_ex_tax:
                type: string
                description: |-
                  The products cost price excluding tax. (Float, Float-As-String, Integer)
                  The cost of your products to you; this is never shown to customers, but can be used for accounting purposes. Read Only.
                readOnly: true
                example: '0.0000'
    orderCatalogProduct_Post:
      title: orderCatalogProduct_Post
      description: |
        Note:
        - `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
        - If both fields `xxx` and `xxx_customer` are present, they must have same value.
        - Empty strings `''` and `null` are invalid for `xxx` and `xxx_customer, and `xxx_merchant`.
        - `xxx`, `xxx_customer`, and `xxx_merchant` default to the value from `catalog` if not supplied in the request.
      type: object
      properties:
        product_id:
          type: integer
        name:
          type: string
          description: Alias for `name_customer`. The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
          example: Fog Linen Chambray Towel - Beige Stripe
          minLength: 1
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
          minLength: 1
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in control panel.
        product_options:
          type: array
          description: List of product variant options and modifiers. `product_options` are required when adding a product with variants and not specifying the `variant_id`, or when products have mandatory modifiers.
          items:
            type: object
            properties:
              id:
                type: integer
                description: Numeric ID of an option applied to the product from a list of options available to the product. This field has the same value as `product_option_id` when [retrieving products in an order](/docs/rest-management/orders/order-products#list-order-products).
              value:
                type: string
                description: |-
                  Depending on the option type, value can be one of the following:
                  - The variant option value id or the modifier value id for modifier types with a list of defined values, such as drop down or checkbox modifiers.
                  - The modifier value for modifier types without a list of defined values, such as text field or date field modifiers.
                  
                  Notes:
                  - The API does not currently support the following option types:
                    - File upload
                    - Pick list
                  - For date modifiers use either the `YYYY-MM-DDThh:mm:ss±hh:mm` or the `YYYY-MM-DD` ISO-8601 formats. The date field modifier values are saved and returned as timestamps. For values entered using the YYYY-MM-DD format, the store timezone is used when creating the timestamp.
                  - For multi-line text field modifiers, use the `\n` characters for separating the lines.
              display_name:
                type: string
                example: couleur
                description: Alias for display_name_customer. The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                minLength: 1
              display_name_customer:
                type: string
                description: The product option name that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                example: couleur
                minLength: 1
              display_name_merchant:
                type: string
                example: color
                description: The product option name that is shown to merchant in Control Panel.
              display_value:
                type: string
                example: bleu
                description: Alias for display_value_customer. The product option value that is shown to customer in storefront. `xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                minLength: 1
              display_value_merchant:
                type: string
                example: blue
                description: The product option value that is shown to merchant in Control Panel.
                minLength: 1
              display_value_customer:
                type: string
                example: bleu
                description: The product option value that is shown to a customer in storefront.`xxx` and `xxx_customer` always hold the same value, updating either `xxx` or `xxx_customer` will change value for both of those fields.
                minLength: 1
        quantity:
          type: integer
        price_inc_tax:
          type: number
        price_ex_tax:
          type: number
        upc:
          type: string
        variant_id:
          type: integer
          description: 'Products `variant_id`. PUT or POST. This field is not available for custom products.'
        wrapping_id:
          type: integer
          description: ID of the gift wrapping that will be used for this product. If provided, then `wrapping_cost_ex_tax` and `wrapping_cost_inc_tax` are required. When updating an order product line item, if `wrapping_id` is set to `0` and no other wrapping fields are provided,then the wrapping will be removed from the order product.
        wrapping_name:
          type: string
          description: If the `wrapping_id` is provided, this field will populate with the name of the gift wrapping that is to be used.
        wrapping_message:
          type: string
        wrapping_cost_ex_tax:
          type: number
          description: When provided, this value should be equal to `wrapping_cost_ex_tax` times quantity to accurately reflect wrapping cost per unit.
        wrapping_cost_inc_tax:
          type: number
          description: When provided, this value should be equal to `wrapping_cost_inc_tax` times quantity to accurately reflect wrapping cost per unit.
      x-internal: false
    orderCustomProduct_Post:
      title: orderCustomProduct_Post
      type: object
      description: |-
        **Usage notes**

        Provide one of these fields with a non-empty value:
          - `name`
          - `name_customer`
          - `name_merchant`
        
        Note the following constraints and default field values:
          - Null and `''` empty strings are invalid for `name`, `name_customer`, and `name_merchant`.
          - `name` and `name_customer` always share the same value; updating one updates the other.
          - When you omit both `name` and `name_customer`, they default to the value of `name_merchant`. 
          - When you omit `name_merchant`, it defaults to the value that `name` and `name_customer` share.
      properties:
        name:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: Alias for name_customer. The product name that is shown to customer in storefront.
          minLength: 1
          maxLength: 250
        name_customer:
          type: string
          example: Fog Linen Chambray Towel - Beige Stripe
          description: The product name that is shown to customer in storefront.
        name_merchant:
          type: string
          example: Towel Type 1
          description: The product name that is shown to merchant in control panel.
        quantity:
          type: integer
        price_inc_tax:
          type: number
        price_ex_tax:
          type: number
        upc:
          type: string
        sku:
          type: string
      required:
        - name
        - quantity
        - price_inc_tax
        - price_ex_tax
      x-internal: false
    order_Put:
      allOf:
        - type: object
          properties:
            base_handling_cost:
              description: The value of the base handling cost. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            base_shipping_cost:
              description: The value of the base shipping cost. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            base_wrapping_cost:
              description: The value of the base wrapping cost expressed as a floating point number to four decimal places in string format.
              example: '0.0000'
              type: string
            billing_address:
              $ref: '#/components/schemas/billingAddress_Put'
            channel_id:
              description: Shows where the order originated. The channel_id will default to 1.
              example: 1
              type: integer
            consignments:
              $ref: '#/components/schemas/orderConsignment_Put'
            customer_id:
              type: number
            customer_message:
              description: Message that the customer entered (number, options) -o the `Order Comments` box during checkout.
              example: Thank you
              type: string
            date_created:
              description: The date the order was created, formatted in the RFC-2822 standard. You set this attribute on Order creation (POST) to support the migration of historical orders. If you do not provide a value, then it will default to the current date/time. e.g., `Tue, 20 Nov 2012 00:00:00 +0000`.
              type: string
            default_currency_code:
              description: A read-only field displays the currency code of the [transactional currency](/docs/store-operations/currencies#display-vs-transactional) the shopper uses.
              type: string
              readOnly: true
            discount_amount:
              description: Amount of discount for this transaction. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            ebay_order_id:
              description: If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.
              example: '0'
              type: string
            external_id:
              description: (Read-only) The order ID in another system, such as the Amazon Order ID if this is an Amazon order.
              example: null
              type: string
              nullable: true
              readOnly: true
            external_merchant_id:
              description: The merchant ID represents an upstream order from an external system. It is the source of truth for orders. After setting it, you cannot write to or update the `external_merchant_id`. For example, you can update the Facebook by Meta page ID in a POST request, but a PUT request to update the order will return a 400 error. Please remove it from your request before trying again.
              example: null
              type: string
              nullable: true
            external_source:
              description: |-
                This value identifies an external system that generated the order and submitted it to BigCommerce with the Orders API.
                * When supplying the value, we recommend combining the type of system and vendor, e.g., ERP (Acumatica) or POS (Square).
                * If you are migrating historical orders processed on another eCommerce platform to BigCommerce, supply the following code as the value: M-MIG. This code will exclude historical orders from the store’s GMV/order count, which factors into pricing.
                * If you do not provide a value, then it will default to null.
              example: null
              type: string
              nullable: true
            geoip_country:
              description: The full name of the country where the customer made the purchase, based on the IP.
              example: United States
              type: string
            geoip_country_iso2:
              description: The country where the customer made the purchase, in ISO2 format, based on the IP.
              example: US
              type: string
            handling_cost_ex_tax:
              description: The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            handling_cost_inc_tax:
              description: The value of the handling cost, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            ip_address:
              type: string
              description: |-
                IPv4 Address of the customer, if known.

                Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address` value will reset the `ip_address_v6` value and vice versa.
              example: 12.345.678.910
              maxLength: 30
            ip_address_v6:
              type: string
              description: |-
                IPv6 Address of the customer, if known.

                Note: You can set either `ip_address` or `ip_address_v6`. Setting the `ip_address_v6` value will reset the `ip_address` value and vice versa.
              example: '2001:db8:3333:4444:5555:6666:7777:8888'
              maxLength: 39
            items_shipped:
              description: The number of items that have been shipped.
              example: 0
              type: number
            items_total:
              description: The total number of items in the order.
              example: 1
              type: number
            order_is_digital:
              description: Whether this is an order for digital products.
              example: false
              type: boolean
            payment_method:
              type: string
              description: 'The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `Cash`,`Test Payment Gateway`, etc.'
            payment_provider_id:
              description: The external Transaction ID/Payment ID within this order’s payment provider (if a payment provider was used).
              oneOf:
                - type: string
                - type: number
            products:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/orderCatalogProduct_Put'
                  - $ref: '#/components/schemas/orderCustomProduct_Put'
                  - $ref: '#/components/schemas/orderRemoveProduct_Put'
            refunded_amount:
              description: The amount refunded from this transaction; always returns `0`. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            shipping_cost_ex_tax:
              description: The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            shipping_cost_inc_tax:
              description: The value of shipping cost, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            staff_notes:
              type: string
              description: Any additional notes for staff.
              example: Send Saturday
              maxLength: 65535
            shipping_addresses:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                  - $ref: '#/components/schemas/shippingAddress_Put'
            status_id:
              description: The status ID of the order.
              type: integer
            subtotal_ex_tax:
              description: 'Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)'
              example: '225.0000'
              type: string
            subtotal_inc_tax:
              description: 'Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)'
              example: '225.0000'
              type: string
            tax_provider_id:
              description: |
                Read-only.
                BasicTaxProvider - Tax is set to manual and order is created in the store.
                
                AvaTaxProvider - Tax is set to automatic and order is created in the store. Used for Avalara.
                
                "" (empty string) - The order is created with the API, or the tax provider is unknown.
              type: string
            customer_locale:
              type: string
              example: en
              description: The customer’s locale.
            external_order_id:
              type: string
              nullable: true
              example: external-order-id
              description: The order ID in another system, such as the Amazon Order ID if this is an Amazon order. After setting it, you can update this field using a POST or PUT request.
            total_ex_tax:
              description: Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)
              example: '225.0000'
              type: string
            total_inc_tax:
              description: Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)
              example: '225.0000'
              type: string
            wrapping_cost_ex_tax:
              description: The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
            wrapping_cost_inc_tax:
              description: The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
              example: '0.0000'
              type: string
    order_Post:
      title: order_Post
      description: Products and Billing address only required for POST operation.
      allOf:
        - type: object
          properties:
            billing_address:
              $ref: '#/components/schemas/billingAddress_Base'
            default_currency_code:
              description: The currency code of the transactional currency the shopper pays in is writable when multi-currency is enabled.
              type: string
            products:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/orderCatalogProduct_Post'
                  - $ref: '#/components/schemas/orderCustomProduct_Post'
            shipping_addresses:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/shippingAddress_Base'
                  - type: object
                    properties:
                      shipping_method:
                        type: string
                        description: Text code identifying the BigCommerce shipping module selected by the customer.
                        example: Free Shipping
            consignments:
              $ref: '#/components/schemas/orderConsignment_Post'
        - $ref: '#/components/schemas/order_Shared'
      x-internal: false
    shippingAddress_Put:
      allOf:
        - $ref: '#/components/schemas/shippingAddress_Base'
        - type: object
          properties:
            shipping_method:
              type: string
              description: Text code identifying the BigCommerce shipping module selected by the customer.
              example: Free Shipping
        - type: object
          properties:
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
    billingAddress_Put:
      allOf:
        - $ref: '#/components/schemas/billingAddress_Base'
        - type: object
          properties:
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
    billingAddress_Resp:
      allOf:
        - $ref: '#/components/schemas/billingAddress_Base'
        - type: object
          properties:
            form_fields:
              type: array
              items:
                $ref: '#/components/schemas/formFields'
    orderConsignment_Put:
      title: ''
      type: object
      properties:
        pickups:
          type: array
          items:
            $ref: '#/components/schemas/pickupConsignment_Put'
      x-examples:
        example-1:
          pickups:
            - id: 99
              pickup_method_id: 1
              pickup_method_display_name: Pick Up
              collection_instructions: Bring your ID
              collection_time_description: 9am - 6pm
              location:
                name: Location 1
                code: LOCATION-1
                address_line_1: 123 Main Street
                address_line_2: Suite 101
                city: Austin
                state: Texas
                postal_code: '78726'
                country_alpha2: US
                email: location1@example.com
                phone: +1 111-111-1111
              line_items:
                - name: Fog Linen Chambray Towel - Beige Stripe
                  name_customer: Fog Linen Chambray Towel - Beige Stripe
                  name_merchant: Towel Type 1
                  quantity: 3
                  price_ex_tax: 0
                  price_inc_tax: 0
                  sku: string
                  upc: string
                  id: 12
    pickupConsignment_Put:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 99
              description: ID of the pickup consignment to update.
            pickup_method_id:
              type: integer
              example: 1
              description: ID of the pickup method.
          required:
            - id
        - $ref: '#/components/schemas/pickupConsignment_Base'
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/pickupConsignmentLocation_Put'
            line_items:
              type: array
              items:
                $ref: '#/components/schemas/orderProduct_Put'
      x-examples:
        example-1:
          id: 99
          pickup_method_id: 1
          pickup_method_display_name: Pick Up
          collection_instructions: Bring your ID
          collection_time_description: 9am - 6pm
          location:
            name: Location 1
            code: LOCATION-1
            address_line_1: 123 Main Street
            address_line_2: Suite 101
            city: Austin
            state: Texas
            postal_code: '78726'
            country_alpha2: US
            email: location1@example.com
            phone: +1 111-111-1111
          line_items:
            - name: Fog Linen Chambray Towel - Beige Stripe
              name_customer: Fog Linen Chambray Towel - Beige Stripe
              name_merchant: Towel Type 1
              quantity: 0
              price_ex_tax: 0
              price_inc_tax: 0
              sku: string
              upc: string
              id: 12
    pickupConsignment_Base:
      title: ''
      type: object
      description: ''
      properties:
        pickup_method_display_name:
          type: string
          description: A name for the pickup method that can be displayed to shoppers.
          maxLength: 250
          example: Pick Up
        collection_instructions:
          type: string
          description: A message for shoppers explaining how to collect their pickup order.
          example: Bring your ID.
        collection_time_description:
          type: string
          description: A message for shoppers indicating the estimated time their pickup order will be ready for collection.
          maxLength: 250
          example: 9am - 6pm
    pickupConsignmentLocation_Put:
      title: ''
      description: ''
      x-examples:
        example-1:
          name: Location 1
          code: LOCATION-1
          address_line_1: 123 Main Street
          address_line_2: Suite 101
          city: Austin
          state: Texas
          postal_code: '78726'
          country_alpha2: US
          email: location1@example.com
          phone: +1 111-111-1111
      allOf:
        - $ref: '#/components/schemas/pickupConsignmentLocation_Base'
    pickupConsignmentLocation_Base:
      title: ''
      type: object
      description: ''
      properties:
        name:
          type: string
          description: The name of the pickup location.
          example: Location 1
          maxLength: 255
        code:
          type: string
          description: The code of the pickup location.
          example: LOCATION-1
          maxLength: 50
        address_line_1:
          type: string
          description: Street address (first line).
          example: 123 Main Street
          maxLength: 255
        address_line_2:
          type: string
          description: Street address (second line).
          maxLength: 255
          example: Suite 101
        city:
          type: string
          maxLength: 255
          example: Austin
        state:
          type: string
          example: Texas
          maxLength: 255
        postal_code:
          type: string
          example: '78726'
          maxLength: 50
        country_alpha2:
          type: string
          minLength: 2
          maxLength: 2
          example: US
          description: 2-letter ISO Alpha-2 code for the country.
        email:
          type: string
          description: Pickup locationʼs email address.
          maxLength: 255
          example: location1@example.com
        phone:
          type: string
          description: Pickup locationʼs phone number.
          maxLength: 125
          example: +1 111-111-1111
    orderProduct_Put:
      title: orderProduct_Put
      anyOf:
        - $ref: '#/components/schemas/orderCustomProduct_Put'
        - $ref: '#/components/schemas/orderCatalogProduct_Put'
    orderConsignment_Post:
      title: ''
      type: object
      x-examples:
        example-1:
          pickups:
            - pickup_method_id: 1
              pickup_method_display_name: Pick Up
              collection_instructions: Bring your ID
              collection_time_description: 9am - 6pm
              location:
                name: Location 1
                code: LOCATION-1
                address_line_1: 123 Main Street
                address_line_2: Suite 101
                city: Austin
                state: Texas
                postal_code: 78726
                country_alpha2: US
                email: location1@example.com
                phone: +1 111-111-1111
              line_items:
                - name: Fog Linen Chambray Towel - Beige Stripe
                  name_customer: Fog Linen Chambray Towel - Beige Stripe
                  name_merchant: Towel Type 1
                  quantity: 0
                  price_inc_tax: 0
                  price_ex_tax: 0
                  upc: string
                  sku: string
      properties:
        pickups:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/pickupConsignment_Post'
      required:
        - pickups
    pickupConsignment_Post:
      allOf:
        - type: object
          properties:
            pickup_method_id:
              type: integer
              example: 1
              description: ID of the pickup method.
          required:
            - pickup_method_id
        - $ref: '#/components/schemas/pickupConsignment_Base'
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/pickupConsignmentLocation_Post'
            line_items:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/orderProduct_Post'
          required:
            - line_items
      x-examples:
        example-1:
          pickup_method_id: 1
          pickup_method_display_name: Pick Up
          collection_instructions: Bring your ID
          collection_time_description: 9am - 6pm
          location:
            name: Location 1
            code: LOCATION-1
            address_line_1: 123 Main Street
            address_line_2: Suite 101
            city: Austin
            state: Texas
            postal_code: '78726'
            country_alpha2: US
            email: location1@example.com
            phone: +1 111-111-1111
          line_items:
            - name: Fog Linen Chambray Towel - Beige Stripe
              name_customer: Fog Linen Chambray Towel - Beige Stripe
              name_merchant: Towel Type 1
              quantity: 0
              price_inc_tax: 0
              price_ex_tax: 0
              upc: string
              sku: string
    pickupConsignmentLocation_Post:
      title: ''
      description: ''
      x-examples:
        example-1:
          name: Location 1
          code: LOCATION-1
          address_line_1: 123 Main Street
          address_line_2: Suite 101
          city: Austin
          state: Texas
          postal_code: '78726'
          country_alpha2: US
          email: location1@example.com
          phone: +1 111-111-1111
      allOf:
        - $ref: '#/components/schemas/pickupConsignmentLocation_Base'
    orderProduct_Post:
      title: orderProduct_Post
      anyOf:
        - $ref: '#/components/schemas/orderCustomProduct_Post'
        - $ref: '#/components/schemas/orderCatalogProduct_Post'
    orderConsignment_Get:
      title: ''
      type: object
      x-examples:
        order with pickup consignments:
          pickups:
            - id: 99
              pickup_method_id: 1
              pickup_method_display_name: Pick Up
              collection_instructions: Bring your ID
              collection_time_description: 9am - 6pm
              location:
                id: 1
                name: Location 1
                code: LOCATION-1
                address_line_1: 123 Main Street
                address_line_2: Suite 101
                city: Austin
                state: Texas
                postal_code: '78726'
                country_alpha2: US
                email: location1@example.com
                phone: +1 111-111-1111
              line_items:
                - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                  resource: /orders/129/products/12
          shipping: []
          downloads: []
          email:
            gift_certificates: []
        order with shipping consignments:
          pickups: []
          shipping:
            - id: 99
              first_name: Jane
              last_name: Doe
              company: Laser Ltd
              street_1: 123 Main Street
              street_2: string
              city: Austin
              state: Texas
              zip: '12345'
              country: United States
              country_iso2: US
              phone: '0410999888'
              email: janedoe@example.com
              form_fields:
                - name: License Id
                  value: 123BAF
              shipping_method: Free Shipping
              line_items:
                - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                  resource: /orders/129/products/12
              items_total: 1
              items_shipped: 0
              base_cost: 5.1
              cost_ex_tax: 5.1
              cost_inc_tax: 6.2
              cost_tax: 1.1
              cost_tax_class_id: 2
              base_handling_cost: 4.1
              handling_cost_ex_tax: 4.1
              handling_cost_inc_tax: 5.3
              handling_cost_tax: 1.2
              handling_cost_tax_class_id: 2
              shipping_zone_id: 1
              shipping_zone_name: United States
              shipping_quotes:
                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/consignments/shipping/64/shipping_quotes'
                resource: /orders/163/consignments/shipping/64/shipping_quotes
          downloads: []
          email:
            gift_certificates: []
        order with digital consignments:
          pickups: []
          shipping: []
          downloads:
            - recipient_email: recipient@email.com
              line_items:
                url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                resource: /orders/129/products/12
          email:
            gift_certificates: []
        order with gift certificate consignments:
          pickups: []
          shipping: []
          downloads: []
          email:
            gift_certificates:
              - recipient_email: recipient@email.com
                line_items:
                  url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
                  resource: /orders/129/products/12
      properties:
        pickups:
          type: array
          description: Pickup consignments.
          items:
            $ref: '#/components/schemas/pickupConsignment_Get'
        shipping:
          type: array
          description: Shipping consignments.
          items:
            $ref: '#/components/schemas/shippingConsignment_Get'
        downloads:
          type: array
          maxItems: 1
          description: Digital consignments for products that are downloaded.
          items:
            $ref: '#/components/schemas/digitalConsignment_Get'
        email:
          type: object
          description: Email consignments for gift certificates.
          properties:
            gift_certificates:
              type: array
              items:
                $ref: '#/components/schemas/giftCertificateConsignment_Get'
    giftCertificateConsignment_Get:
      type: object
      x-examples:
        example-1:
          recipient_email: recipient@email.com
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12
      properties:
        recipient_email:
          type: string
          example: recipient@email.com
          description: The recipient email of the gift certificate.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/products_Resource'
    pickupConsignment_Get:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 99
              description: The ID of the pickup consignment to update.
            pickup_method_id:
              type: integer
              example: 1
              description: ID of the pickup method.
        - $ref: '#/components/schemas/pickupConsignment_Base'
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/pickupConsignmentLocation_Get'
            line_items:
              type: array
              items:
                $ref: '#/components/schemas/products_Resource'
      x-examples:
        example-1:
          id: 99
          pickup_method_id: 1
          pickup_method_display_name: Pick Up
          collection_instructions: Bring your ID
          collection_time_description: 9am - 6pm
          location:
            id: 1
            name: Location 1
            code: LOCATION-1
            address_line_1: 123 Main Street
            address_line_2: Suite 101
            city: Austin
            state: Texas
            postal_code: '78726'
            country_alpha2: US
            email: location1@example.com
            phone: +1 111-111-1111
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12
    pickupConsignmentLocation_Get:
      title: ''
      description: ''
      x-examples:
        example-1:
          id: 1
          name: Location 1
          code: LOCATION-1
          address_line_1: 123 Main Street
          address_line_2: Suite 101
          city: Austin
          state: Texas
          postal_code: '78726'
          country_alpha2: US
          email: location1@example.com
          phone: +1 111-111-1111
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 1
              description: ID of the location.
        - $ref: '#/components/schemas/pickupConsignmentLocation_Base'
    shippingConsignment_Get:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 99
              description: ID of the shipping consignment.
        - $ref: '#/components/schemas/shippingConsignment_Base'
        - type: object
          properties:
            line_items:
              type: array
              items:
                $ref: '#/components/schemas/products_Resource'
            items_total:
              type: number
              example: 1
              description: The total number of items in the order.
            items_shipped:
              type: number
              description: The number of items that have been shipped.
              example: 0
            shipping_method:
              type: string
              description: Text identifying the BigCommerce shipping module selected by the customer.
              example: Free Shipping
            base_cost:
              type: number
              description: The base shipping cost value.
              example: 5.1
            cost_ex_tax:
              type: number
              example: 5.1
              description: The shipping cost value excluding tax.
            cost_inc_tax:
              type: number
              description: The shipping cost value including tax.
              example: 6.2
            cost_tax:
              type: number
              description: The tax amount on the shipping cost.
              example: 1.1
            cost_tax_class_id:
              type: integer
              description: The ID of the tax class applied to the shipping cost. Ignored if automatic tax is enabled.
              example: 2
            base_handling_cost:
              type: number
              description: The base handling charge.
              example: 4.1
            handling_cost_ex_tax:
              type: number
              description: The handling charge, excluding tax.
              example: 4.1
            handling_cost_inc_tax:
              type: number
              description: The handling charge, including tax.
              example: 5.3
            handling_cost_tax:
              type: number
              example: 1.2
            handling_cost_tax_class_id:
              type: integer
              description: The ID of the tax class applied to the handling charge. Ignored if automatic tax is enabled.
              example: 2
            shipping_zone_id:
              type: number
              description: The numeric ID of the shipping zone.
              example: 1
            shipping_zone_name:
              type: string
              description: The name of the shipping zone.
              example: United States
            shipping_quotes:
              $ref: '#/components/schemas/shippingQuotesConsignment_Resource'
      x-examples:
        example-1:
          id: 99
          first_name: Jane
          last_name: Doe
          company: Laser Ltd
          street_1: 123 Main Street
          street_2: string
          city: Austin
          state: Texas
          zip: '12345'
          country: United States
          country_iso2: US
          phone: 0410999888
          email: janedoe@example.com
          form_fields:
            - name: License Id
              value: 123BAF
          shipping_method: Free Shipping
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12
          items_total: 1
          items_shipped: 0
          base_cost: 5.1
          cost_ex_tax: 5.1
          cost_inc_tax: 6.2
          cost_tax: 1.1
          cost_tax_class_id: 2
          base_handling_cost: 4.1
          handling_cost_ex_tax: 4.1
          handling_cost_inc_tax: 5.3
          handling_cost_tax: 1.2
          handling_cost_tax_class_id: 2
          shipping_zone_id: 1
          shipping_zone_name: United States
          shipping_quotes:
            url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/consignments/shipping/64/shipping_quotes'
            resource: /orders/163/consignments/shipping/64/shipping_quotes
    shippingConsignment_Base:
      title: shippingConsignment_Base
      type: object
      properties:
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        company:
          type: string
          example: Laser Ltd
        street_1:
          type: string
          example: 123 Main Street
          description: Street address (first line).
        street_2:
          type: string
          description: Street address (second line).
        city:
          type: string
          example: Austin
        zip:
          type: string
          example: '12345'
          description: Zip or postal code, as a string.
        country:
          type: string
          example: United States
        country_iso2:
          type: string
          example: US
          description: 2-letter ISO Alpha-2 code for the country.
        state:
          type: string
          example: Texas
        email:
          type: string
          example: janedoe@example.com
          description: Recipient’s email address.
        phone:
          type: string
          description: Recipient’s telephone number.
          example: '0410999888'
        form_fields:
          type: array
          items:
            $ref: '#/components/schemas/formFields'
    shippingQuotesConsignment_Resource:
      type: object
      title: ''
      properties:
        url:
          type: string
          description: URL where you can use a GET request to get the shipping quotes for the order consignment.
          example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/163/consignments/shipping/64/shipping_quotes'
          readOnly: true
        resource:
          type: string
          description: Path where you can use a GET request to get the shipping quotes for the order consignment.
          example: /orders/163/consignments/shipping/64/shipping_quotes
          readOnly: true
      readOnly: true
    digitalConsignment_Get:
      type: object
      properties:
        recipient_email:
          type: string
          example: recipient@email.com
          description: The recipient email of the digital consignment.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/products_Resource'
      x-examples:
        example-1:
          recipient_email: recipient@email.com
          line_items:
            - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products/12'
              resource: /orders/129/products/12
