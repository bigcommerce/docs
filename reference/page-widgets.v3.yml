openapi: '3.0.3'
info:
  title: Page widgets
  version: '1.0'
  description: |-
    The page widgets feature of the REST Content API makes page layouts portable by dividing pages into **regions**, **layouts**, **dropzones**, and **widgets**. 

    ![Diagram of conceptual relationships in the page widgets feature](https://storage.googleapis.com/bigcommerce-production-dev-center/images/page-widgets/conceptual-relationships.png)

    The page widgets feature is an extension of the [widgets feature](/docs/rest-content/widgets). You can work with widget objects using either set of endpoints. For more about using page widgets, see the [Page widgets overview](/docs/storefront/widgets/page-widgets).

  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Page Widgets
paths:
  '/content/page-widgets':
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/User-Agent'
      - $ref: '#/components/parameters/X-Correlation-Id'
    get:
      tags:
        - Page Widgets
      summary: Get a page snapshot
      description: Get a snapshot of all the page widget regions for a given channel, template file, or entity.
      operationId: getPageWidgets
      parameters:
        - $ref: '#/components/parameters/ChannelId'
        - $ref: '#/components/parameters/TemplateFile'
        - $ref: '#/components/parameters/EntityId'
      responses:
        '200':
          $ref: '#/components/responses/GetPageSnapshot_Response'
        '422':
          $ref: '#/components/responses/GetErrorResponse'
    post:
      tags:
        - Page Widgets
      summary: Publish or overwrite page content
      description: Publish or overwrite the content of a page that uses page widgets.
      operationId: createPageWidgets
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/PublishOrOverwrite_Request'
      responses:
        '204':
          description: The request was successful. No response body is returned.
        '422':
          $ref: '#/components/responses/CreateErrorResponse'
components:
  schemas:
    publish:
      title: Publish or overwrite request
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/region'
        template_file:
          type: string
          description: The template file that you would like to target. Leave it empty if the request is for Global regions.
        entity_id:
          type: string
          description: The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`. Leave it empty if the request is for Global regions.
        channel_id:
          type: integer
          description: The id of the channel on which to create this placement. Defaults to the first channel created on the store.
          example: 1
      required:
        - regions
      example:
        template_file: pages/page
        entity_id: '5'
        channel_id: 1
        regions:
        - name: home_below_menu
          children:
          - widget_template_uuid: d181ebd5-f42c-4f96-8f9d-c605023f5cb6
            configuration:
              title: Hero Banner Title
              subtitle: Add a description for this hero banner. This is a great place to highlight
                a promotion.
              buttonText: Shop now
              contentAlignment:
                horizontal: left
              containerHeight: small
              backgroundType: image
              backgroundColor: "#444444"
              imageUrl:
                src: https://images.unsplash.com/photo-1533038590840-1cde6e668a91?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=100
                type: IMAGE_MANAGER
              imageFit: fill
              imageParallax: 'off'
              imageAlignment:
                horizontal: center
                vertical: middle
              imageOpacity: 100
              titleVisible: show
              titleStyle: default
              titleFontFamily: inherit
              titleFontWeight: '400'
              titleFontSize:
                value: 36
                type: px
              descriptionVisible: show
              descriptionStyle: default
              descriptionFontFamily: inherit
              descriptionFontWeight: '400'
              descriptionFontSize:
                value: 21
                type: px
              textColor: "#444444"
              mobileTextColor: "#444444"
              buttonVisible: show
              buttonFont: default
              buttonFontFamily: inherit
              buttonStyle: round
              buttonColor: "#444444"
              mobileButtonColor: "#444444"
              buttonTextColor: rgba(255,255,255,1)
              mobileButtonTextColor: rgba(255,255,255,1)
            storefront_api_query_params: {}
            name: Hero Banner
            description: ''
            type: widget
        - name: header_bottom
          children:
          - layout_template_uuid: 7d42d0b1-1152-4ce3-a6c1-3709f786f295
            configuration:
              columnWeights:
              - 33.333333%
              - 33.333333%
              - 33.333333%
              layoutBackgroundColor: rgba(0,0,0,0)
              layoutBackgroundImageAlignment:
                horizontal: center
                vertical: middle
              layoutBackgroundImageFit: fill
              layoutBackgroundImageOpacity: 100
              layoutBackgroundImageUrl: ''
              layoutBorderColor: "#333333"
              layoutBorderStyle: solid
              layoutBorderThickness: 0
              layoutHeight: ''
              layoutMargin:
                bottom:
                  type: px
                  value: '0'
                left:
                  type: px
                  value: '0'
                right:
                  type: px
                  value: '0'
                top:
                  type: px
                  value: '0'
              layoutPadding:
                bottom:
                  type: px
                  value: '0'
                left:
                  type: px
                  value: '0'
                right:
                  type: px
                  value: '0'
                top:
                  type: px
                  value: '0'
              numberOfDropzones: 3
              layoutBackgroundType: ''
              layoutZIndex: auto
              name: Layout
            name: Layout
            dropzones:
            - configuration:
                dropzoneBackgroundColor: rgba(0,0,0,0)
                dropzoneBackgroundImageAlignment:
                  horizontal: center
                  vertical: middle
                dropzoneBackgroundImageFit: fill
                dropzoneBackgroundImageOpacity: 100
                dropzoneBackgroundImageUrl: ''
                dropzoneBorderColor: "#333333"
                dropzoneBorderStyle: solid
                dropzoneBorderThickness: 0
                dropzoneHeight: ''
                dropzoneJustifyContent: center
                dropzoneMargin:
                  bottom:
                    type: px
                    value: '0'
                  left:
                    type: px
                    value: '0'
                  right:
                    type: px
                    value: '0'
                  top:
                    type: px
                    value: '0'
                dropzonePadding:
                  bottom:
                    type: px
                    value: '0'
                  left:
                    type: px
                    value: '10.5'
                  right:
                    type: px
                    value: '10.5'
                  top:
                    type: px
                    value: '0'
                dropzoneZIndex: auto
                dropzoneBackgroundType: ''
              widgets:
              - widget_template_uuid: e59c1412-2d85-4f18-ab4b-8a55412d945c
                configuration:
                  productCardContentAlignment:
                    horizontal: center
                  productImage:
                    visibility: show
                    imageFit: fill
                  brand:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  productName:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  price:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  productRating:
                    visibility: hide
                    starColorFilled: "#3C64F4"
                    starColorEmpty: "#ECEEF5"
                    reviewsColor: "#8C93AD"
                  button:
                    visibility: hide
                    shape: round
                    buttonColor: rgba(68,68,68,1)
                    textStyle: default
                    buttonTextColor: rgba(255,255,255,1)
                    buttonActionType: addToCart
                  productId: '77'
                storefront_api_query_params:
                  productId: 77
                name: Product
                description: ''
                type: widget
            - configuration:
                dropzoneBackgroundColor: rgba(0,0,0,0)
                dropzoneBackgroundImageAlignment:
                  horizontal: center
                  vertical: middle
                dropzoneBackgroundImageFit: fill
                dropzoneBackgroundImageOpacity: 100
                dropzoneBackgroundImageUrl: ''
                dropzoneBorderColor: "#333333"
                dropzoneBorderStyle: solid
                dropzoneBorderThickness: 0
                dropzoneHeight: ''
                dropzoneJustifyContent: center
                dropzoneMargin:
                  bottom:
                    type: px
                    value: '0'
                  left:
                    type: px
                    value: '0'
                  right:
                    type: px
                    value: '0'
                  top:
                    type: px
                    value: '0'
                dropzonePadding:
                  bottom:
                    type: px
                    value: '0'
                  left:
                    type: px
                    value: '10.5'
                  right:
                    type: px
                    value: '10.5'
                  top:
                    type: px
                    value: '0'
                dropzoneZIndex: auto
                dropzoneBackgroundType: ''
              widgets:
              - widget_template_uuid: e59c1412-2d85-4f18-ab4b-8a55412d945c
                configuration:
                  productCardContentAlignment:
                    horizontal: center
                  productImage:
                    visibility: show
                    imageFit: fill
                  brand:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  productName:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  price:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  productRating:
                    visibility: hide
                    starColorFilled: "#3C64F4"
                    starColorEmpty: "#ECEEF5"
                    reviewsColor: "#8C93AD"
                  button:
                    visibility: hide
                    shape: round
                    buttonColor: rgba(68,68,68,1)
                    textStyle: default
                    buttonTextColor: rgba(255,255,255,1)
                    buttonActionType: addToCart
                  productId: '80'
                storefront_api_query_params:
                  productId: 80
                name: Product
                description: ''
                type: widget
            - configuration:
                dropzoneBackgroundColor: rgba(0,0,0,0)
                dropzoneBackgroundImageAlignment:
                  horizontal: center
                  vertical: middle
                dropzoneBackgroundImageFit: fill
                dropzoneBackgroundImageOpacity: 100
                dropzoneBackgroundImageUrl: ''
                dropzoneBorderColor: "#333333"
                dropzoneBorderStyle: solid
                dropzoneBorderThickness: 0
                dropzoneHeight: ''
                dropzoneJustifyContent: center
                dropzoneMargin:
                  bottom:
                    type: px
                    value: '0'
                  left:
                    type: px
                    value: '0'
                  right:
                    type: px
                    value: '0'
                  top:
                    type: px
                    value: '0'
                dropzonePadding:
                  bottom:
                    type: px
                    value: '0'
                  left:
                    type: px
                    value: '10.5'
                  right:
                    type: px
                    value: '10.5'
                  top:
                    type: px
                    value: '0'
                dropzoneZIndex: auto
                dropzoneBackgroundType: ''
              widgets:
              - widget_template_uuid: e59c1412-2d85-4f18-ab4b-8a55412d945c
                configuration:
                  productCardContentAlignment:
                    horizontal: center
                  productImage:
                    visibility: show
                    imageFit: fill
                  brand:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  productName:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  price:
                    visibility: show
                    textStyle: default
                    color: "#444444"
                  productRating:
                    visibility: hide
                    starColorFilled: "#3C64F4"
                    starColorEmpty: "#ECEEF5"
                    reviewsColor: "#8C93AD"
                  button:
                    visibility: hide
                    shape: round
                    buttonColor: rgba(68,68,68,1)
                    textStyle: default
                    buttonTextColor: rgba(255,255,255,1)
                    buttonActionType: addToCart
                  productId: '93'
                storefront_api_query_params:
                  productId: 93
                name: Product
                description: ''
                type: widget
            type: layout
    region:
      title: Region object
      type: object
      properties:
        name:
          type: string
          description: |- 
            Matches the name specified as `{{{region_name="..."}}}` in a theme template file.
        children:
          type: array
          description: Consists of layout and widget objects.
          items:
            anyOf:
              - $ref: '#/components/schemas/layout'
              - $ref: '#/components/schemas/widget'
    layout:
      title: Layout object
      type: object
      properties:
        layout_template_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Set by BigCommerce. Read-only.
        configuration:
          type: object
          properties: {}
          description: JSON object of necessary configuration to construct a layout.
        name:
          type: string
          description: A human-readable label for the layout; displays in Page Builder.
        dropzones:
          type: array
          description: Consists of dropzone objects.
          items:
            $ref: '#/components/schemas/dropzone'
        type:
          type: string
          enum:
            - layout
          example: layout
    dropzone:
      title: Dropzone object
      type: object
      properties:
        configuration:
          type: object
          properties: {}
          description: JSON object of necessary configuration to construct a dropzone.
        widgets:
          type: array
          description: Consists of [widget](#widgets) objects.
          items:
            $ref: '#/components/schemas/widget'
    widget:
      title: Widget object
      type: object
      properties:
        widget_template_uuid:
          type: string
          format: uuid
          readOnly: true
          description: The unique identifier of the parent widget template; set by the store or channel where the widget template originated.
        configuration:
          type: object
          properties: {}
          description: JSON object of necessary configuration to construct a widget.
        storefront_api_query_params:
          type: object
          properties: {}
          additionalProperties: true
          description: A set of parameters used to query the GraphQL Storefront API. Used when the parent widget template is configured to request data directly from the GraphQL Storefront API; in this case, the parent widget template has the `storefront_api_query` property.
        name:
          type: string
          description: A human-readable label for the widget. Retrievable using either the [Get a widget](/docs/rest-content/widgets/widget#get-a-widget) or the [Get all widgets](/docs/rest-content/widgets/widget#get-all-widgets) endpoint.
        description:
          type: string
          description: A description of the widget. Retrievable using either the [Get a widget](/docs/rest-content/widgets/widget#get-a-widget) or the [Get all widgets](/docs/rest-content/widgets/widget#get-all-widgets) endpoint.
        type:
          type: string
          enum:
            - widget
          example: widget
    metaCollection:
      title: Meta object
      type: object
      description: |-
        Data about the response, including pagination and collection totals.
      properties:
        pagination:
          $ref: '#/components/schemas/pagination'
    pagination:
      title: Pagination object
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
    ErrorResponse:
      title: Error response
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-tags:
        - Models
    BaseError:
      title: Base error
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
      x-tags:
        - Models
    DetailedErrors:
      title: Detailed errors
      type: object
      properties: { }
      additionalProperties: true
      x-tags:
        - Models
  requestBodies:
    PublishOrOverwrite_Request:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/publish'
  responses:
    GetPageSnapshot_Response:
      description: ''
      headers:
        Date: 
          $ref: '#/components/headers/Date'
        Last-Modified:
          $ref: '#/components/headers/Last-Modified'
        Content-Encoding:
          $ref: '#/components/headers/Content-Encoding'
        Transfer-Encoding:
          $ref: '#/components/headers/Transfer-Encoding'
        X-Rate-Limit-Time-Window-Ms:
          $ref: '#/components/headers/X-Rate-Limit-Time-Window-Ms'
        X-Rate-Limit-Time-Reset-Ms:
          $ref: '#/components/headers/X-Rate-Limit-Time-Reset-Ms'
        X-Rate-Limit-Requests-Quota:
          $ref: '#/components/headers/X-Rate-Limit-Requests-Quota'
        X-Rate-Limit-Requests-Left:
          $ref: '#/components/headers/X-Rate-Limit-Requests-Left'
        X-Retry-After:
          $ref: '#/components/headers/X-Retry-After'
        X-BC-ApiLimit-Remaining:
          $ref: '#/components/headers/X-BC-ApiLimit-Remaining'
        X-BC-Store-Version:
          $ref: '#/components/headers/X-BC-Store-Version'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  regions:
                    type: array
                    items:
                      $ref: '#/components/schemas/region'
              meta:
                $ref: '#/components/schemas/metaCollection'
          examples:
            response:
              value:
                data:
                  regions:
                    - name: "home_below_menu"
                      children: []
                meta:
                  pagination:
                    count: 1
                    current_page: 1
                    per_page: 50
                    total: 1
                    total_pages: 1
    GetErrorResponse:
      description: Failure due to an invalid query parameter
      headers:
        Date: 
          $ref: '#/components/headers/Date'
        Last-Modified:
          $ref: '#/components/headers/Last-Modified'
        Content-Encoding:
          $ref: '#/components/headers/Content-Encoding'
        Transfer-Encoding:
          $ref: '#/components/headers/Transfer-Encoding'
        X-Rate-Limit-Time-Window-Ms:
          $ref: '#/components/headers/X-Rate-Limit-Time-Window-Ms'
        X-Rate-Limit-Time-Reset-Ms:
          $ref: '#/components/headers/X-Rate-Limit-Time-Reset-Ms'
        X-Rate-Limit-Requests-Quota:
          $ref: '#/components/headers/X-Rate-Limit-Requests-Quota'
        X-Rate-Limit-Requests-Left:
          $ref: '#/components/headers/X-Rate-Limit-Requests-Left'
        X-Retry-After:
          $ref: '#/components/headers/X-Retry-After'
        X-BC-ApiLimit-Remaining:
          $ref: '#/components/headers/X-BC-ApiLimit-Remaining'
        X-BC-Store-Version:
          $ref: '#/components/headers/X-BC-Store-Version'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    CreateErrorResponse:
      description: The request payload was invalid.
      headers:
        Date: 
          $ref: '#/components/headers/Date'
        Last-Modified:
          $ref: '#/components/headers/Last-Modified'
        Content-Encoding:
          $ref: '#/components/headers/Content-Encoding'
        Transfer-Encoding:
          $ref: '#/components/headers/Transfer-Encoding'
        X-Rate-Limit-Time-Window-Ms:
          $ref: '#/components/headers/X-Rate-Limit-Time-Window-Ms'
        X-Rate-Limit-Time-Reset-Ms:
          $ref: '#/components/headers/X-Rate-Limit-Time-Reset-Ms'
        X-Rate-Limit-Requests-Quota:
          $ref: '#/components/headers/X-Rate-Limit-Requests-Quota'
        X-Rate-Limit-Requests-Left:
          $ref: '#/components/headers/X-Rate-Limit-Requests-Left'
        X-Retry-After:
          $ref: '#/components/headers/X-Retry-After'
        X-BC-ApiLimit-Remaining:
          $ref: '#/components/headers/X-BC-ApiLimit-Remaining'
        X-BC-Store-Version:
          $ref: '#/components/headers/X-BC-Store-Version'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        default: 'application/json'
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
    Content-Type:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
    User-Agent:
      name: User-Agent
      in: header
      required: true
      schema:
        type: string
      example: 'PostmanRuntime/7.32.3'
      description: Please specify a user agent to identify your integration or client.
    X-Correlation-Id:
      name: X-Correlation-Id
      in: header
      required: false
      schema:
        type: string
        format: uuid
      description: |-
        An identifier unique to a set of related requests. For use on headless storefronts, excluding BigCommerce for WordPress. For more information, see [Best Practices](/docs/start/best-practices#correlating-requests) or the [Headless Guide](/docs/storefront/headless#correlating-requests).
    ChannelId:
      name: channel_id
      description: The ID of the channel for which you want to retrieve page widgets. Defaults to the first channel created on the store.
      required: false
      in: query
      schema:
        type: integer
        default: 1
      example: 12
    TemplateFile:
      name: template_file
      description: The template file that you would like to target. Leave it empty if the request is for Global regions.
      required: false
      in: query
      schema:
        type: string
    EntityId:
      name: entity_id
      description: The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`. Leave empty if the request is for global regions.
      required: false
      in: query
      schema:
        type: string
  headers:
    Date:
      schema:
        type: string
      example: 'Tue, 15 Nov 2011 12:45:26 GMT'
      description: |-
        An [RFC 2822](a href="http://tools.ietf.org/html/rfc2822#section-3.3) date. 
    Last-Modified:
      schema:
        type: string
      example: Tue, 15 Nov 2011 12:45:26 GMT
      description: |-
        An [RFC 2822](a href="http://tools.ietf.org/html/rfc2822#section-3.3) date. The date the resource was last modified.
    Content-Encoding:
      schema:
        type: string
        enum:
          - gzip
      example: gzip
      description: |-
        Lets API clients request compressed responses. 
    Transfer-Encoding:
      schema:
        type: string
      example: chunked
      description: |-
        Specifies the form of encoding used to transfer the resource. 
    X-Rate-Limit-Time-Window-Ms:
      schema:
        type: integer
      example: 30000
      description: |-
        number | Shows the size of your current rate-limiting window, in milliseconds. 
    X-Rate-Limit-Time-Reset-Ms:
      schema:
        type: integer
      example: 15000
      description: |-
        Shows how many milliseconds are remaining in the window. In this case, 15000 milliseconds – so, 15000 milliseconds after this request, the API quota will be refreshed.
    X-Rate-Limit-Requests-Quota:
      schema:
        type: integer
      example: 150
      description: |-
        Shows how many API requests are allowed in the current window for your client.
    X-Rate-Limit-Requests-Left:
      schema:
        type: integer
      example: 35
      description: |-
        Details how many remaining requests your client can make in the current window before being rate-limited. In this case, you would expect to be able to make 35 more requests in the next 15000 milliseconds; on the 36th request within 15000 milliseconds, you would be rate-limited and receive an HTTP 429 response.
    X-Retry-After:
      schema:
        type: integer
      example: 15
      description: |-
        Rate limited response, indicating the number of seconds before the quota refreshes. See [Rate Limits](/docs/start/best-practices#api-rate-limits). 
    X-BC-ApiLimit-Remaining:
      schema:
        type: integer
      example: 987
      description: |-
        The number of API requests remaining for the current period (rolling one hour).
    X-BC-Store-Version:
      schema:
        type: string
      example: 7.3.6
      description: |-
        The version of BigCommerce on which the store is running. This header is available on versions 7.3.6+.
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        | Add scopes ++++ | modify | `...` |
        | Add | read-only | `store_v2_marketing_read_only` |

        ### Authentication header

        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate access tokens, see [API Accounts and OAuth Scopes](/docs/start/authentication/api-accounts). |

        ### Further reading

        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/docs/start/authentication).

        For more about BigCommerce OAuth scopes, see [API Accounts and OAuth Scopes](/docs/start/authentication/api-accounts).

        For a list of API status codes, see [API Status Codes](/docs/start/about/status-codes).
      type: apiKey
      in: header
