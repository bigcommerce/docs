openapi: '3.0.1'
info:
  title: Pickup Methods
  version: '3.0'
  description: This API endpoint enables you to manage pickup methods.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Pickup Methods
    description: BigCommerce Pickup Methods API Definition.
paths:
  '/pickup/methods':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      operationId: get-pickup-methods
      tags:
        - Pickup Methods
      summary: Get Pickup Methods
      description: |-
        Retrieves a list of pickup methods.

        ## Examples

        You can filter this list to return pickup method objects specific to a list of requested pickup method IDs. This is achieved by appending the query string `?id:in=1,3,5` to the resource `/pickup/methods`.

        ```http
        GET /pickup/methods?id:in=1,3,5
        ```
      parameters:
        - name: 'id:in'
          description: Comma separated list of pickup method IDs.
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          description: Maximum number of results per page.
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          description: The number of the page to be fetched.
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: date_created
          description: |-
            Filter pickup methods by the date created. Return methods created on the provided date.

            For example, `date_created=2023-09-07T06:23:13Z`.
          in: query
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-09-07T06:23:13Z'
        - name: date_created:min
          description: |- 
            Filter pickup methods by minimum date created. Return methods created after the provided date.

            For example, `date_created:min=2023-09-07T06:23:13Z`.
          in: query
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-09-07T06:23:13Z'
        - name: date_created:max
          description: |- 
            Filter pickup methods by maximum date created. Return methods created before the provided date.

            For example, `date_created:max=2023-09-07T06:23:13Z`.
          in: query
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-09-07T06:23:13Z'
        - name: date_modified
          description: |-
            Filter pickup methods by date modified. Return methods modified on the provided date.

            For example, `date_modified=2023-09-07T06:23:13Z`.
          in: query
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-09-07T06:23:13Z'
        - name: date_modified:min
          description: |-
            Filter pickup methods by minimum date modified. Return methods modified after the provided date.

            For example, `date_modified:min=2023-09-07T06:23:13Z`.
          in: query
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-09-07T06:23:13Z'
        - name: date_modified:max
          description: |-
            Filter pickup methods by maximum date modified. Return methods modified before the provided date.

            For example, `date_modified:max=2023-09-07T06:23:13Z`.
          in: query
          required: false
          schema:
            type: string
            format: date-time
          example: '2023-09-07T06:23:13Z'
        - name: sort
          description: |-
            Sort pickup methods by date_modified:* or name:* ; for example, `sort=name:asc`.  
            
            - `date_modified:asc` - sort by date modified in ascending order
            - `date_modified:desc` - sort by date modified in descending order
            - `name:asc` - sort by name in ascending order
            - `name:desc` - sort by name in descending order
          in: query
          required: false
          schema:
            type: string
            enum:
              - 'date_modified:asc'
              - 'date_modified:desc'
              - 'name:asc'
              - 'name:desc'
      responses:
        '200':
          description: The request has been processed and a list of pickup methods has been returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PickupMethodResponse'
                  meta:
                    $ref: '#/components/schemas/MetaCollection'
    post:
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: post-pickup-methods
      tags:
        - Pickup Methods
      summary: Create Pickup Methods
      description: |-
        Creates one or many pickup methods.

        This is a batch operation that can create up to 100 pickup methods objects in one request.

        ## Limits
        * Limit of creating 100 pickup method objects per `POST` request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BasePickupMethod'
      responses:
        '200':
          description: The request has been successfully processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PickupMethodResponse'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
    put:
      parameters:
        - $ref: '#/components/parameters/ContentType'
      operationId: put-pickup-methods
      tags:
        - Pickup Methods
      summary: Update Pickup Methods
      description: |-
        Update existing pickup methods.

        This batch operation can update 10 pickup method objects in one request.

        Only the `id` property of the pickup method object is required as part of the request. Pickup method properties that are not provided will maintain their existing values.

        ## Limits
        * Limit of updating 10 pickup method objects per `PUT` request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                        description: The ID of the pickup method.
                  - $ref: '#/components/schemas/BasePickupMethod'
      responses:
        '200':
          description: The request has been successfully processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PickupMethodResponse'
                  meta:
                    type: object
                    properties: {}
                    additionalProperties: true
    delete:
      operationId: delete-pickup-methods
      tags:
        - Pickup Methods
      description: Delete existing pickup methods.
      parameters:
        - name: 'id:in'
          description: Comma separated list of pickup method IDs.
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
      summary: Delete Pickup Methods
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    BasePickupMethod:
      type: object
      properties:
        location_id:
          type: integer
          example: 2
          description: The ID of the location.
        display_name:
          type: string
          minLength: 0
          maxLength: 250
          example: Office Pickup!
          description: Title of the pickup method.
        collection_instructions:
          type: string
          minLength: 0
          maxLength: 250
          example: Bring your ID!
          description: Instructions for picking up items.
        collection_time_description:
          type: string
          minLength: 0
          maxLength: 250
          example: Collect during our opening hours of 0900 - 1700
          description: The description of collection time.
        location_identity:
          type: integer
          example: 2
          deprecated: true
    PickupMethodResponse:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 1
              description: The ID of the pickup method.
        - $ref: '#/components/schemas/BasePickupMethod'
        - type: object
          properties:
            date_created:
              type: string
              format: date-time
              example: '2023-06-06T00:00:20Z'
              description: |-
                Filter pickup methods by time created.

                Time is presented in ISO-8601 format.
            date_modified:
              type: string
              format: date-time
              example: '2023-06-08T00:00:20Z'
              description: |-
                Filter pickup methods by time modified.

                Time is presented in ISO-8601 format.
    MetaCollection:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              description: Total number of items in the result set.
              example: 123
            count:
              type: integer
              description: The total number of items in the collection on the current page.
              example: 100
            per_page:
              type: integer
              description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
              example: 100
            current_page:
              type: integer
              description: The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: The total number of pages in the collection.
              example: 2
            links:
              type: object
              description: Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: A link to the previous page is returned in the response.
                current:
                  type: string
                  description: A link to the current page is returned in the response.
                next:
                  type: string
                  description: A link to the next page is returned in the response.
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Fulfillment Methods | read-only | `store_fulfillment_methods_read_only` | 
        |  Fulfillment Methods | modify | `store_fulfillment_methods_manage` |

        ### Authentication header

        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see [API Accounts and OAuth Scopes](/docs/start/authentication/api-accounts). |

        ### Further reading

        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/docs/start/authentication).

        For more about BigCommerce OAuth scopes, see [API Accounts and OAuth Scopes](/docs/start/authentication/api-accounts).

        For a list of API status codes, see [API Status Codes](/docs/start/about/status-codes).
      type: apiKey
      in: header
