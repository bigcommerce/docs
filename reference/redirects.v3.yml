openapi: '3.0.1'
info:
  title: Redirects
  description: |-
    Manage 301 redirects for one or more storefronts powered by a single BigCommerce backend. For a list of redirects that are not allowed, see the [301 Redirects FAQ](https://support.bigcommerce.com/s/article/301-Redirects#faq) in our Help Center.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
  version: ''
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Redirects
paths:
  '/storefront/redirects':
    parameters:
      - $ref: '#/components/parameters/Accept'
    get:
      tags:
        - Redirects
      summary: Get Redirects
      description: Returns a collection of the store's 301 redirects across all sites.
      operationId: GetRedirects
      parameters:
        - name: site_id
          in: query
          description: Filters items by `site_id`.
          schema:
            type: integer
        - name: 'id:in'
          in: query
          description: Filters items by redirect `id`. Also accepts comma-separated values to filter for multiple redirects.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Controls the number of items to return per page.
          schema:
            type: integer
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of items. Used to paginate large collections.
          schema:
            type: integer
        - name: sort
          in: query
          description: |
            Field name to sort by. Note: Since redirect `id` increments when new redirects are added, you can use that field to sort by redirect create date.
          schema:
            type: string
            enum:
              - from_path
              - type
              - site_id
        - name: direction
          in: query
          description: 'Sort direction. Acceptable values are `asc`, `desc`.'
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: include
          in: query
          description: Indicates whether to include redirect sub-resources. Only `to_url` is supported.
          schema:
            type: string
            enum:
              - to_url
        - name: keyword
          in: query
          description: 'Filters redirects by the specified keyword. Will only search from the beginning of a URL path. For example, `blue` will match `/blue` and `/blue-shirt` ,  **not** `/royal-blue-shirt`.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/301RedirectRead'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    put:
      tags:
        - Redirects
      summary: Upsert Redirects
      description: Upserts new redirect data across all storefronts.
      operationId: UpsertRedirects
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/301RedirectUpsert'
        required: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/301RedirectRead'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
    delete:
      tags:
        - Redirects
      summary: Delete Redirects
      description: Deletes redirects.
      operationId: DeleteRedirects
      parameters:
        - name: 'id:in'
          in: query
          description: List of Redirect IDs to delete explicitly.
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: site_id
          in: query
          description: Site ID provided to delete all redirects for a given Site.
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          content: {}
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: 'application/json'
    ContentType:
      name: Content-Type
      in: header
      required: true
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.'
      schema:
        type: string
        default: 'application/json'
  schemas:
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      x-internal: false
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse409:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    301RedirectUpsert:
      required:
        - from_path
        - site_id
      type: object
      properties:
        from_path:
          type: string
          example: /old-url/
        site_id:
          type: integer
        to:
          $ref: '#/components/schemas/RedirectTo'
      description: 'Data necessary to create or update a redirect. If thereâ€™s a conflict on the from_path and site_id, the redirect will be overwritten with new data.'
      x-internal: false
    301RedirectRead:
      type: object
      description: 'Full detail of a Redirect, optionally including the full destination URL.'
      x-internal: false
      properties:
        id:
          type: integer
        site_id:
          type: integer
        from_path:
          type: string
          example: /old-url
        to:
          $ref: '#/components/schemas/RedirectTo'
        to_url:
          type: string
          description: Full destination URL for the redirect. Must be explicitly included via URL parameter.
          format: uri
          example: 'https://store-domain.com/new-url'
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              minimum: 0
              type: integer
              example: 246
            count:
              minimum: 0
              type: integer
              example: 5
            per_page:
              minimum: 0
              type: integer
              example: 5
            current_page:
              minimum: 1
              type: integer
              example: 1
            total_pages:
              minimum: 0
              type: integer
              example: 50
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
      x-internal: false
    RedirectTo:
      title: RedirectTo
      type: object
      properties:
        type:
          type: string
          enum:
            - product
            - brand
            - category
            - page
            - post
            - url
        entity_id:
          type: integer
        url:
          maxLength: 2048
          type: string
          example: /new-url/
      x-internal: false
    DetailedErrors:
      type: object
      properties: {}
      additionalProperties: true
      title: Detailed Errors
      x-internal: false
    BaseError:
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
        instance:
          type: string
      description: |
        Error payload for the BigCommerce API.
      x-internal: false
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
      x-internal: false
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Content | modify | `store_v2_content` |
        |  Content | read-only | `store_v2_content_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/api-docs/getting-started/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/api-docs/getting-started/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/api-docs/getting-started/api-status-codes).
      type: apiKey
      in: header

