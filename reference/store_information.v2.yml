openapi: '3.0.0'
info:
  version: ''
  title: Store Information
  description: Get Store Information endpoint, manage store profile settings.
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v2'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
security:
  - X-Auth-Token: []
tags:
  - name: Store Information
  - name: Time Zone
  - name: Metafields
  - name: Batch metafields
paths:
  '/store':
    get:
      description: |-
        Returns metadata about the global settings for a store. Some of these values are independently configurable on a per-storefront or per-channel basis. For channel overrides, see [Store Settings](/docs/rest-management/settings).
      summary: Get Store Information
      operationId: getStoreInformation
      tags:
        - Store Information
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreInformation'
              examples:
                response:
                  value:
                    id: abc123
                    account_uuid: "8d4d492f-17a1-4d95-b396-e1c5720815a5"
                    domain: my-awesome.store
                    secure_url: 'https://my-awesome.store'
                    control_panel_base_url: 'https://store-{store_hash}.mybigcommerce.com'
                    status: live
                    name: BigCommerce
                    first_name: Jane
                    last_name: Doe
                    address: BigCommerce
                    country: United States
                    country_code: US
                    phone: ''
                    admin_email: jane.does@example.com
                    order_email: info@janedoes.mybigcommerce.com
                    favicon_url: 'https://cdn8.bigcommerce.com/r-8816ba2f48b0bcf4bec0c1a954c00e0fc36b/img/bc_favicon.ico'
                    timezone:
                      name: America/Chicago
                      raw_offset: -21600
                      dst_offset: -18000
                      dst_correction: true
                      date_format:
                        display: M jS Y
                        export: M jS Y
                        extended_display: 'M jS Y @ g:i A'
                    language: en
                    currency: USD
                    currency_symbol: '$'
                    decimal_separator: '.'
                    thousands_separator: ','
                    decimal_places: 2
                    currency_symbol_location: left
                    weight_units: Ounces
                    dimension_units: Inches
                    dimension_decimal_places: 2
                    dimension_decimal_token: '.'
                    dimension_thousands_token: ','
                    plan_name: Standard
                    plan_level: Standard
                    plan_is_trial: false
                    industry: Technology
                    logo:
                      url: 'https://cdn8.bigcommerce.com/s-{store_hash}/product_images/screen_shot_2018-05-15_at_12.22.26_pm__05547_1529512135.png'
                    is_price_entered_with_tax: false
                    store_id: 4884484848484
                    default_channel_id: 1
                    default_site_id: 1000
                    active_comparison_modules: []
                    features:
                      stencil_enabled: true
                      sitewidehttps_enabled: true
                      facebook_catalog_id: ''
                      checkout_type: optimized
                      wishlists_enabled: true
                      graphql_storefront_api_enabled: true
                      shopper_consent_tracking_enabled: true
                      multi_storefront_enabled: true
                      storefront_limits:
                        active: 3
                        total_including_inactive: 4
  '/store/metafields':
    get:
      summary: Get All Store Metafields
      tags:
        - Batch metafields
      description: Gets all store `metafields`.
      operationId: getStoreMetafields
      responses:
        '200':
          description: |
            List of `Metafield` objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse_Batch'
              examples:
                response:
                  value:
                    data:
                    - id: "69"
                      key: key2
                      value: value
                      namespace: test2
                      permission_set: write_and_sf_access
                      resource_type: store
                      resource_id: "1001197568"
                      description: ""
                      date_created: 2024-08-27T18:58:43+00:00
                      date_modified: 2024-08-27T18:58:43+00:00
                      owner_client_id: k8l7zz0ynkd1bfbxx02p2k7pnk3n8ov
                    meta:
                      pagination:
                        total: 4
                        count: 4
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          current: ?limit=50&page=1
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/MetafieldKeyParam'
        - $ref: '#/components/parameters/MetafieldKeyInParam'
        - $ref: '#/components/parameters/MetafieldNamespaceParam'
        - $ref: '#/components/parameters/MetafieldNamespaceInParam'
        - $ref: '#/components/parameters/DirectionParam'
    post:
      summary: Create multiple Metafields
      tags:
        - Batch metafields
      description: Create multiple `metafields`.
      operationId: createStoresMetafields
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/MetafieldBase_Post_Put'
        required: true
        description: A `metafield` object.
      responses:
        '200':
          description: |
            List of created `Metafield` objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse_Batch_POST_PUT'
        '422':
          description: |
            Response object for metafields creation with partial success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponsePartialSuccess_POST_PUT'
    put:
      summary: Update multiple metafields
      tags:
        - Batch metafields 
      description: Update multiple metafields.
      operationId: updateStoreMetafields
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/MetafieldBase_Post_Put'
                  - type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                        description: |
                          The ID of metafield to update.
                    required:
                      - id
        description: ''
      responses:
        '200':
          description: Response payload for the BigCommerce API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse_Batch_POST_PUT'
        '400':
          description: Bad Request. Input is invalid.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: number
                  title:
                    type: string
                    minLength: 1
                  type:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
              example:
                status: 400
                title: Input is invalid
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                detail: Syntax error
        '422':
          description: |
            Response object for metafields creation with partial success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponsePartialSuccess_POST_PUT'
    delete:
      summary: Delete multiple metafields
      tags:
        - Batch metafields 
      description: Delete all store metafields.
      operationId: deleteStoreMetafields
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
            example:
              [69,70]
        description: Metafields ID list.
      responses:
        '200':
          description: |
            Response object for metafields deletion with success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionDeleteResponseSuccess'
  '/store/metafields/{metafieldId}':
    get:
      summary: Get a Store Metafield
      tags:
        - Metafields
      description: Gets a store `metafield`.
      operationId: getStoreMetafield
      responses:
        '200':
          description: |
            A `Metafield` object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetafieldResponse'
        '404':
          description: |
             Not found (A metafield was not found with this query).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    put:
      summary: Update a Store Metafield
      tags:
        - Metafields
      description: |
        Update a store `Metafield`.
      operationId: updateStoreMetafield
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetafieldBase_Post_Put'
        description: |
          A `Metafield` object.
      responses:
        '200':
          description: |
            A metafield and metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaFieldCollectionResponse'
        '404':
          description: |
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                value:
                  status: 404
                  title: There was no metafield found with ID 1010
                  type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
    delete:
      summary: Delete a Metafield
      tags:
        - Metafields
      description: |
        Deletes a store `Metafield`.
      operationId: deleteStoreMetafield
      responses:
        '204':
          description: |
            An empty response.
        '404':
          description: |
             Not found (A metafield was not found with this query).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    parameters:
      - $ref: '#/components/parameters/Accept'
      - $ref: '#/components/parameters/MetafieldIdParam'
  '/time':
    get:
      description: Returns the system timestamp at the time of the request. The time resource is useful for validating API authentication details and testing client connections.
      summary: Get System Timestamp
      tags:
        - Time Zone
      operationId: getSystemTimestamp
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timeStamp_Full'
              examples:
                response:
                  value:
                    time: 1529512970
components:
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        | UI Name | Permission | Parameter |
        |:--------|:-----------|:----------|
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/docs/start/authentication/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/docs/start/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/docs/start/authentication/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/docs/start/about/status-codes).
      type: apiKey
      in: header
  schemas:
    NotFound:
      description: Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            404 HTTP status code.
          type: integer
          example: 404
        title:
          description: The error title describing the particular error.
          type: string
          example: The resource at that URL is not found.
        type:
          type: string
          example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
      title: Not Found
      x-internal: false
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
          properties: {}
      x-tags:
        - Models
    MetafieldResponse:
      description: |
        Response payload for the BigCommerce API.
      x-internal: false
      allOf:
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Metafield'
            meta:
              $ref: '#/components/schemas/metaCollection_open'
    Metafield:
      description: |
        Allows app partners to write custom data to various resources in the API.
      allOf:
        - $ref: '#/components/schemas/MetafieldBase'
        - type: object
          properties:
            id:
              type: string
              description: The unique identifier for the metafield.
            date_created:
              type: string
              format: date-time
              description: Date and time of the metafieldʼs creation.
              example: '2022-06-16T18:39:00+00:00'
            date_modified:
              type: string
              format: date-time
              description: Date and time when the metafield was last updated.
              example: '2022-06-16T18:39:00+00:00'
            owner_client_id:
              type: string
              description: Client ID for the metafieldʼs creator.
              example: asdfasdfasdfasdfasdfasdfasdf
              readOnly: true
      x-internal: false
    MetafieldBase:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on the storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on the storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          example: order
          minLength: 0
          maxLength: 255
        resource_type:
          type: string
          description: |
            The type of resource with which the metafield is associated.
          enum:
            - brand
            - product
            - variant
            - category
            - cart
            - store
          example: store
        resource_id:
          type: string
          description: |
            The unique identifier for the resource with which the metafield is associated.
          example: '0'
          readOnly: true
      required:
        - permission_set
    MetafieldBase_Post_Put:
      type: object
      description: |
        Common Metafield properties.
      x-internal: false
      properties:
        permission_set:
          type: string
          description: |
            Determines the visibility and writeability of the field by other API consumers.
            
            | Value | Description |
            | :--- | :--- |
            | `app_only` | Private to the app that owns the field. |
            | `read` | Visible to other API consumers. |
            | `write` | Open for reading and writing by other API consumers. |
            | `read_and_sf_access` | Visible to other API consumers, including on the storefront. |
            | `write_and_sf_access` | Open for reading and writing by other API consumers, including on the storefront. |
          enum:
            - app_only
            - read
            - write
            - read_and_sf_access
            - write_and_sf_access
        namespace:
          type: string
          description: |
            Namespace for the metafield, for organizational purposes.
          example: Sales Department
          minLength: 1
          maxLength: 64
        key:
          type: string
          description: |
            The name of the field, for example: `location_id`, `color`.
          minLength: 1
          maxLength: 64
          example: Staff Name
        value:
          type: string
          description: |
            The value of the field, for example: `1`, `blue`.
          minLength: 1
          maxLength: 65535
          example: Ronaldo
        description:
          type: string
          description: |
            Description for the metafields.
          minLength: 0
          maxLength: 255
          example: Name of Staff Member
      required:
        - permission_set
        - namespace
        - key
        - value
    MetaFieldCollectionResponse:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          $ref: '#/components/schemas/Metafield'
        meta:
          $ref: '#/components/schemas/metaCollection_open'
      x-internal: false
    MetaFieldCollectionResponse_Batch:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
    MetaFieldCollectionResponse_Batch_POST_PUT:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Metafield'
        errors:
          type: array
          items: {}
          description: Empty for 200 responses.
          example: [ ]
        meta:
          $ref: '#/components/schemas/WriteCollectionSuccessMeta'
    MetaFieldCollectionDeleteResponseSuccess:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            type: integer
            description: |
              The unique identifier for the metafield.
          example:
            - 123
            - 124
            - 125
        errors:
          type: array
          items: {}
          description: Empty for 200 responses.
          example: [ ]
        meta:
          $ref: '#/components/schemas/WriteCollectionSuccessMeta'
      x-internal: false
    MetaFieldCollectionResponsePartialSuccess_POST_PUT:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data: 
          type: array
          items: 
            $ref: '#/components/schemas/Metafield'
          description: Empty for 200 responses.
          example: []
        errors:
            $ref: '#/components/schemas/Error'
        meta:
            $ref: '#/components/schemas/WriteCollectionPartialSuccessMeta'
    MetaFieldCollectionResponsePartialSuccess_DELETE:
      type: object
      description: |
        Response payload for the BigCommerce API.
      properties:
        data:
          type: array
          items:
            type: integer
            description: |
              The unique identifier for the metafield.
          example:
            - 123
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        meta:
          $ref: '#/components/schemas/WriteCollectionPartialSuccessMeta'
      x-internal: false
    Error:
      type: object
      description: |
        Error response payload for the BigCommerce API.
      properties:
        status:
          type: integer
          description: |
            The HTTP status code for the error.
          example: 422
        title:
          type: string
          description: |
            The error title.
          example: Bulk operation has failed
        type:
          type: string
          description: |
            The error type.
          example: https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes
        errors:
          $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      properties: {}
      additionalProperties: true
      description: |
        Error detail response payload for the BigCommerce API.
      example:
        "0": "Entity already exists"
        "1": "Unauthorized to delete"
        "2": "Metafield does not exist"
    WriteCollectionSuccessMeta:
      type: object
      description: Additional data about the response.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 3
        success:
          type: integer
          description: |
            Total number of items that were successfully deleted.
          example: 3
        failed:
          type: integer
          description: |
            Total number of items that failed to be deleted.
          example: 0
      title: Collection Meta
      x-internal: false
    WriteCollectionPartialSuccessMeta:
      type: object
      description: Additional data about the response.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
          example: 3
        success:
          type: integer
          description: |
            Total number of items that were successfully deleted.
          example: 1
        failed:
          type: integer
          description: |
            Total number of items that failed to be deleted.
          example: 2
      title: Collection Meta
      x-internal: false
    CollectionMeta:
      type: object
      description: Data about the response, including pagination and collection totals.
      properties:
        pagination:
          type: object
          description: Data about the response, including pagination and collection totals.
          title: Pagination
          properties:
            total:
              type: integer
              description: |
                Total number of items in the result set.
              example: 36
            count:
              type: integer
              description: |
                Total number of items in the collection response.
              example: 36
            per_page:
              type: integer
              description: |
                The amount of items returned in the collection per page, controlled by the limit parameter.
              example: 50
            current_page:
              type: integer
              description: |
                The page you are currently on within the collection.
              example: 1
            total_pages:
              type: integer
              description: |
                The total number of pages in the collection.
              example: 1
            links:
              type: object
              description: |
                Pagination links for the previous and next parts of the whole collection.
              properties:
                previous:
                  type: string
                  description: |
                    Link to the previous page returned in the response.
                current:
                  type: string
                  description: |
                    Link to the current page returned in the response.
                  example: '?page=1&limit=50'
                next:
                  type: string
                  description: |
                    Link to the next page returned in the response.
      additionalProperties: true
      title: Collection Meta
      x-internal: false
    metaCollection_open:
      title: Response meta
      type: object
      properties: { }
      description: Response metadata.
    StoreInformation:
      title: Store Information
      type: object
      x-tags:
        - Models
      properties:
        id:
          description: The store hash, a unique store identifier.
          example: store_hash
          type: string
        account_uuid:
          description: |-
            The UUID of the account to which the store belongs.
          type: string
          format: uuid
        domain:
          description: Primary domain name.
          example: 'your-store-url.com'
          type: string
        secure_url:
          description: Store’s current HTTPS URL.
          example: 'https://your-store-url.com'
          type: string
        control_panel_base_url:
          type: string
          example: 'https://store-abc123.mybigcommerce.com'
          description: The secure hostname of the control panel.
        status:
          description: The status of the store.
          type: string
          example: live
        name:
          description: Store’s name.
          example: BigCommerce
          type: string
        first_name:
          description: Primary contact’s first name (as defined during the store sign-up process).
          example: Jane
          type: string
        last_name:
          description: Primary contact’s last name (as defined during the store sign-up process).
          example: Doe
          type: string
        address:
          description: Display address.
          example: BigCommerce
          type: string
        country:
          description: Country where the store is located (as defined during the store sign-up process).
          example: United States
          type: string
        country_code:
          type: string
          example: AU
          description: Two-letter ISO 3166-1 country code
        infrastructure_region:
          type: string
          example: us-central1
          description: The infrastructure region where the store is located. Use this to determine where to place supporting infrastructure for minimum latency to the store. Compare against GCP regions on https://cloud.google.com/compute/docs/regions-zones
        phone:
          description: Display phone number.
          type: string
        admin_email:
          description: Email address of the store administrator/owner.
          example: janedoes@example.com
          type: string
        order_email:
          description: Email address for orders and fulfillment.
          example: 'orders@example.com'
          type: string
        favicon_url:
          description: The URL of the favicon image associated with the website. This should be a valid URL pointing to an `.ico` or other supported icon format file.
          type: string 
        timezone:
          $ref: '#/components/schemas/Timezone'
        language:
          description: Default language code.
          example: en
          type: string
        currency:
          description: Default currency code.
          example: USD
          type: string
        currency_symbol:
          description: Default symbol for values in the currency.
          example: '$'
          type: string
        decimal_separator:
          description: Default decimal separator for values in the currency.
          example: '.'
          type: string
        thousands_separator:
          description: Default thousands separator for values in the currency.
          example: ','
          type: string
        decimal_places:
          description: Default decimal places for values in the currency.
          example: 2
          type: integer
        currency_symbol_location:
          description: Default position of the currency symbol (left or right).
          example: left
          type: string
        weight_units:
          description: Default weight units (metric or imperial).
          example: Ounces
          type: string
        dimension_units:
          description: Default dimension units (metric or imperial).
          example: Inches
          type: string
        dimension_decimal_places:
          description: The number of decimal places.
          example: 2
          type: integer
        dimension_decimal_token:
          description: The symbol that separates the whole numbers from the decimal points.
          example: .
          type: string
        dimension_thousands_token:
          description: The symbol used to denote thousands.
          type: string
        plan_name:
          description: Name of the BigCommerce plan to which this store is subscribed.
          example: Standard
          type: string
        plan_level:
          description: Level of the BigCommerce plan to which this store is subscribed.
          example: Standard
          type: string
        plan_is_trial:
          description: Whether the payment plan associated with the store is still in the trial phase.
          type: boolean
          example: false
        industry:
          description: 'Industry, or vertical category, in which the business operates. (As selected from drop-down list during the store sign-up process.)'
          example: Technology
          type: string
        logo:
          description: Either an object describing the logo image, or an empty array.
          anyOf:
            - type: object
              properties:
                url:
                  type: string
                  example: 'https://cdn8.bigcommerce.com/s-{store_hash}/product_images/screen_shot_2018-05-15_at_12.22.26_pm__05547_1529512135.png'
            - type: array
              items: {}
        is_price_entered_with_tax:
          description: A Boolean value that indicates whether or not prices are entered with tax.
          example: false
          type: boolean
        store_id:
          description: The numeric ID of the store. This is a different unique ID than the store hash.
          type: integer
        default_channel_id:
          description: The ID of the default channel. The ID of the first hosted storefront created on the store is `1`.
          default: 1
          example: 1
          type: integer
        default_site_id:
          description: The BigCommerce ID of the website associated with the default storefront.
          type: integer
          example: 1000
        active_comparison_modules:
          description: ''
          type: array
          items: {}
        features:
          description: |-
            Describes some aspects of the storeʼs tech stack and configuration settings that affect the features available for the store to use.
          type: object
          properties:
            stencil_enabled:
              type: boolean
              example: true
              default: true
              description: Indicates whether a store is using a Stencil theme.
            sitewidehttps_enabled:
              type: boolean
              example: false
              description: Indicates whether there is site-wide https.
            facebook_catalog_id:
              type: string
              description: The ID of the Facebook by Meta catalog. If there is none, this endpoint returns an empty string.
            checkout_type:
              type: string
              example: optimized
              description: |-
                What type of checkout is enabled on the store. Possible values returned are optimized, single (one page), single_customizable (one page for developers), klarna.
              enum:
                - optimized
                - single
                - single_customizable
                - klarna
            wishlists_enabled:
              type: boolean
              example: false
            graphql_storefront_api_enabled:
              type: boolean
              default: true
              example: true
              description: |-
                Describes whether you can use the [GraphQL Storefront API](/graphql-storefront/reference) on this store.
            shopper_consent_tracking_enabled:
              type: boolean
              example: true
              description: |-
                Indicates whether the store is tracking the values of the cookie and privacy consent settings that the shopper consented to and configured.
            multi_storefront_enabled:
              type: boolean
              example: true
              default: false
              description: |-
                Indicates whether the storeʼs plan provides the possibility of using more than one storefront or sales channel. Internally, this value indicates whether the store has the MSF feature flag enabled. 
            storefront_limits:
              type: object
              properties:
                active:
                  type: integer
                  minimum: 1
                  default: 1
                  example: 3
                  description: |-
                    Describes the number of storefronts active on the store. If `multi_storefront_enabled` is `false`, this value is `1`.
                total_including_inactive:
                  type: integer
                  minimum: 1
                  default: 1
                  example: 15
                  description: |-
                    Describes the total number of storefronts associated with the store, including both active and inactive storefronts. The default varies based on store plan.
    Timezone:
      title: Time Zone
      type: object
      properties:
        name:
          description: 'A string identifying the time zone, in the format `Continent/City`.'
          example: America/Chicago
          type: string
        raw_offset:
          description: 'A negative or positive number, identifying the offset from UTC/GMT, in seconds, during winter/standard time.'
          example: -21600
          type: integer
        dst_offset:
          description: 'A negative or positive number, identifying the offset from UTC/GMT, in seconds, during summer/daylight saving time.'
          example: -18000
          type: integer
        dst_correction:
          description: A boolean indicating whether this time zone observes daylight saving time.
          example: true
          type: boolean
        date_format:
          $ref: '#/components/schemas/DateFormat'
      x-internal: false
    DateFormat:
      title: Date Format
      type: object
      properties:
        display:
          description: 'A string that defines dates’ display format, in the pattern `M jS Y`.'
          example: 'M jS Y'
          type: string
        export:
          description: 'A string that defines the CSV export format for orders, customers, and products, in the pattern `M jS Y`.'
          example: 'M jS Y'
          type: string
        extended_display:
          description: 'A string that defines dates’ extended-display format, in the pattern `M jS Y @ g:i A`.'
          example: 'M jS Y @ g:i A'
          type: string
      x-internal: false
    timeStamp_Full:
      type: object
      properties:
        time:
          type: integer
          format: int64
          minimum: 0
      description: Store Time in Unix format.
      title: timeStamp_Full
      x-internal: false
  parameters:
    ContentType:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
    PageParam:
      name: page
      description: |
        Specifies the page number in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    MetafieldIdParam:
      name: metafieldId
      in: path
      description: |
        The ID of the `Metafield`.
      required: true
      schema:
        type: integer
    MetafieldKeyParam:
      name: key
      in: query
      description: Filter based on a metafieldʼs key.
      required: false
      schema:
        type: string
    MetafieldKeyInParam:
      name: key:in
      in: query
      description: Filter based on comma-separated metafieldʼs keys. Could be used with vanilla `key` query parameter.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    MetafieldNamespaceParam:
      name: namespace
      in: query
      description: Filter based on a metafieldʼs namespaces.
      required: false
      schema:
        type: string
    MetafieldNamespaceInParam:
      name: namespace:in
      in: query
      description: Filter based on comma-separated metafieldʼs namespaces. Could be used with vanilla `namespace` query parameter
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    LimitParam:
      name: limit
      description: |
        Controls the number of items per page in a limited (paginated) list of products.
      required: false
      in: query
      schema:
        type: integer
    DirectionParam:
      name: direction
      description: |
        Sort direction. Acceptable values are: `asc`, `desc`.
      required: false
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
    Accept:
      name: Accept
      in: header
      required: false
      description: 'The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.'
      schema:
        type: string
        default: application/json
