openapi: '3.0.3'
info:
  title: Webhooks v3
  version: ''
  description: 'Get notified when specific events occur on a BigCommerce store. For more information, see the [Webhooks Overview](/docs/integrations/webhooks).'
  termsOfService: 'https://www.bigcommerce.com/terms'
  contact:
    email: support@bigcommerce.com
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
tags:
  - name: Manage Webhooks (Single)
  - name: Manage Webhooks (Bulk)
  - name: Webhook Events
  - name: Webhooks Admin
security:
  - X-Auth-Token: []
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    variables:
      store_hash:
        default: store_hash
        description: Permanent ID of the BigCommerce store.
    description: BigCommerce API Gateway
paths:
  '/hooks':
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/webhook_Full'
                  meta: {}
              x-examples:
                application/json:
                  value:
                    data:
                      id: 18048287
                      client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                      store_hash: sftg45fsd
                      created_at: 1561488106
                      updated_at: 1561488106
                      scope: store/order/created
                      destination: 'https://665b65a6.ngrok.io/webhooks'
                      is_active: true
                      headers:
                        'custom-key': developer-defined value
                    meta: {}
          links:
            getHook:
              operationId: getWebhook
              parameters:
                webhook_id: $response.body#/id
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      summary: Create a Webhook
      description: Creates a webhook. Only one webhook at a time can be created. Custom headers can be added. Destination URL must be served on port 443 (custom ports are not currently supported).
      operationId: createWebhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
      tags:
        - Manage Webhooks (Bulk)
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhooks_Resp'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      summary: Get Webhooks
      description: |-
        Returns a list of all webhooks on a store associated to the `client_id` used to authenticate the request.

        *Note: BigCommerce determines the `client_id` from the `access_token`.*
      operationId: getWebhooks
      tags:
        - Manage Webhooks (Bulk)
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/FilterPageParam'
        - $ref: '#/components/parameters/FilterLimitParam'
        - $ref: '#/components/parameters/IsActive'
        - $ref: '#/components/parameters/FilterByScope'
        - $ref: '#/components/parameters/FilterByDestination'
  '/hooks/{webhook_id}':
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '404':
          $ref: '#/components/responses/404_NotFound'
      description: Return a webhook by ID.
      operationId: getWebhook
      summary: Get a Webhook
      tags:
        - Manage Webhooks (Single)
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
    parameters:
      - $ref: '#/components/parameters/WebhookId' 
    put:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Update a Webhook
      description: Updates a webhook. Custom headers can be added.
      operationId: updateWebhook
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Put'
        x-examples:
          application/json:
            scope: store/cart/lineItem/*
            destination: 'https://myapp.herokuapp.com/'
            is_active: true
            headers:
              User-Name: Hello
              Password: Goodbye
      tags:
        - Manage Webhooks (Single)
    delete:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Delete a Webhook
      description: Deletes a webhook. Only one webhook at a time can be deleted. When a webhook is deleted, it is returned in the response as a 200 OK.
      operationId: deleteWebhook
      tags:
        - Manage Webhooks (Single)
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
  '/hooks/admin':
    get:
      operationId: getHooksAdmin
      summary: Get Admin Info
      description: List all notification emails, webhooks, and denylisted domains associated with the API account.
      parameters:
        - $ref: '#/components/parameters/IsActive'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      emails:
                        description: Email addresses to be sent notifications.
                        type: array
                        items:
                          type: string
                          format: email
                          example: 'webhooks@example.com'
                      hooks_list:
                        description: 'List of all the webhooks associated with the provider API account, filtered by the `active` parameter.'
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID of the webhook
                            client_id:
                              type: string
                              minLength: 1
                              description: Client ID, unique to the store or app.
                            store_hash:
                              minLength: 1
                              type: string
                              description: Permanent ID of the BigCommerce store.
                            scope:
                              type: string
                              minLength: 1
                              description: Event you subscribe to
                              example: store/order/created
                            destination:
                              type: string
                              minLength: 1
                              description: URL must be active, return a 200 response, and be served on port 443. Custom ports aren ºt currently supported.
                            headers:
                              type: object
                              description: You can pass in any number of custom headers to validate webhooks being returned.
                              properties: {}
                              nullable: true
                              additionalProperties:
                                type: string
                            is_active:
                              type: boolean
                              description: If the webhook is active or not. A webhook subscription becomes deactivated after 90 days of inactivity.
                              default: true
                            created_at:
                              type: integer
                              example: 1561488106
                              description: The time the webhook was created, represented in UNIX epoch time.
                            updated_at:
                              type: integer
                              example: 1561488106
                              description: The time the webhook was most recently updated, represented in UNIX epoch time.
                            status:
                              type: string
                              description: The webhook status.
                              enum:
                                - inactive
                                - active
                                - deactivated
                      blocked_domains:
                        description: List of domains (destinations) that are currently on the denylist and are not being sent webhooks.
                        type: array
                        items:
                          type: object
                          properties:
                            destination:
                              description: Domain URL to which webhooks are sent.
                              type: string
                              format: url
                            time_left:
                              description: Remaining time in seconds that the domain is on the denylist.
                              type: integer
                            reasons:
                              type: array
                              items:
                                type: object
                                properties:
                                  failure_description:
                                    type: string
                                  count:
                                    type: integer
                                  timestamp:
                                    type: integer
                                    format: int64
                                    description: UTC timestamp in seconds that the events was created
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
              examples: {}
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      tags:
        - Webhooks Admin
    put:
      operationId: updateHooksAdmin
      summary: Upsert Email Notifications
      description: |
        Update email addresses that are sent notification emails when any domain associated with the API account is denylisted or when a webhook is deactivated. Supports `upsert` functionality in the case that no email address exists yet.
      requestBody:
        description: List of notification emails.
        content:
          application/json:
            schema:
              type: object
              properties:
                emails:
                  type: array
                  items:
                    type: string
                    format: email
                    example: 'webhooks@example.com'
            examples:
              Example:
                value:
                  emails:
                    - user@example.com
        required: true
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      tags:
        - Webhooks Admin
  '/hooks/events':
    get:
      tags:
        - Webhook Events
      summary: Get Events
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/FilterPageParam'
        - $ref: '#/components/parameters/FilterLimitParam'
        - $ref: '#/components/parameters/FilterMaxCreatedAtParam'
        - $ref: '#/components/parameters/FilterMinCreatedAtParam'
      operationId: getWebhookEvents
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/HistoryEvent'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '401':
          $ref: '#/components/responses/401_Unauthorized'
      description: |
        Get a list of events that were sent but not successfully received. Events are stored for not less than one week.
components:
  parameters:
    WebhookId:
      name: webhook_id
      in: path
      description: The ID of a Webhook.
      required: true
      schema:
        type: integer
        minimum: 1
        example: 22561593
    IsActive:
      name: is_active
      in: query
      description: |
        Enables user to filter for webhooks that are active or not. A webhook subscription becomes deactivated after 90 days of inactivity.
      schema:
        type: boolean
        example: true
    FilterByScope:
      name: scope
      in: query
      description: |
        Enables user to filter for webhooks by scope.
      schema:
        type: string
    FilterByDestination:
      name: destination
      in: query
      description: |
        Enables user to filter for webhooks by destination.
      schema:
        type: string
    FilterPageParam:
      name: page
      in: query
      description: |
        Page number.
      required: false
      schema:
        type: integer
        example: 1
    FilterLimitParam:
      name: limit
      in: query
      description: |
        Items count per page.
      required: false
      schema:
        type: integer
    FilterMaxCreatedAtParam:
      name: 'created_at:max'
      in: query
      description: |
        Maximum value for returned data.
      required: false
      schema:
        type: string
    FilterMinCreatedAtParam:
      name: 'created_at:min'
      in: query
      description: |
        Minimum value for returned data.
      required: false
      schema:
        type: string
    Accept:
      in: header
      name: Accept
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
  responses:
    webhooks_Resp:
      description: ''
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              data:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    client_id:
                      type: string
                      minLength: 1
                    store_hash:
                      type: string
                      minLength: 1
                    scope:
                      type: string
                      minLength: 1
                    destination:
                      type: string
                      minLength: 1
                    headers:
                      type: object
                      properties: {}
                      nullable: true
                      additionalProperties:
                        type: string
                    is_active:
                      type: boolean
                    created_at:
                      type: integer
                      description: The time the webhook was created, represented in UNIX epoch time.
                    updated_at:
                      type: integer
                      description: The time the webhook was most recently updated, represented in UNIX epoch time.
              meta:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
          examples: {}
    502_GatewayError:
      description: If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: /api-docs/getting-started/api-status-codes
    503_ServiceUnavailable:
      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce [system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: /api-docs/getting-started/api-status-codes
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce [system status](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON request body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: /api-docs/getting-started/api-status-codes
    401_Unauthorized:
      description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 401
                title: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
                type: /api-docs/getting-started/api-status-codes
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: /api-docs/getting-started/api-status-codes
    404_NotFound:
      description: If the requested webhook is not found, return a 404 Not Found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 404
                title: 'Webhook with id [{webhook_id}] not found'
                type: /api-docs/getting-started/api-status-codes
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: /api-docs/getting-started/api-status-codes
                errors:
                  destination: error.path.missing.
    webhook_Resp:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                data:
                  id: 22041448
                  client_id: hm6ttr1z8fzu2utb7d1p9qile9jtugv
                  store_hash: 29iql3rwa6
                  scope: store/order/created
                  destination: 'https://665b65a6.ngrok.io/webhooks'
                  headers: null
                  is_active: false
                  created_at: 1626812212
                  updated_at: 1627588222
                meta: {}
            properties:
              data:
                type: object
                properties:
                  id:
                    type: integer
                  client_id:
                    type: string
                    minLength: 1
                  store_hash:
                    type: string
                    minLength: 1
                  scope:
                    type: string
                    minLength: 1
                  destination:
                    type: string
                    minLength: 1
                  headers:
                    type: object
                    properties: {}
                    nullable: true
                    additionalProperties:
                      type: string
                  is_active:
                    type: boolean
                  created_at:
                    type: integer
                    description: The time the webhook was created, represented in UNIX epoch time.
                  updated_at:
                    type: integer
                    description: The time the webhook was most recently updated, represented in UNIX epoch time.
              meta: {}
          examples:
            application/json:
              value:
                data:
                  id: 18048287
                  client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                  store_hash: sftg45fsd
                  created_at: 1561488106
                  updated_at: 1561488106
                  scope: store/order/created
                  destination: 'https://665b65a6.ngrok.io/webhooks'
                  is_active: true
                  headers:
                    'custom-key': developer-defined value
                meta: {}
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      description: |-
        ### OAuth scopes

        None required. Create and manage webhooks with the default scope of an API account.

        ### Authentication header
        
        | Header | Argument | Description |
        |:-------|:---------|:------------|
        | `X-Auth-Token` | `access_token` | For more about API accounts that generate `access_token`s, see our [Guide to API Accounts](/docs/start/authentication/api-accounts). |
        
        ### Further reading
        
        For example requests and more information about authenticating BigCommerce APIs, see [Authentication and Example Requests](/docs/start/authentication#x-auth-token-header-example-requests).
        
        For more about BigCommerce OAuth scopes, see our [Guide to API Accounts](/docs/start/authentication/api-accounts#oauth-scopes).
        
        For a list of API status codes, see [API Status Codes](/docs/start/about/status-codes).
      type: apiKey
      in: header
  schemas:
    error_Full:
      type: object
      title: error_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          description: This value is typically a link to BigCommerce API Status codes.
          type: string
      x-internal: false
    errorDetailed_Full:
      type: object
      title: errorDetailed_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          description: Typically a link to BigCommerce API Status codes
          type: string
        errors:
          type: object
      x-internal: false
    webhook_Put:
      type: object
      title: webhook_Put
      x-internal: false
      properties:
        scope:
          type: string
          example: store/order/created
          description: Event you subscribe to.
        destination:
          type: string
          example: 'https://665b65a6.ngrok.io/webhooks'
          description: URL must be active, return a 200 response, and be served on port 443. Custom ports aren ºt currently supported.
        is_active:
          type: boolean
          example: true
          description: Boolean value that indicates whether the webhook is active or not.
        events_history_enabled:
          type: boolean
          example: true
          description: Boolean value that identifies whether events are stored that could not be received.
        headers:
          type: object
          description: Headers used to validate that webhooks are active. You can pass in any number of custom headers to validate webhooks are being returned.
          nullable: true
          properties: {}
          additionalProperties:
            type: string
    webhook_Base:
      type: object
      title: webhook_Base
      x-internal: false
      properties:
        scope:
          type: string
          example: store/order/created
          description: Event you subscribe to.
        destination:
          type: string
          example: 'https://665b65a6.ngrok.io/webhooks'
          description: URL must be active, return a 200 response, and be served on port 443. Custom ports aren ºt currently supported.
        is_active:
          type: boolean
          example: true
          description: Boolean value that indicates whether the webhook is active or not. A webhook subscription becomes deactivated after 90 days of inactivity.
        
        headers:
          type: object
          description: Headers used to validate that webhooks are active. You can pass in any number of custom headers to validate webhooks are being returned.
          nullable: true
          properties: {}
          additionalProperties:
            type: string
      required:
        - scope
        - destination
    webhook_Full:
      allOf:
        - title: webhook_Full
          properties:
            id:
              type: integer
              description: ID of the webhook.
              example: 18048287
            client_id:
              type: string
              description: Client ID, unique to the store or app.
              example: m9r6keqmo7h7f23btnpwernbez1kglkl
            store_hash:
              type: string
              description: Permanent ID of the BigCommerce store.
              example: sftg45fsd
            created_at:
              type: integer
              example: 1561488106
              description: The time the webhook was created, represented in UNIX epoch time.
            updated_at:
              type: integer
              example: 1561488106
              description: The time the webhook was most recently updated, represented in UNIX epoch time.
        - $ref: '#/components/schemas/webhook_Base'
    HistoryEvent:
      type: object
      properties:
        scope:
          type: string
          description: Alias where the event occurred.
        store_id:
          type: string
          description: A numerical identifier that is unique to each store.
        data:
          type: object
          description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
        hash:
          type: string
          description: The payload data encoded in JSON format and then passed through SH1 encryption.
        created_at:
          type: integer
          format: int64
          description: UTC timestamp, in seconds, that the events was created.
        producer:
          type: string
          description: Will always follow the pattern stores/store_hash. This is the store that created the webhook.
    Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: Total number of returned items across all pages.
        count:
          type: integer
          description: Number of items on current page.
        per_page:
          type: integer
          description: Maximum number of items per page.
        current_page:
          type: integer
          description: Current page number.
        total_pages:
          type: integer
          description: Total number of pages.
        links:
          type: object
          properties:
            previous:
              type: string
              description: Link to the previous page returned in the response.
            current:
              type: string
              description: Link to the current page returned in the response.
            next:
              type: string
              description: Link to the next page returned in the response.
      x-internal: false
    webhook_callback_base:
      description: ''
      x-examples:
        example-1:
          created_at: 1561482670
          store_id: '1025646'
          producer: 'stores/{store_hash}'
          scope: store/cart/created
          hash: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
      title: ''
      allOf:
        - properties:
            created_at:
              type: integer
              example: 1561488106
              description: The time the webhook was created, represented in UNIX epoch time.
              readOnly: true
            store_id:
              type: string
              minLength: 1
              example: '1025646'
              description: A numerical identifier that is unique to each store.
            producer:
              type: string
              minLength: 1
              example: 'stores/{store_hash}'
              description: Will always follow the pattern `stores/store_hash`. This is the store that created the webhook.
            scope:
              type: string
              minLength: 1
              example: store/cart/created
              description: The event registered when the webhook was created.
            hash:
              type: string
              minLength: 1
              example: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
              description: The payload data encoded in JSON format and then passed through SH1 encryption.
      type: object
      x-internal: false
    callback_category_data:
      title: callback_category_data
      type: object
      description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
      properties:
        data:
          type: object
          description: A lightweight description of the event that triggered the webhook. Will vary depending on the event registered.
          properties:
            type:
              type: string
              description: This type will always be `category`.
              default: category
            id:
              type: integer
              description: ID of the category.
              example: 42
      x-internal: false
